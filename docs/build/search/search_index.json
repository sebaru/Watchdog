{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Watchdog, ou comment g\u00e9rer simplement votre habitat ! Le logiciel libre Watchdog est un ensemble de composants distribu\u00e9s selon les termes de la licence GPL: un serveur permanent une interface web un client lourd et (plus tard !) une application mobile native. Le composant serveur f\u00e9d\u00e8re un ensemble de capteurs et d'actionneurs au travers d'un langage de programmation simple qui vous permettra de g\u00e9rer votre habitat facilement ! Les connecteurs permettent en temps r\u00e9el de connaitre l'\u00e9tat de vos capteurs, d'envoyer des commandes, ou encore d\u2019\u00eatre alert\u00e9 par SMS ou messagerie instantan\u00e9e en cas d'\u00e9v\u00e8nements impr\u00e9vus, ou bien n\u00e9cessitant votre intervention. Ainsi, aux travers d'interfaces conviviales vous saurez : Quelles sont les temp\u00e9ratures ext\u00e9rieures et de votre salon, Quelle est votre consommation \u00e9lectrique instantan\u00e9e. Piloter manuellement ou via l'intelligence embarqu\u00e9e vos radiateurs selon vos besoins G\u00e9rer la pompe de votre puit ou de votre bac de r\u00e9tention des eaux de pluie, Arroser automatiquement votre jardin selon les cr\u00e9neaux horaires et les saisons, Et engager des \u00e9conomies financi\u00e8res !","title":"Tour d'horizon"},{"location":"#watchdog-ou-comment-gerer-simplement-votre-habitat","text":"Le logiciel libre Watchdog est un ensemble de composants distribu\u00e9s selon les termes de la licence GPL: un serveur permanent une interface web un client lourd et (plus tard !) une application mobile native. Le composant serveur f\u00e9d\u00e8re un ensemble de capteurs et d'actionneurs au travers d'un langage de programmation simple qui vous permettra de g\u00e9rer votre habitat facilement ! Les connecteurs permettent en temps r\u00e9el de connaitre l'\u00e9tat de vos capteurs, d'envoyer des commandes, ou encore d\u2019\u00eatre alert\u00e9 par SMS ou messagerie instantan\u00e9e en cas d'\u00e9v\u00e8nements impr\u00e9vus, ou bien n\u00e9cessitant votre intervention. Ainsi, aux travers d'interfaces conviviales vous saurez : Quelles sont les temp\u00e9ratures ext\u00e9rieures et de votre salon, Quelle est votre consommation \u00e9lectrique instantan\u00e9e. Piloter manuellement ou via l'intelligence embarqu\u00e9e vos radiateurs selon vos besoins G\u00e9rer la pompe de votre puit ou de votre bac de r\u00e9tention des eaux de pluie, Arroser automatiquement votre jardin selon les cr\u00e9neaux horaires et les saisons, Et engager des \u00e9conomies financi\u00e8res !","title":" Watchdog, ou comment g\u00e9rer simplement votre habitat !"},{"location":"auteurs/","text":"Notre petite \u00e9quipe N'h\u00e9sitez pas \u00e0 prendre contact avec nous ! Nous contacter S\u00e9bastien , developpeur principal. sebastien.lefevre@abls-habitat.fr Bruno , prend en charge toute la partie physique (electricit\u00e9, electronique, installation des cameras, ...) bruno.lefevre@abls-habitat.fr Nous aider ou faire un don Pour nous aider, vous pouvez faire un don ou bien nous proposer vos services. Nous recherchons par exemple: des infographistes pour compl\u00e9ter les visuels disponibles des developpeurs web (javascript) toutes bonnes volont\u00e9s pour nous aider dans ce p\u00e9riple de plus de 20 ans maintenant !","title":"Qui sommes-nous ?"},{"location":"auteurs/#notre-petite-equipe","text":"N'h\u00e9sitez pas \u00e0 prendre contact avec nous !","title":" Notre petite \u00e9quipe"},{"location":"auteurs/#nous-contacter","text":"S\u00e9bastien , developpeur principal. sebastien.lefevre@abls-habitat.fr Bruno , prend en charge toute la partie physique (electricit\u00e9, electronique, installation des cameras, ...) bruno.lefevre@abls-habitat.fr","title":"Nous contacter"},{"location":"auteurs/#nous-aider-ou-faire-un-don","text":"Pour nous aider, vous pouvez faire un don ou bien nous proposer vos services. Nous recherchons par exemple: des infographistes pour compl\u00e9ter les visuels disponibles des developpeurs web (javascript) toutes bonnes volont\u00e9s pour nous aider dans ce p\u00e9riple de plus de 20 ans maintenant !","title":"Nous aider ou faire un don"},{"location":"dls/","text":"Pr\u00e9sentation de la programmation D.L.S Les modules d'intelligence sont nomm\u00e9s Module D.L.S. Ils permettent, via un langage de programmation issu des automates, de d\u00e9finir quel doit etre l'\u00e9tat de sortie d'un objet en fonction d'un ensemble d'\u00e9tats d'entr\u00e9es. Dans l'interface web, vous pouvez lister et \u00e9diter ces modules D.L.S en utilisant le menu Configuration->Modules D.L.S . M\u00e9moire d'informations L'ensemble des diff\u00e9rents modules D.L.S partagent la m\u00eame m\u00e9moire d'informations. Toutes les informations sont accessibles en lecture et \u00e9criture par tous les plugins D.L.S. Chaque \u00e9l\u00e9ment est caract\u00e9ris\u00e9 par sa classe : une entr\u00e9e, une sortie, un message, un compteur, ... par son tech_id , repr\u00e9sentant le module D.L.S auquel il est rattach\u00e9 par son acronyme , repr\u00e9sentant son nom dans la m\u00e9moire d'information Par exemple: le bit GARAGE:OUVERTURE peut repr\u00e9senter une entr\u00e9e correspondant \u00e0 l'\u00e9tat d'OUVERTURE ou de fermeture de l'ouvrant GARAGE. Ou encore, le bit PORTAIL:NBR_OUVERTURE peut repr\u00e9senter un compteur associ\u00e9 au nombre d'ouverture du PORTAIL. Deux bits de deux modules diff\u00e9rents peuvent porter le m\u00eame acronyme, dans la mesure ou leurs tech_id seront diff\u00e9rents. Exemple : JARDIN:TEMPERATURE et CUISINE:TEMPERATURE Par construction, dans un code source D.L.S, si un bit interne ne sp\u00e9cifie pas son tech_id, celui du module D.L.S d'appartenance est utilis\u00e9. Les diff\u00e9rentes classes utilis\u00e9es sont les suivantes: Classe Repr\u00e9sentation Exemple Description _E Entr\u00e9e TOR PORTE:OUVERTE Une entr\u00e9e TOR peut avoir 2 valeurs : 0 ou 1 et repr\u00e9sente l'\u00e9tat physique d'un capteur _EA Entr\u00e9e Analogique TEMP:JARDIN Une entr\u00e9e Analogique repr\u00e9sente une valeur d'un capteur analogique. Celle-ci dispose d'options permettant au systeme de savoir comment interpr\u00e9ter les informations fournies par les capteurs (4/20mA, 0-10V, ...) _A Sortie TOR VANNE:OUVRIR Une sortie TOR peut avoir 2 valeurs : 0 ou 1, et repr\u00e9sente l'\u00e9tat souhait\u00e9 d'un actionneur _AA Sortie Analogique CHAUDIERE:CONSIGNE Une sortie Analogique represente la valeur souhait\u00e9e d'un actionneur analogique. Elle dispose d'options permettant au systeme de traduire une valeur reelle en valeur compr\u00e9hensible par les actionneurs. _B Bistable SYS:FLIPFLOP_1SEC Bit dont la valeur est 0 ou 1, maintenu dans le temps. Il faut explicitement coder la mise \u00e0 zero du bit pour que celui-ci soit effectivement remis \u00e0 0. _M Monostable SYS:TOP_1SEC Les monostables sont des bits furtifs, non maintenus dans le temps. Si la condition initiale qui imposait le maintien du bit n'est plus vraie, ce bit va alors tomber de lui-meme \u00e0 0. _CI Compteur d'impulsions PUIT:LITRE Incr\u00e9ment\u00e9 \u00e0 chaque front montant de sa condition de pilotage _CH Compteur Horaire POMPE:DUREE_VIE Temps seconde repr\u00e9sentant la dur\u00e9e effective de maintien de sa condition de pilotage _T Temporisation GARAGE:TEMPO_OUV_PORTE Les temporisations permettent de d\u00e9caler, maintenir ou limiter dans le temps un evenement particulier _R Registre EDF:EQUIV_KWH Les registres permettent de manipuler des points de consignes, de seuil, et permettent de r\u00e9aliser des calculs _HORLOGE Horloge SALON:DMD_FERMETURE_VOLET Les horloges sont des valeurs binaires positionn\u00e9es a une heure bien pr\u00e9cise de la journ\u00e9e _WATCHDOG Watchdog PRESENCE:CPT_A_REBOURS Les comptes a rebours permettent de decompter le temps \u00e0 partir d'un evenement et de r\u00e9agir si cet evenement n'est pas revenu au bout d'une consigne pr\u00e9cise. _MSG Messages EDF:PRESENCE_TENSION Les messages peremttent de notifier les utilisateurs. Ils sont diffus\u00e9s dans l'interface, par SMS ou par messagerie instantan\u00e9e ou par mail. _I Visuels ENTREE:PORTE Les visuels repr\u00e9sentent des images associ\u00e9s aux objets, sous diff\u00e9rentes formes et couleurs. Grammaire D.L.S Un module D.L.S pr\u00e9sentera deux zones distinctes : la zone de description des ALIAS la zone de description des Liens la zone de description du fonctionnement logique la zone de description des calculs Les commentaires Dans tout le code D.L.S, il est possible d'int\u00e9grer des commentaires. Utiles pour augmenter le niveau de lisibilit\u00e9 du code, ils permettent aussi d'acc\u00e9l\u00e9rer la compr\u00e9hension du mode de fonctionnement. Un commentaire commence par la chaine \u00ab /* \u00bb et se finit par la chaine \u00ab */ \u00bb Exemple de syntaxe: - a . b \u2192 c; /* Ceci est un commentaire */ Exemple de module D.L.S simple /* Zone d'Alias */ #define POS_CAPTEUR <-> _E(libelle=\"Position du capteur d'ouverture\"); #define MON_COMPTEUR <-> _CI(libelle=\"Nombre d'ouvertures de la porte\"); /* Zone de liens */ #link EDF:VISUEL_ECLAIR; /* Lien vers le visuels de l'\u00e9clair du module D.L.S EDF. Celui-ci apparaitra sur la page syntoptique de ce module */ /* Zone de logique et de calcul */ - POS_CAPTEUR -> MON_COMPTEUR; /* Si la porte est ouverte, on augmente de 1 la valeur de compteur */ Bits locaux \u00e0 chaque module Nom du bit Classe Positionn\u00e9 par D\u00e9faut Description _MEMSA_COMM Activit\u00e9 Module TRUE TRUE si la communication est OK, sinon FALSE. _MEMSA_DEFAUT Activit\u00e9 Module FALSE TRUE si le module est en d\u00e9faut _MEMSA_DEFAUT_FIXE Activit\u00e9 Module FALSE TRUE si le module est en d\u00e9faut fixe _MEMSA_ALARME Activit\u00e9 Module FALSE TRUE si le module est en alarme _MEMSA_ALARME_FIXE Activit\u00e9 Module FALSE TRUE si le module est en alarme fixe _MEMSA_OK Activit\u00e9 Syst\u00e8me TRUE Bit de synth\u00e8se de l'activit\u00e9. Calcul\u00e9 par rapport aux 5 bits pr\u00e9c\u00e9dents _MEMSSB_VEILLE S\u00e9curit\u00e9 des Biens Module FALSE TRUE si le module est en veille _MEMSSB_ALERTE S\u00e9curit\u00e9 des Biens Module FALSE TRUE si le module est en alerte _MEMSSB_ALERTE_FUGITIVE S\u00e9curit\u00e9 des Biens Module FALSE TRUE si le module est en alerte fugitive _MEMSSB_ALERTE_FIXE S\u00e9curit\u00e9 des Biens Module FALSE TRUE si le module est en alerte fixe _MEMSSP_DERANGEMENT S\u00e9curit\u00e9 des Personnes Module FALSE TRUE si le module est en d\u00e9rangement _MEMSSP_DERANGEMENT_FIXE S\u00e9curit\u00e9 des Personnes Module FALSE TRUE si le module est en d\u00e9rangement fixe _MEMSSP_DANGER S\u00e9curit\u00e9 des Personnes Module FALSE TRUE si le module remonte un danger imminent _MEMSSP_DANGER_FIXE S\u00e9curit\u00e9 des Personnes Module FALSE TRUE si le module remonte un danger imminent (fixe). _MEMSSP_OK S\u00e9curit\u00e9 des Personnes Syst\u00e8me TRUE Bit de synth\u00e8se de la s\u00e9curit\u00e9 des personnes. Calcul\u00e9 par rapport aux 4 bits pr\u00e9c\u00e9dents. _OSYN_ACQUIT Acquit Syst\u00e8me FALSE Bit positionn\u00e9 par le syst\u00e8me lors d'une demande d'acquit synoptique","title":"Le concept"},{"location":"dls/#presentation-de-la-programmation-dls","text":"Les modules d'intelligence sont nomm\u00e9s Module D.L.S. Ils permettent, via un langage de programmation issu des automates, de d\u00e9finir quel doit etre l'\u00e9tat de sortie d'un objet en fonction d'un ensemble d'\u00e9tats d'entr\u00e9es. Dans l'interface web, vous pouvez lister et \u00e9diter ces modules D.L.S en utilisant le menu Configuration->Modules D.L.S .","title":"Pr\u00e9sentation de la programmation D.L.S"},{"location":"dls/#memoire-dinformations","text":"L'ensemble des diff\u00e9rents modules D.L.S partagent la m\u00eame m\u00e9moire d'informations. Toutes les informations sont accessibles en lecture et \u00e9criture par tous les plugins D.L.S. Chaque \u00e9l\u00e9ment est caract\u00e9ris\u00e9 par sa classe : une entr\u00e9e, une sortie, un message, un compteur, ... par son tech_id , repr\u00e9sentant le module D.L.S auquel il est rattach\u00e9 par son acronyme , repr\u00e9sentant son nom dans la m\u00e9moire d'information Par exemple: le bit GARAGE:OUVERTURE peut repr\u00e9senter une entr\u00e9e correspondant \u00e0 l'\u00e9tat d'OUVERTURE ou de fermeture de l'ouvrant GARAGE. Ou encore, le bit PORTAIL:NBR_OUVERTURE peut repr\u00e9senter un compteur associ\u00e9 au nombre d'ouverture du PORTAIL. Deux bits de deux modules diff\u00e9rents peuvent porter le m\u00eame acronyme, dans la mesure ou leurs tech_id seront diff\u00e9rents. Exemple : JARDIN:TEMPERATURE et CUISINE:TEMPERATURE Par construction, dans un code source D.L.S, si un bit interne ne sp\u00e9cifie pas son tech_id, celui du module D.L.S d'appartenance est utilis\u00e9. Les diff\u00e9rentes classes utilis\u00e9es sont les suivantes: Classe Repr\u00e9sentation Exemple Description _E Entr\u00e9e TOR PORTE:OUVERTE Une entr\u00e9e TOR peut avoir 2 valeurs : 0 ou 1 et repr\u00e9sente l'\u00e9tat physique d'un capteur _EA Entr\u00e9e Analogique TEMP:JARDIN Une entr\u00e9e Analogique repr\u00e9sente une valeur d'un capteur analogique. Celle-ci dispose d'options permettant au systeme de savoir comment interpr\u00e9ter les informations fournies par les capteurs (4/20mA, 0-10V, ...) _A Sortie TOR VANNE:OUVRIR Une sortie TOR peut avoir 2 valeurs : 0 ou 1, et repr\u00e9sente l'\u00e9tat souhait\u00e9 d'un actionneur _AA Sortie Analogique CHAUDIERE:CONSIGNE Une sortie Analogique represente la valeur souhait\u00e9e d'un actionneur analogique. Elle dispose d'options permettant au systeme de traduire une valeur reelle en valeur compr\u00e9hensible par les actionneurs. _B Bistable SYS:FLIPFLOP_1SEC Bit dont la valeur est 0 ou 1, maintenu dans le temps. Il faut explicitement coder la mise \u00e0 zero du bit pour que celui-ci soit effectivement remis \u00e0 0. _M Monostable SYS:TOP_1SEC Les monostables sont des bits furtifs, non maintenus dans le temps. Si la condition initiale qui imposait le maintien du bit n'est plus vraie, ce bit va alors tomber de lui-meme \u00e0 0. _CI Compteur d'impulsions PUIT:LITRE Incr\u00e9ment\u00e9 \u00e0 chaque front montant de sa condition de pilotage _CH Compteur Horaire POMPE:DUREE_VIE Temps seconde repr\u00e9sentant la dur\u00e9e effective de maintien de sa condition de pilotage _T Temporisation GARAGE:TEMPO_OUV_PORTE Les temporisations permettent de d\u00e9caler, maintenir ou limiter dans le temps un evenement particulier _R Registre EDF:EQUIV_KWH Les registres permettent de manipuler des points de consignes, de seuil, et permettent de r\u00e9aliser des calculs _HORLOGE Horloge SALON:DMD_FERMETURE_VOLET Les horloges sont des valeurs binaires positionn\u00e9es a une heure bien pr\u00e9cise de la journ\u00e9e _WATCHDOG Watchdog PRESENCE:CPT_A_REBOURS Les comptes a rebours permettent de decompter le temps \u00e0 partir d'un evenement et de r\u00e9agir si cet evenement n'est pas revenu au bout d'une consigne pr\u00e9cise. _MSG Messages EDF:PRESENCE_TENSION Les messages peremttent de notifier les utilisateurs. Ils sont diffus\u00e9s dans l'interface, par SMS ou par messagerie instantan\u00e9e ou par mail. _I Visuels ENTREE:PORTE Les visuels repr\u00e9sentent des images associ\u00e9s aux objets, sous diff\u00e9rentes formes et couleurs.","title":"M\u00e9moire d'informations"},{"location":"dls/#grammaire-dls","text":"Un module D.L.S pr\u00e9sentera deux zones distinctes : la zone de description des ALIAS la zone de description des Liens la zone de description du fonctionnement logique la zone de description des calculs","title":"Grammaire D.L.S"},{"location":"dls/#les-commentaires","text":"Dans tout le code D.L.S, il est possible d'int\u00e9grer des commentaires. Utiles pour augmenter le niveau de lisibilit\u00e9 du code, ils permettent aussi d'acc\u00e9l\u00e9rer la compr\u00e9hension du mode de fonctionnement. Un commentaire commence par la chaine \u00ab /* \u00bb et se finit par la chaine \u00ab */ \u00bb Exemple de syntaxe: - a . b \u2192 c; /* Ceci est un commentaire */","title":"Les commentaires"},{"location":"dls/#exemple-de-module-dls-simple","text":"/* Zone d'Alias */ #define POS_CAPTEUR <-> _E(libelle=\"Position du capteur d'ouverture\"); #define MON_COMPTEUR <-> _CI(libelle=\"Nombre d'ouvertures de la porte\"); /* Zone de liens */ #link EDF:VISUEL_ECLAIR; /* Lien vers le visuels de l'\u00e9clair du module D.L.S EDF. Celui-ci apparaitra sur la page syntoptique de ce module */ /* Zone de logique et de calcul */ - POS_CAPTEUR -> MON_COMPTEUR; /* Si la porte est ouverte, on augmente de 1 la valeur de compteur */","title":"Exemple de module D.L.S simple"},{"location":"dls/#bits-locaux-a-chaque-module","text":"Nom du bit Classe Positionn\u00e9 par D\u00e9faut Description _MEMSA_COMM Activit\u00e9 Module TRUE TRUE si la communication est OK, sinon FALSE. _MEMSA_DEFAUT Activit\u00e9 Module FALSE TRUE si le module est en d\u00e9faut _MEMSA_DEFAUT_FIXE Activit\u00e9 Module FALSE TRUE si le module est en d\u00e9faut fixe _MEMSA_ALARME Activit\u00e9 Module FALSE TRUE si le module est en alarme _MEMSA_ALARME_FIXE Activit\u00e9 Module FALSE TRUE si le module est en alarme fixe _MEMSA_OK Activit\u00e9 Syst\u00e8me TRUE Bit de synth\u00e8se de l'activit\u00e9. Calcul\u00e9 par rapport aux 5 bits pr\u00e9c\u00e9dents _MEMSSB_VEILLE S\u00e9curit\u00e9 des Biens Module FALSE TRUE si le module est en veille _MEMSSB_ALERTE S\u00e9curit\u00e9 des Biens Module FALSE TRUE si le module est en alerte _MEMSSB_ALERTE_FUGITIVE S\u00e9curit\u00e9 des Biens Module FALSE TRUE si le module est en alerte fugitive _MEMSSB_ALERTE_FIXE S\u00e9curit\u00e9 des Biens Module FALSE TRUE si le module est en alerte fixe _MEMSSP_DERANGEMENT S\u00e9curit\u00e9 des Personnes Module FALSE TRUE si le module est en d\u00e9rangement _MEMSSP_DERANGEMENT_FIXE S\u00e9curit\u00e9 des Personnes Module FALSE TRUE si le module est en d\u00e9rangement fixe _MEMSSP_DANGER S\u00e9curit\u00e9 des Personnes Module FALSE TRUE si le module remonte un danger imminent _MEMSSP_DANGER_FIXE S\u00e9curit\u00e9 des Personnes Module FALSE TRUE si le module remonte un danger imminent (fixe). _MEMSSP_OK S\u00e9curit\u00e9 des Personnes Syst\u00e8me TRUE Bit de synth\u00e8se de la s\u00e9curit\u00e9 des personnes. Calcul\u00e9 par rapport aux 4 bits pr\u00e9c\u00e9dents. _OSYN_ACQUIT Acquit Syst\u00e8me FALSE Bit positionn\u00e9 par le syst\u00e8me lors d'une demande d'acquit synoptique","title":"Bits locaux \u00e0 chaque module"},{"location":"dls_alias/","text":"Programmation D.L.S: les Alias Un alias permet de cr\u00e9er un bit interne dans la m\u00e9moire d'information en lui donnant une classe et des param\u00e8tres de configuration D\u00e9clarer un ALIAS Cette zone permet d'associer un ACRONYME \u00e0 une classe de bit interne au sein d'un module D.L.S TECH_ID . Cet ACRONYME pourra \u00eatre utilis\u00e9 dans le code de fonctionnement du module TECH_ID lui-m\u00eame. Il pourra \u00e9galement \u00eatre utilis\u00e9 dans d'autres modules D.L.S sous sa forme compl\u00e8te TECH_ID : ACRONYME Il s'agit d'une zone dont la syntaxe est la suivante: #define ACRONYME <-> _CLASSE; Elle commence directement par une chaine de caract\u00e8res repr\u00e9sentant l' ACRONYME , puis une double fl\u00e8che (un inf\u00e9rieur \u00ab < \u00bb, un tiret \u00ab - \u00bb, un sup\u00e9rieur \u00ab > \u00bb), une Classe, et enfin un point virgule terminal. Des options peuvent \u00eatre affect\u00e9es \u00e0 cet alias, en utilisant la syntaxe suivante : #define ACRONYME <-> _CLASSE (OPTIONS); /* OPTIONS \u00e9tant une liste de champ=valeur, s\u00e9par\u00e9e par des virgules ',' */ Exemple de syntaxe compl\u00e8te : #define VOLET_OUVERT <-> _E; /* VOLET_OUVERT sera mapp\u00e9 \u00e0 une Entr\u00e9e Physique (par exemple, \u00e0 un module MODBUS, ou \u00e0 la reception d'un SMS) */ #define CDE_VOLET <-> _M; /* CDE_VOLET sera utilis\u00e9 en tant que monostable dans la suite du code D.L.S */","title":"Les alias"},{"location":"dls_alias/#programmation-dls-les-alias","text":"Un alias permet de cr\u00e9er un bit interne dans la m\u00e9moire d'information en lui donnant une classe et des param\u00e8tres de configuration","title":"Programmation D.L.S: les Alias"},{"location":"dls_alias/#declarer-un-alias","text":"Cette zone permet d'associer un ACRONYME \u00e0 une classe de bit interne au sein d'un module D.L.S TECH_ID . Cet ACRONYME pourra \u00eatre utilis\u00e9 dans le code de fonctionnement du module TECH_ID lui-m\u00eame. Il pourra \u00e9galement \u00eatre utilis\u00e9 dans d'autres modules D.L.S sous sa forme compl\u00e8te TECH_ID : ACRONYME Il s'agit d'une zone dont la syntaxe est la suivante: #define ACRONYME <-> _CLASSE; Elle commence directement par une chaine de caract\u00e8res repr\u00e9sentant l' ACRONYME , puis une double fl\u00e8che (un inf\u00e9rieur \u00ab < \u00bb, un tiret \u00ab - \u00bb, un sup\u00e9rieur \u00ab > \u00bb), une Classe, et enfin un point virgule terminal. Des options peuvent \u00eatre affect\u00e9es \u00e0 cet alias, en utilisant la syntaxe suivante : #define ACRONYME <-> _CLASSE (OPTIONS); /* OPTIONS \u00e9tant une liste de champ=valeur, s\u00e9par\u00e9e par des virgules ',' */ Exemple de syntaxe compl\u00e8te : #define VOLET_OUVERT <-> _E; /* VOLET_OUVERT sera mapp\u00e9 \u00e0 une Entr\u00e9e Physique (par exemple, \u00e0 un module MODBUS, ou \u00e0 la reception d'un SMS) */ #define CDE_VOLET <-> _M; /* CDE_VOLET sera utilis\u00e9 en tant que monostable dans la suite du code D.L.S */","title":"D\u00e9clarer un ALIAS"},{"location":"dls_calculs/","text":"Programmation D.L.S: la zone de calcul Le calcul D.L.S permet, en fonction d'une condition pr\u00e9d\u00e9finie, de calculer la valeur d'un registre en fonction d'expression bool\u00e9ennes ou arithm\u00e9tiques. Tout comme la ligne logique, celle-ci commence par un tiret \u00ab - \u00bb, suivi d'une \u00ab EXPRESSION \u00bb qui repr\u00e9sente la condition de calcul, suivi d'un tiret, puis, entre parenth\u00e8se, d'un calcul arithm\u00e9tique, suivi pour finir d'une fl\u00e8che (tiret \u00ab - \u00bb puis sup\u00e9rieur \u00ab > \u00bb), et un registre de destination. Le point virgule terminal reste obligatoire. Exemple, si la condition EXPRESSION est vraie, alors le Registre RESULTAT sera mis \u00e0 jour avec la valeur du CALCUL entre parenth\u00e8ses. - EXPRESSION - ( CALCUL ) -> RESULTAT; Si l'EXPRESSION est fausse, le calcul n'est pas r\u00e9alis\u00e9. 2nd Exemple: - SYS:TOP_1SEC - ( VITESSE + 1.0 ) -> VITESSE; Toutes les secondes, le registre VITESSE est augment\u00e9 de 1.","title":"Les calculs"},{"location":"dls_calculs/#programmation-dls-la-zone-de-calcul","text":"Le calcul D.L.S permet, en fonction d'une condition pr\u00e9d\u00e9finie, de calculer la valeur d'un registre en fonction d'expression bool\u00e9ennes ou arithm\u00e9tiques. Tout comme la ligne logique, celle-ci commence par un tiret \u00ab - \u00bb, suivi d'une \u00ab EXPRESSION \u00bb qui repr\u00e9sente la condition de calcul, suivi d'un tiret, puis, entre parenth\u00e8se, d'un calcul arithm\u00e9tique, suivi pour finir d'une fl\u00e8che (tiret \u00ab - \u00bb puis sup\u00e9rieur \u00ab > \u00bb), et un registre de destination. Le point virgule terminal reste obligatoire. Exemple, si la condition EXPRESSION est vraie, alors le Registre RESULTAT sera mis \u00e0 jour avec la valeur du CALCUL entre parenth\u00e8ses. - EXPRESSION - ( CALCUL ) -> RESULTAT; Si l'EXPRESSION est fausse, le calcul n'est pas r\u00e9alis\u00e9. 2nd Exemple: - SYS:TOP_1SEC - ( VITESSE + 1.0 ) -> VITESSE; Toutes les secondes, le registre VITESSE est augment\u00e9 de 1.","title":"Programmation D.L.S: la zone de calcul"},{"location":"dls_entre_tor/","text":"Programmation D.L.S: les Entr\u00e9es T.O.R Une entr\u00e9e TOR (Tout Ou Rien) est un bit interne de la m\u00e9moire d'information , de classse _E . Chaque entr\u00e9e TOR \u00e0 pour valeur bool\u00e9enne soit 0, soit 1, et ne peut \u00eatre positionn\u00e9e que dans une EXPRESSION . D\u00e9clarer une Entr\u00e9e TOR Dans la zone d' ALIAS , d\u00e9clarez une entr\u00e9e TOR de cette fa\u00e7on: #define ACRONYME <-> _E(options); Elle commence directement par une chaine de caract\u00e8res repr\u00e9sentant l' ACRONYME , puis une double fl\u00e8che (un inf\u00e9rieur \u00ab < \u00bb, un tiret \u00ab - \u00bb, un sup\u00e9rieur \u00ab > \u00bb), la classe _E, et enfin un point virgule terminal. Les options suivantes peuvent \u00eatre affect\u00e9es \u00e0 ce bit interne : libelle: Permet d'adjoindre une description au bit interne. Exemple complet: /* Nous sommes dans le DLS \"PORTE\" */ #define MON_ENTREE <-> _E (libelle=\"Capteur d'ouverture de la porte\"); Usage dans une EXPRESSION Exemple de syntaxe dans une EXPRESSION : - MON_ENTREE \u2192 MON_BISTABLE; /* Si MON_ENTREE = 1 alors MON_BISTABLE = 1 */ - /MON_ENTREE \u2192 /MON_BISTABLE; /* Si MON_ENTREE = 0 alors MON_BISTABLE = 0 */ Variation DLS Dans une EXPRESSION , il est possible de moduler la s\u00e9mantique du bit interne en utilisant les options suivantes: MON_ENTREE(edge_up): permet de ne prendre en compte que les fronts montants (vrai lorsque l'entr\u00e9e passe de 0 \u00e0 1) MON_ENTREE(edge_down): permet de ne prendre en compte que les fronts descendants (vrai lorsque l'entr\u00e9e passe de 1 \u00e0 0)","title":"Les entr\u00e9es T.O.R"},{"location":"dls_entre_tor/#programmation-dls-les-entrees-tor","text":"Une entr\u00e9e TOR (Tout Ou Rien) est un bit interne de la m\u00e9moire d'information , de classse _E . Chaque entr\u00e9e TOR \u00e0 pour valeur bool\u00e9enne soit 0, soit 1, et ne peut \u00eatre positionn\u00e9e que dans une EXPRESSION .","title":"Programmation D.L.S: les Entr\u00e9es T.O.R"},{"location":"dls_entre_tor/#declarer-une-entree-tor","text":"Dans la zone d' ALIAS , d\u00e9clarez une entr\u00e9e TOR de cette fa\u00e7on: #define ACRONYME <-> _E(options); Elle commence directement par une chaine de caract\u00e8res repr\u00e9sentant l' ACRONYME , puis une double fl\u00e8che (un inf\u00e9rieur \u00ab < \u00bb, un tiret \u00ab - \u00bb, un sup\u00e9rieur \u00ab > \u00bb), la classe _E, et enfin un point virgule terminal. Les options suivantes peuvent \u00eatre affect\u00e9es \u00e0 ce bit interne : libelle: Permet d'adjoindre une description au bit interne. Exemple complet: /* Nous sommes dans le DLS \"PORTE\" */ #define MON_ENTREE <-> _E (libelle=\"Capteur d'ouverture de la porte\");","title":"D\u00e9clarer une Entr\u00e9e TOR"},{"location":"dls_entre_tor/#usage-dans-une-expression","text":"Exemple de syntaxe dans une EXPRESSION : - MON_ENTREE \u2192 MON_BISTABLE; /* Si MON_ENTREE = 1 alors MON_BISTABLE = 1 */ - /MON_ENTREE \u2192 /MON_BISTABLE; /* Si MON_ENTREE = 0 alors MON_BISTABLE = 0 */","title":"Usage dans une EXPRESSION"},{"location":"dls_entre_tor/#variation-dls","text":"Dans une EXPRESSION , il est possible de moduler la s\u00e9mantique du bit interne en utilisant les options suivantes: MON_ENTREE(edge_up): permet de ne prendre en compte que les fronts montants (vrai lorsque l'entr\u00e9e passe de 0 \u00e0 1) MON_ENTREE(edge_down): permet de ne prendre en compte que les fronts descendants (vrai lorsque l'entr\u00e9e passe de 1 \u00e0 0)","title":"Variation DLS"},{"location":"dls_link/","text":"Programmation D.L.S: les liens, ou d\u00e9pendances inter-modules Les liens (ou d\u00e9pendances) sont utilis\u00e9s pour r\u00e9f\u00e9rencer dans un module cible un bit interne d'un module source . Cela permet \u00e9galement, en y ajoutant les options ad\u00e9quates, de compl\u00e9ter la d\u00e9finition en ajoutant par exemple un cadran sur un synoptique particulier. D\u00e9claration des liens Un lien se d\u00e9finit de la mani\u00e8re suivante dans la zone d' Alias du module D.L.S cible : #link TECH_ID_SOURCE:ACRONYME_SOURCE (liste_options); TECH_ID_SOURCE et ACRONYME_SOURCE referencent le bit interne distant faisant l'objet du lien. La liste_options permet de surcharger les options associ\u00e9s au bit interne cible. Typiquement, prenons l'exemple du synoptique METEO , auquel est associ\u00e9 le module DLS dont le tech_id est VENT , proposant lui-m\u00eame l' entr\u00e9e analogique VITESSE : /* Module DLS 'VENT', associ\u00e9 au synoptique 'METEO' */ #define VITESSE <-> _AI(libelle=\"Vitesse du vent mesur\u00e9e par le capteur\", unite=\"m/s\" ); Pour mat\u00e9rialiser un cadran sur ce bit interne VENT:VITESSE sur un synoptique MON_AUTRE_SYNOPTIQUE h\u00e9bergeant le module D.L.S MON_AUTRE_DLS , d\u00e9clarez un lien de la mani\u00e8re suivante: /* Module DLS 'MON_AUTRE_DLS', associ\u00e9 au synoptique 'MON_AUTRE_SYNOPTIQUE' */ #link VENT:VITESSE (cadran=\"simple\"); Suppression d'un lien Pour supprimer un lien d'un module DLS particulier, il suffit de supprimer sa ligne de d\u00e9claration","title":"Les liens"},{"location":"dls_link/#programmation-dls-les-liens-ou-dependances-inter-modules","text":"Les liens (ou d\u00e9pendances) sont utilis\u00e9s pour r\u00e9f\u00e9rencer dans un module cible un bit interne d'un module source . Cela permet \u00e9galement, en y ajoutant les options ad\u00e9quates, de compl\u00e9ter la d\u00e9finition en ajoutant par exemple un cadran sur un synoptique particulier.","title":"Programmation D.L.S: les liens, ou d\u00e9pendances inter-modules"},{"location":"dls_link/#declaration-des-liens","text":"Un lien se d\u00e9finit de la mani\u00e8re suivante dans la zone d' Alias du module D.L.S cible : #link TECH_ID_SOURCE:ACRONYME_SOURCE (liste_options); TECH_ID_SOURCE et ACRONYME_SOURCE referencent le bit interne distant faisant l'objet du lien. La liste_options permet de surcharger les options associ\u00e9s au bit interne cible. Typiquement, prenons l'exemple du synoptique METEO , auquel est associ\u00e9 le module DLS dont le tech_id est VENT , proposant lui-m\u00eame l' entr\u00e9e analogique VITESSE : /* Module DLS 'VENT', associ\u00e9 au synoptique 'METEO' */ #define VITESSE <-> _AI(libelle=\"Vitesse du vent mesur\u00e9e par le capteur\", unite=\"m/s\" ); Pour mat\u00e9rialiser un cadran sur ce bit interne VENT:VITESSE sur un synoptique MON_AUTRE_SYNOPTIQUE h\u00e9bergeant le module D.L.S MON_AUTRE_DLS , d\u00e9clarez un lien de la mani\u00e8re suivante: /* Module DLS 'MON_AUTRE_DLS', associ\u00e9 au synoptique 'MON_AUTRE_SYNOPTIQUE' */ #link VENT:VITESSE (cadran=\"simple\");","title":"D\u00e9claration des liens"},{"location":"dls_link/#suppression-dun-lien","text":"Pour supprimer un lien d'un module DLS particulier, il suffit de supprimer sa ligne de d\u00e9claration","title":"Suppression d'un lien"},{"location":"dls_logique/","text":"Programmation D.L.S: la zone de logique C'est dans cette zone o\u00f9 toute l'intelligence logique du plugin va r\u00e9sider. C'est elle qui d\u00e9finit l'ensemble des comportements attendus en fonction de l'environnement du module. Cette zone est compos\u00e9e d'une suite de ligne (appel\u00e9e dans la suite \u00ab ligne D.L.S \u00bb) dont le contenu d'une ligne suit la syntaxe suivante : - EXPRESSION -> LISTE_ACTIONS; Elle commence par un tiret \u00ab - \u00bb, suivi d'une \u00ab EXPRESSION \u00bb, suivi par une fl\u00e8che (tiret \u00ab - \u00bb puis sup\u00e9rieur \u00ab > \u00bb), une liste d'actions s\u00e9par\u00e9es par des virgules et enfin, un point virgule terminal. Zone de calcul Lier une expression \u00e0 une action Une \u00ab EXPRESSION \u00bb est un ALIAS , ou un ensemble d' ALIAS li\u00e9s entre eux par des op\u00e9rateurs de base . \u00ab LISTE_ACTIONS \u00bb est une liste d'un ou plusieurs d' ALIAS , s\u00e9par\u00e9s par des virgules. Chacun des ALIAS , s'il est suivi par des parenth\u00e8ses peut \u00eatre compl\u00e9t\u00e9 par une liste d'options , elles aussi s\u00e9par\u00e9es par des virgules. Voici un exemple de syntaxe : - PORTE:OUVERTE . ( /VERROU + TEMPO_BIPE ) \u2192 VISUEL_PORTE(mode=\"ouvert,couleur=\"red\"); /* Un exemple */ Nous d\u00e9taillons la grammaire dans chacun des paragraphes ci dessous. Op\u00e9rateurs de base Le ET \u00ab . \u00bb Dans une \u00ab EXPRESSION \u00bb, le ET \u00ab . \u00bb permet d'op\u00e9rer la fonction logique ET entre deux sous-expressions. \u00ab a . b est vrai \u00bb si et seulement si \u00ab a est vrai \u00bb et \u00ab b est vrai \u00bb. Exemple de syntaxe : - a . b \u2192 c; /* Si a et b sont vrais alors nous positionnons c */ Le ET n'a pas de sens dans une \u00ab LISTE_ACTIONS \u00bb. Le OU \u00ab + \u00bb Dans une \u00ab EXPRESSION \u00bb, le OU \u00ab + \u00bb permet d'op\u00e9rer la fonction logique OU entre deux sous-expressions. \u00ab a + b est vrai \u00bb si \u00ab a est vrai \u00bb ou \u00ab b est vrai \u00bb. Exemple de syntaxe : - a + b \u2192 c; /* Si a, ou b, est vrai alors nous positionnons c */ Le OU n'a pas de sens dans une \u00ab LISTE_ACTIONS \u00bb. Le compl\u00e9ment \u00ab / \u00bb Dans une \u00ab EXPRESSION \u00bb ou une \u00ab LISTE_ACTIONS \u00bb, le compl\u00e9ment \u00ab / \u00bb permet d'op\u00e9rer la fonction logique NON sur l'expression suivante. \u00ab /a est vrai \u00bb si \u00ab a est faux \u00bb. Exemple de syntaxe : - /a \u2192 c; /* Si a est faux alors nous positionnons c \u00e0 1 */ - a . b \u2192 /c; /* Si a et b sont vrais alors nous positionnons c \u00e0 0 */ Pr\u00e9c\u00e9dences et parenth\u00e8ses Les priorit\u00e9s d'op\u00e9rations sont les suivantes, dans l'ordre d\u00e9croissant de priorit\u00e9 : Le NON Le ET Le OU Ce syst\u00e8me de priorit\u00e9 peut \u00eatre modifi\u00e9 en utilisant les parenth\u00e8ses ouvrantes et fermantes. Exemple de syntaxe: - a + b . c \u2192 d; /* Si a est vrai, ou b et c sont vrais, alors nous positionnons d \u00e0 1 */ - (a+b) . c \u2192 d; /* Si a ou b est vrai, et c est vrai alors nous positionnons d \u00e0 1 */ - a . /(b+c) \u2192 /c; /* Si a est vrai, et que l'on a ni b ni c, alors nous positionnons c \u00e0 0 */ Logique \u00e9tendue Il est possible de compl\u00e9ter un comportement par des options. La modification du comportement sera fonction des options elles-m\u00eames. La syntaxe retenue est la suivante: - EXPRESSION -- liste_options -> LISTE_ACTIONS; Aujourd'hui, les options disponibles sont les suivantes; daa = valeur : Ajoute un d\u00e9lai (en dixi\u00e8me de seconde) entre le momemt ou l'EXPRESSION devient vraie et le moment ou la LISTE_ACTIONS sera effectivement positionn\u00e9e Exemples: - EXPRESSION -- daa = 100 -> ACTION; /* ACTION sera lanc\u00e9e 10 secondes apr\u00e8s que l'EXPRESSION devienne vraie.","title":"La logique"},{"location":"dls_logique/#programmation-dls-la-zone-de-logique","text":"C'est dans cette zone o\u00f9 toute l'intelligence logique du plugin va r\u00e9sider. C'est elle qui d\u00e9finit l'ensemble des comportements attendus en fonction de l'environnement du module. Cette zone est compos\u00e9e d'une suite de ligne (appel\u00e9e dans la suite \u00ab ligne D.L.S \u00bb) dont le contenu d'une ligne suit la syntaxe suivante : - EXPRESSION -> LISTE_ACTIONS; Elle commence par un tiret \u00ab - \u00bb, suivi d'une \u00ab EXPRESSION \u00bb, suivi par une fl\u00e8che (tiret \u00ab - \u00bb puis sup\u00e9rieur \u00ab > \u00bb), une liste d'actions s\u00e9par\u00e9es par des virgules et enfin, un point virgule terminal. Zone de calcul","title":"Programmation D.L.S: la zone de logique"},{"location":"dls_logique/#lier-une-expression-a-une-action","text":"Une \u00ab EXPRESSION \u00bb est un ALIAS , ou un ensemble d' ALIAS li\u00e9s entre eux par des op\u00e9rateurs de base . \u00ab LISTE_ACTIONS \u00bb est une liste d'un ou plusieurs d' ALIAS , s\u00e9par\u00e9s par des virgules. Chacun des ALIAS , s'il est suivi par des parenth\u00e8ses peut \u00eatre compl\u00e9t\u00e9 par une liste d'options , elles aussi s\u00e9par\u00e9es par des virgules. Voici un exemple de syntaxe : - PORTE:OUVERTE . ( /VERROU + TEMPO_BIPE ) \u2192 VISUEL_PORTE(mode=\"ouvert,couleur=\"red\"); /* Un exemple */ Nous d\u00e9taillons la grammaire dans chacun des paragraphes ci dessous.","title":"Lier une expression \u00e0 une action"},{"location":"dls_logique/#operateurs-de-base","text":"","title":"Op\u00e9rateurs de base"},{"location":"dls_logique/#le-et","text":"Dans une \u00ab EXPRESSION \u00bb, le ET \u00ab . \u00bb permet d'op\u00e9rer la fonction logique ET entre deux sous-expressions. \u00ab a . b est vrai \u00bb si et seulement si \u00ab a est vrai \u00bb et \u00ab b est vrai \u00bb. Exemple de syntaxe : - a . b \u2192 c; /* Si a et b sont vrais alors nous positionnons c */ Le ET n'a pas de sens dans une \u00ab LISTE_ACTIONS \u00bb.","title":"Le ET \u00ab . \u00bb"},{"location":"dls_logique/#le-ou","text":"Dans une \u00ab EXPRESSION \u00bb, le OU \u00ab + \u00bb permet d'op\u00e9rer la fonction logique OU entre deux sous-expressions. \u00ab a + b est vrai \u00bb si \u00ab a est vrai \u00bb ou \u00ab b est vrai \u00bb. Exemple de syntaxe : - a + b \u2192 c; /* Si a, ou b, est vrai alors nous positionnons c */ Le OU n'a pas de sens dans une \u00ab LISTE_ACTIONS \u00bb.","title":"Le OU \u00ab + \u00bb"},{"location":"dls_logique/#le-complement","text":"Dans une \u00ab EXPRESSION \u00bb ou une \u00ab LISTE_ACTIONS \u00bb, le compl\u00e9ment \u00ab / \u00bb permet d'op\u00e9rer la fonction logique NON sur l'expression suivante. \u00ab /a est vrai \u00bb si \u00ab a est faux \u00bb. Exemple de syntaxe : - /a \u2192 c; /* Si a est faux alors nous positionnons c \u00e0 1 */ - a . b \u2192 /c; /* Si a et b sont vrais alors nous positionnons c \u00e0 0 */","title":"Le compl\u00e9ment \u00ab / \u00bb"},{"location":"dls_logique/#precedences-et-parentheses","text":"Les priorit\u00e9s d'op\u00e9rations sont les suivantes, dans l'ordre d\u00e9croissant de priorit\u00e9 : Le NON Le ET Le OU Ce syst\u00e8me de priorit\u00e9 peut \u00eatre modifi\u00e9 en utilisant les parenth\u00e8ses ouvrantes et fermantes. Exemple de syntaxe: - a + b . c \u2192 d; /* Si a est vrai, ou b et c sont vrais, alors nous positionnons d \u00e0 1 */ - (a+b) . c \u2192 d; /* Si a ou b est vrai, et c est vrai alors nous positionnons d \u00e0 1 */ - a . /(b+c) \u2192 /c; /* Si a est vrai, et que l'on a ni b ni c, alors nous positionnons c \u00e0 0 */","title":"Pr\u00e9c\u00e9dences et parenth\u00e8ses"},{"location":"dls_logique/#logique-etendue","text":"Il est possible de compl\u00e9ter un comportement par des options. La modification du comportement sera fonction des options elles-m\u00eames. La syntaxe retenue est la suivante: - EXPRESSION -- liste_options -> LISTE_ACTIONS; Aujourd'hui, les options disponibles sont les suivantes; daa = valeur : Ajoute un d\u00e9lai (en dixi\u00e8me de seconde) entre le momemt ou l'EXPRESSION devient vraie et le moment ou la LISTE_ACTIONS sera effectivement positionn\u00e9e Exemples: - EXPRESSION -- daa = 100 -> ACTION; /* ACTION sera lanc\u00e9e 10 secondes apr\u00e8s que l'EXPRESSION devienne vraie.","title":"Logique \u00e9tendue"},{"location":"dls_visuel_bouton/","text":"Les Visuels Bouton Les visuels bouton d'un module D.L.S sont des visuels de forme =\"bouton\" repr\u00e9sentant un bouton dont le titre est son libelle et affich\u00e9 de la couleur color . Par exemple, voici la d\u00e9finition compl\u00e8te d'un visuel bouton : /* Nous sommes dans le D.L.S \"TECH_ID\" */ /* D\u00e9claration d'un visuel de forme 'bouton' */ #define MON_BOUTON <-> _I(forme=\"bouton\", libelle=\"Cliquez moi !\", mode=\"enabled\", color=\"blue\"); Cette d\u00e9claration permet de creer un bouton \"Cliquez moi !\", de couleur bleu , et clignotant. Afin de capter l'\u00e9v\u00e8nement de clic de la part de l'utilisateur, a chaque bouton est automatique accroch\u00e9 un bit DI nomm\u00e9 par la concat\u00e9nation de son acronyme et de _CLIC . Exemple: #define MON_BOUTON <-> _I(forme=\"bouton\", libelle=\"Cliquez moi !\", color=\"blue\"); /*------MON_BOUTON_CLIC <-> _DI; Automatiquement le bit DI MON_BOUTON_CLIC est cr\u00e9\u00e9 */ Les modes associ\u00e9s aux boutons Il existe 2 modes de boutons. Ceux-ci sont les suivants: mode Description enabled Le bouton est actif et l'utilisateur peut cliquer dessus disabled Le bouton est inactif et l'utilisateur ne peut pas cliquer dessus Si le mode n'est pas renseign\u00e9, celui-ci sera consid\u00e9r\u00e9 par d\u00e9faut comme enabled . Les couleurs des boutons Les couleurs possibles des boutons sont les suivantes: blue red orange green grey black Attribut de clignotement Un bouton, peut \u00e9ventuellement etre clignotant, si l'option cligno est renseign\u00e9e dans ses options. Cependant, l'usage de cet attribut peut nuire a la compr\u00e9hension.","title":"Les boutons"},{"location":"dls_visuel_bouton/#les-visuels-bouton","text":"Les visuels bouton d'un module D.L.S sont des visuels de forme =\"bouton\" repr\u00e9sentant un bouton dont le titre est son libelle et affich\u00e9 de la couleur color . Par exemple, voici la d\u00e9finition compl\u00e8te d'un visuel bouton : /* Nous sommes dans le D.L.S \"TECH_ID\" */ /* D\u00e9claration d'un visuel de forme 'bouton' */ #define MON_BOUTON <-> _I(forme=\"bouton\", libelle=\"Cliquez moi !\", mode=\"enabled\", color=\"blue\"); Cette d\u00e9claration permet de creer un bouton \"Cliquez moi !\", de couleur bleu , et clignotant. Afin de capter l'\u00e9v\u00e8nement de clic de la part de l'utilisateur, a chaque bouton est automatique accroch\u00e9 un bit DI nomm\u00e9 par la concat\u00e9nation de son acronyme et de _CLIC . Exemple: #define MON_BOUTON <-> _I(forme=\"bouton\", libelle=\"Cliquez moi !\", color=\"blue\"); /*------MON_BOUTON_CLIC <-> _DI; Automatiquement le bit DI MON_BOUTON_CLIC est cr\u00e9\u00e9 */","title":"Les Visuels Bouton"},{"location":"dls_visuel_bouton/#les-modes-associes-aux-boutons","text":"Il existe 2 modes de boutons. Ceux-ci sont les suivants: mode Description enabled Le bouton est actif et l'utilisateur peut cliquer dessus disabled Le bouton est inactif et l'utilisateur ne peut pas cliquer dessus Si le mode n'est pas renseign\u00e9, celui-ci sera consid\u00e9r\u00e9 par d\u00e9faut comme enabled .","title":"Les modes associ\u00e9s aux boutons"},{"location":"dls_visuel_bouton/#les-couleurs-des-boutons","text":"Les couleurs possibles des boutons sont les suivantes: blue red orange green grey black","title":"Les couleurs des boutons"},{"location":"dls_visuel_bouton/#attribut-de-clignotement","text":"Un bouton, peut \u00e9ventuellement etre clignotant, si l'option cligno est renseign\u00e9e dans ses options. Cependant, l'usage de cet attribut peut nuire a la compr\u00e9hension.","title":"Attribut de clignotement"},{"location":"dls_visuel_comment/","text":"Les Visuels Commentaires Les visuels commentaires d'un module D.L.S sont des visuels de forme =\"comment\" repr\u00e9sentant son libelle . Par exemple, voici la d\u00e9finition compl\u00e8te d'un visuel commentaire : /* Nous sommes dans le D.L.S \"TECH_ID\" */ /* D\u00e9claration d'un visuel de forme 'commentaire' */ #define MON_LIBELLE <-> _I(forme=\"comment\", libelle=\"Voici mon titre\", mode=\"titre\", color=\"yellow\", cligno); Cette d\u00e9claration permet de creer un commentaire Voici mon titre , en tant que titre , de couleur yellow , et clignotant. Les cat\u00e9gories de commentaires Il existe 3 cat\u00e9gories de commentaires. Celles ci sont indiqu\u00e9es dans le mode du commentaire lui-m\u00eame. Celles-ci sont les suivantes: mode Description titre Le commentaire est affich\u00e9 en taille 38 soustitre Le commentaire est affich\u00e9 en taille 26 annotation Le commentaire est affich\u00e9 en taille 18 Si le mode n'est pas renseign\u00e9, celui-ci sera consid\u00e9r\u00e9 comme annotation . Les couleurs des commentaires Toutes les couleurs traditionnelles sont reconnues. Attribut de clignotement Un commentaire, peut \u00e9ventuellement etre clignotant, si l'option cligno est renseign\u00e9e dans ses options. Par d\u00e9faut, il ne l'est pas.","title":"Les commentaires"},{"location":"dls_visuel_comment/#les-visuels-commentaires","text":"Les visuels commentaires d'un module D.L.S sont des visuels de forme =\"comment\" repr\u00e9sentant son libelle . Par exemple, voici la d\u00e9finition compl\u00e8te d'un visuel commentaire : /* Nous sommes dans le D.L.S \"TECH_ID\" */ /* D\u00e9claration d'un visuel de forme 'commentaire' */ #define MON_LIBELLE <-> _I(forme=\"comment\", libelle=\"Voici mon titre\", mode=\"titre\", color=\"yellow\", cligno); Cette d\u00e9claration permet de creer un commentaire Voici mon titre , en tant que titre , de couleur yellow , et clignotant.","title":"Les Visuels Commentaires"},{"location":"dls_visuel_comment/#les-categories-de-commentaires","text":"Il existe 3 cat\u00e9gories de commentaires. Celles ci sont indiqu\u00e9es dans le mode du commentaire lui-m\u00eame. Celles-ci sont les suivantes: mode Description titre Le commentaire est affich\u00e9 en taille 38 soustitre Le commentaire est affich\u00e9 en taille 26 annotation Le commentaire est affich\u00e9 en taille 18 Si le mode n'est pas renseign\u00e9, celui-ci sera consid\u00e9r\u00e9 comme annotation .","title":"Les cat\u00e9gories de commentaires"},{"location":"dls_visuel_comment/#les-couleurs-des-commentaires","text":"Toutes les couleurs traditionnelles sont reconnues.","title":"Les couleurs des commentaires"},{"location":"dls_visuel_comment/#attribut-de-clignotement","text":"Un commentaire, peut \u00e9ventuellement etre clignotant, si l'option cligno est renseign\u00e9e dans ses options. Par d\u00e9faut, il ne l'est pas.","title":"Attribut de clignotement"},{"location":"dls_visuels/","text":"Les Visuels _I Les visuels, bit de classe _I vous permettent de mat\u00e9rialiser un objet, une commande, ou encore un \u00e9tat. Chaque visuel est repr\u00e9sent\u00e9 par le TECH_ID de son D.L.S parent, et par son ACRONYME . Par exemple, voici la d\u00e9finition la plus simple d'un visuel: /* Nous sommes dans le D.L.S \"SONO\" */ /* D\u00e9claration d'un visuel MON_VISUEL, de forme 'haut_parleur' */ #define MON_VISUEL <-> _I(forme=\"haut_parleur\"); Cette d\u00e9claration vous permet ensuite d'utiliser MON_VISUEL a l'int\u00e9rieur m\u00eame du D.L.S SONO . Pour faire apparaitre ce visuel sur un autre D.L.S, il faudra utiliser un lien pr\u00e9cisant son identification compl\u00e8te SONO:MON_VISUEL . Comment piloter un visuel Chaque visuel s'appui sur des options, permettant de d\u00e9finir facilement la d\u00e9clinaison souhait\u00e9e par le technicien Ces options sont repr\u00e9sent\u00e9es dans la grammaire D.L.S par les mots clefs suivants: mode : il s'agit du mode principal d'affichage du visuel. Pour une porte, il peut s'agir du mode ouverte ou ferm\u00e9e par exemple. color : il s'agit de la couleur souhait\u00e9e d'affichage du visuel. Les couleurs sont repr\u00e9sent\u00e9es par leurs noms en anglais. cligno : cette option permet de faire clignoter le visuel dans l'interface. Voici des exemples de d\u00e9clinaisons d'une m\u00eame forme selon plusieurs mode et color : /* Nous sommes dans le D.L.S \"SONO\" */ /* D\u00e9claration d'un visuel MON_VISUEL, de forme 'haut_parleur' */ /* Par d\u00e9faut, le visuel est dans le mode inactif, en blanc */ #define MON_HAUT_PARLEUR <-> _I(forme=\"haut_parleur\", mode=\"inactif\", color=\"white\"); /* Si MA_CONDITION est vraie, le visuel est actif, de couleur rouge, */ /* et clignotant */ - MA_CONDITION -> MON_HAUT_PARLEUR(mode=\"actif\", color=\"red\", cligno); Les couleurs Les couleurs HTML sont reconnues, dans le format string, comme ci dessous: black white blue darkgreen gray green lightblue orange red yellow Les visuels complexes Certaines formes de visuelles sont particuli\u00e8res, dans le sens ou le visuel en question est construit de mani\u00e8re dynamique. Ces visuels complexes sont les suivants: forme description bouton Ce visuel affiche un bouton dont le titre est le libelle bloc_maintenance Ce visuel affiche le bloc Service/Maintenance, en fonction du mode comment Ce visuel affiche son libelle sous la forme de texte, avec une police et une couleur dependants du mode et color encadre Ce visuel affiche un cadre de couleur color , surmont\u00e9 d'un titre selon le libelle . La taille du cadre est determin\u00e9e selon son mode","title":"Les Visuels"},{"location":"dls_visuels/#les-visuels-_i","text":"Les visuels, bit de classe _I vous permettent de mat\u00e9rialiser un objet, une commande, ou encore un \u00e9tat. Chaque visuel est repr\u00e9sent\u00e9 par le TECH_ID de son D.L.S parent, et par son ACRONYME . Par exemple, voici la d\u00e9finition la plus simple d'un visuel: /* Nous sommes dans le D.L.S \"SONO\" */ /* D\u00e9claration d'un visuel MON_VISUEL, de forme 'haut_parleur' */ #define MON_VISUEL <-> _I(forme=\"haut_parleur\"); Cette d\u00e9claration vous permet ensuite d'utiliser MON_VISUEL a l'int\u00e9rieur m\u00eame du D.L.S SONO . Pour faire apparaitre ce visuel sur un autre D.L.S, il faudra utiliser un lien pr\u00e9cisant son identification compl\u00e8te SONO:MON_VISUEL .","title":"Les Visuels _I"},{"location":"dls_visuels/#comment-piloter-un-visuel","text":"Chaque visuel s'appui sur des options, permettant de d\u00e9finir facilement la d\u00e9clinaison souhait\u00e9e par le technicien Ces options sont repr\u00e9sent\u00e9es dans la grammaire D.L.S par les mots clefs suivants: mode : il s'agit du mode principal d'affichage du visuel. Pour une porte, il peut s'agir du mode ouverte ou ferm\u00e9e par exemple. color : il s'agit de la couleur souhait\u00e9e d'affichage du visuel. Les couleurs sont repr\u00e9sent\u00e9es par leurs noms en anglais. cligno : cette option permet de faire clignoter le visuel dans l'interface. Voici des exemples de d\u00e9clinaisons d'une m\u00eame forme selon plusieurs mode et color : /* Nous sommes dans le D.L.S \"SONO\" */ /* D\u00e9claration d'un visuel MON_VISUEL, de forme 'haut_parleur' */ /* Par d\u00e9faut, le visuel est dans le mode inactif, en blanc */ #define MON_HAUT_PARLEUR <-> _I(forme=\"haut_parleur\", mode=\"inactif\", color=\"white\"); /* Si MA_CONDITION est vraie, le visuel est actif, de couleur rouge, */ /* et clignotant */ - MA_CONDITION -> MON_HAUT_PARLEUR(mode=\"actif\", color=\"red\", cligno);","title":"Comment piloter un visuel"},{"location":"dls_visuels/#les-couleurs","text":"Les couleurs HTML sont reconnues, dans le format string, comme ci dessous: black white blue darkgreen gray green lightblue orange red yellow","title":"Les couleurs"},{"location":"dls_visuels/#les-visuels-complexes","text":"Certaines formes de visuelles sont particuli\u00e8res, dans le sens ou le visuel en question est construit de mani\u00e8re dynamique. Ces visuels complexes sont les suivants: forme description bouton Ce visuel affiche un bouton dont le titre est le libelle bloc_maintenance Ce visuel affiche le bloc Service/Maintenance, en fonction du mode comment Ce visuel affiche son libelle sous la forme de texte, avec une police et une couleur dependants du mode et color encadre Ce visuel affiche un cadre de couleur color , surmont\u00e9 d'un titre selon le libelle . La taille du cadre est determin\u00e9e selon son mode","title":"Les visuels complexes"},{"location":"galerie/","text":"Quelques images de l' interface et du cablage physique Ces images sont issues de vraies instances s'ex\u00e9cutant encore aujourd'hui. Interface Web La page d'accueil, sur mobile ou sur pc fixe: La page d\u00e9di\u00e9e \u00e0 la gestion de l'\u00e9nergie: Un exemple d'\u00e9quipement pilot\u00e9e dans la chambre du rez de chauss\u00e9e: Cablage physique Une image du tableau d'alimentation et de l'armoire Wago pilotant les ouvrants de la maison: La m\u00eame armoire, pendant sa phase de construction: Un zoom sur le cablage des bornes Wago: Quelques photos de la piscine en construction: Et de la pompe qui propulse tout \u00e7a ! Mais la pompe n'est pas toute seule: Tout \u00e7a pilot\u00e9 par cette armoire: Et pour la petite larme, voici une photo de l'armoire 1i\u00e8re g\u00e9n\u00e9ration, bas\u00e9e sur des microcontroleurs Philips, et qui ont tourn\u00e9es pendant plus de 20 ans avant de trouver leur place au mus\u00e9e !","title":"Galerie"},{"location":"galerie/#quelques-images-de-linterface-et-du-cablage-physique","text":"Ces images sont issues de vraies instances s'ex\u00e9cutant encore aujourd'hui.","title":" Quelques images de l'interface et du cablage physique"},{"location":"galerie/#interface-web","text":"La page d'accueil, sur mobile ou sur pc fixe: La page d\u00e9di\u00e9e \u00e0 la gestion de l'\u00e9nergie: Un exemple d'\u00e9quipement pilot\u00e9e dans la chambre du rez de chauss\u00e9e:","title":"Interface Web"},{"location":"galerie/#cablage-physique","text":"Une image du tableau d'alimentation et de l'armoire Wago pilotant les ouvrants de la maison: La m\u00eame armoire, pendant sa phase de construction: Un zoom sur le cablage des bornes Wago: Quelques photos de la piscine en construction: Et de la pompe qui propulse tout \u00e7a ! Mais la pompe n'est pas toute seule: Tout \u00e7a pilot\u00e9 par cette armoire: Et pour la petite larme, voici une photo de l'armoire 1i\u00e8re g\u00e9n\u00e9ration, bas\u00e9e sur des microcontroleurs Philips, et qui ont tourn\u00e9es pendant plus de 20 ans avant de trouver leur place au mus\u00e9e !","title":"Cablage physique"},{"location":"guide_demarrage/","text":"Bienvenue sur Watchdog ! Vous trouverez sur ce site l'ensemble de la documentation technique permettant de prendre en main ce syst\u00e8me de gestion d'habitat. Cette documentation s'adresse aux personnes ayant la responsabilit\u00e9 de l'installation et du maintien des syst\u00e8mes et sous-syst\u00e8mes composant un domaine complet. Elle pr\u00e9sente les guides d'installation, l'architecture, les concepts, les modes d'emploi, ainsi les bonnes pratiques de mise en oeuvre. Pr\u00e9-requis Les socles minimums sur lesquels le syst\u00e8me a \u00e9t\u00e9 test\u00e9 puis valid\u00e9: Fedora 34 ou sup\u00e9rieure Debian Bullseye ou sup\u00e9rieure RaspiOS (bas\u00e9e sur Bullseye) Vous aurez \u00e9galement besoin des droits d'administration, via sudo par exemple. Installation Pour une primo-installation, la proc\u00e9dure d'installation recommand\u00e9e est celle en ligne de commande Puis compl\u00e9tez par l'installation web . Vous pouvez \u00e9galement, dans le cadre d'upgrade par exemple, utiliser la m\u00e9thode de mise \u00e0 jour bas\u00e9e sur le repository SVN . Installation en ligne de commande Depuis un terminal, lancez la commande suivante et r\u00e9pondez ensuite aux questions pos\u00e9es: sudo bash -c \"$(wget https://svn.abls-habitat.fr/repo/Watchdog/prod/INSTALL.sh -q -O -)\" Si vous souhaitez installer en mode User , pr\u00e9cisez-le lorsque cela vous sera demand\u00e9. Le mode System est pr\u00e9conis\u00e9 pour des machines ne s'\u00e9teignant jamais, en g\u00e9n\u00e9ral headless. Il est adapt\u00e9 aux instances Master ou Slave Le mode User est adapt\u00e9 aux machines allum\u00e9es de mani\u00e8re intermittente, comme les PC utilis\u00e9s comme media center par exemple. Il est plutot utilis\u00e9 avec des instances Slave N'oubliez pas de noter le mot de passe associ\u00e9 \u00e0 la base de donn\u00e9es. Laissez-vous ensuite guider par l'installation graphique. Installation web Dans le cadre d'une instance User , ouvrez dans un navigateur l'URL suivante: https://localhost:5560/install Pour une instance System , remplacez localhost par le nom de la machine qui h\u00e9berge cette instance. Vous obtiendrez la page d'installation suivante apr\u00e8s avoir accept\u00e9 l'exception de s\u00e9curit\u00e9 li\u00e9e au certificat SSL auto-sign\u00e9: Entrez alors les param\u00e8tres de votre nouvelle instance. Pour une instance Master en mode System , la configuration par d\u00e9faut est adapt\u00e9e. Le nom de votre habitat (exemple: Ma maison , Mon appart ) Le nom du serveur de base de donn\u00e9es associ\u00e9. Pour une instance Master , localhost est le choix par d\u00e9faut. Pour une instance Slave le serveur de base de donn\u00e9es est en g\u00e9n\u00e9ral celui portant l'instance Master Le port pr\u00e9sentant le service de base de donn\u00e9es, par d\u00e9faut 3306 Le nom de la base de donn\u00e9es, par d\u00e9faut WatchdogDB Le nom de l'utilisateur de la base de donn\u00e9es, par d\u00e9faut watchdog Le mot de passe associ\u00e9 a l'utilisateur, not\u00e9 lors de la premi\u00e8re phase d'installation en ligne de commande L'utilisateur syst\u00e8me qui fera tourner le service. Par d\u00e9faut watchdog . Porte uniquement pour les instances en mode System Pr\u00e9cisez si le working directory est le home (SubDirectory= No ), ou home/.watchdog (SubDirectory= Yes ) Pr\u00e9cisez si l'instance est Master ou Slave Enfin, dans le cadre d'instance Slave , pr\u00e9cisez le hostname de l'instance Master Arr\u00eat/Relance et suivi de l'instance Syst\u00e8me Commandes de lancement et d'arret Les commandes suivantes permettent alors de demarrer, stopper, restarter l'instance Syst\u00e8me: [watchdog@Server ~]$ sudo systemctl start Watchdogd.service [watchdog@Server ~]$ sudo systemctl stop Watchdogd.service [watchdog@Server ~]$ sudo systemctl restart Watchdogd.service Commandes d'affichage des logs Les commandes suivantes permettent d'afficher les logs de l'instance: [watchdog@Server ~]$ sudo journalctl -f -u Watchdogd.service Arr\u00eat/Relance et suivi de l'instance User Commandes de lancement et d'arret Les commandes suivantes permettent alors de demarrer, stopper, restarter l'instance en UserMode: [moi@Server ~]$ systemctl --user start Watchdogd-user.service [moi@Server ~]$ systemctl --user stop Watchdogd-user.service [moi@Server ~]$ systemctl --user restart Watchdogd-user.service Commandes d'affichage des logs Les commandes suivantes permettent d'afficher les logs de l'instance: [moi@Server ~]$ journalctl --user -f -u Watchdogd-user.service Upgrader une instance existante Pour mettre \u00e0 niveau votre instance, vous pouvez suivre les mises \u00e0 jour automatiques de la branche de production du repository prod . Pour cela, tapez les commandes suivantes dans un terminal: svn co https://svn.abls-habitat.fr/repo/Watchdog/prod Watchdog cd Watchdog ./autogen.sh sudo make install sudo systemctl restart Watchdogd Utilisateurs par d\u00e9faut A l'installation, deux comptes sont pre-enregistr\u00e9s: les comptes root et guest Le compte root est un compte administrateur (privil\u00e8ge maximum : Level 9). Son mot de passe par d\u00e9faut est password Le compte guest est un compte utilisateur avec des privil\u00e8ges minimaux (Level 1). Son mot de passe par d\u00e9faut est guest","title":"Guide de d\u00e9marrage"},{"location":"guide_demarrage/#bienvenue-sur-watchdog","text":"Vous trouverez sur ce site l'ensemble de la documentation technique permettant de prendre en main ce syst\u00e8me de gestion d'habitat. Cette documentation s'adresse aux personnes ayant la responsabilit\u00e9 de l'installation et du maintien des syst\u00e8mes et sous-syst\u00e8mes composant un domaine complet. Elle pr\u00e9sente les guides d'installation, l'architecture, les concepts, les modes d'emploi, ainsi les bonnes pratiques de mise en oeuvre.","title":" Bienvenue sur Watchdog !"},{"location":"guide_demarrage/#pre-requis","text":"Les socles minimums sur lesquels le syst\u00e8me a \u00e9t\u00e9 test\u00e9 puis valid\u00e9: Fedora 34 ou sup\u00e9rieure Debian Bullseye ou sup\u00e9rieure RaspiOS (bas\u00e9e sur Bullseye) Vous aurez \u00e9galement besoin des droits d'administration, via sudo par exemple.","title":"Pr\u00e9-requis"},{"location":"guide_demarrage/#installation","text":"Pour une primo-installation, la proc\u00e9dure d'installation recommand\u00e9e est celle en ligne de commande Puis compl\u00e9tez par l'installation web . Vous pouvez \u00e9galement, dans le cadre d'upgrade par exemple, utiliser la m\u00e9thode de mise \u00e0 jour bas\u00e9e sur le repository SVN .","title":"Installation"},{"location":"guide_demarrage/#installation-en-ligne-de-commande","text":"Depuis un terminal, lancez la commande suivante et r\u00e9pondez ensuite aux questions pos\u00e9es: sudo bash -c \"$(wget https://svn.abls-habitat.fr/repo/Watchdog/prod/INSTALL.sh -q -O -)\" Si vous souhaitez installer en mode User , pr\u00e9cisez-le lorsque cela vous sera demand\u00e9. Le mode System est pr\u00e9conis\u00e9 pour des machines ne s'\u00e9teignant jamais, en g\u00e9n\u00e9ral headless. Il est adapt\u00e9 aux instances Master ou Slave Le mode User est adapt\u00e9 aux machines allum\u00e9es de mani\u00e8re intermittente, comme les PC utilis\u00e9s comme media center par exemple. Il est plutot utilis\u00e9 avec des instances Slave N'oubliez pas de noter le mot de passe associ\u00e9 \u00e0 la base de donn\u00e9es. Laissez-vous ensuite guider par l'installation graphique.","title":"Installation en ligne de commande"},{"location":"guide_demarrage/#installation-web","text":"Dans le cadre d'une instance User , ouvrez dans un navigateur l'URL suivante: https://localhost:5560/install Pour une instance System , remplacez localhost par le nom de la machine qui h\u00e9berge cette instance. Vous obtiendrez la page d'installation suivante apr\u00e8s avoir accept\u00e9 l'exception de s\u00e9curit\u00e9 li\u00e9e au certificat SSL auto-sign\u00e9: Entrez alors les param\u00e8tres de votre nouvelle instance. Pour une instance Master en mode System , la configuration par d\u00e9faut est adapt\u00e9e. Le nom de votre habitat (exemple: Ma maison , Mon appart ) Le nom du serveur de base de donn\u00e9es associ\u00e9. Pour une instance Master , localhost est le choix par d\u00e9faut. Pour une instance Slave le serveur de base de donn\u00e9es est en g\u00e9n\u00e9ral celui portant l'instance Master Le port pr\u00e9sentant le service de base de donn\u00e9es, par d\u00e9faut 3306 Le nom de la base de donn\u00e9es, par d\u00e9faut WatchdogDB Le nom de l'utilisateur de la base de donn\u00e9es, par d\u00e9faut watchdog Le mot de passe associ\u00e9 a l'utilisateur, not\u00e9 lors de la premi\u00e8re phase d'installation en ligne de commande L'utilisateur syst\u00e8me qui fera tourner le service. Par d\u00e9faut watchdog . Porte uniquement pour les instances en mode System Pr\u00e9cisez si le working directory est le home (SubDirectory= No ), ou home/.watchdog (SubDirectory= Yes ) Pr\u00e9cisez si l'instance est Master ou Slave Enfin, dans le cadre d'instance Slave , pr\u00e9cisez le hostname de l'instance Master","title":"Installation web"},{"location":"guide_demarrage/#arretrelance-et-suivi-de-linstance-systeme","text":"","title":"Arr\u00eat/Relance et suivi de l'instance Syst\u00e8me"},{"location":"guide_demarrage/#commandes-de-lancement-et-darret","text":"Les commandes suivantes permettent alors de demarrer, stopper, restarter l'instance Syst\u00e8me: [watchdog@Server ~]$ sudo systemctl start Watchdogd.service [watchdog@Server ~]$ sudo systemctl stop Watchdogd.service [watchdog@Server ~]$ sudo systemctl restart Watchdogd.service","title":"Commandes de lancement et d'arret"},{"location":"guide_demarrage/#commandes-daffichage-des-logs","text":"Les commandes suivantes permettent d'afficher les logs de l'instance: [watchdog@Server ~]$ sudo journalctl -f -u Watchdogd.service","title":"Commandes d'affichage des logs"},{"location":"guide_demarrage/#arretrelance-et-suivi-de-linstance-user","text":"","title":"Arr\u00eat/Relance et suivi de l'instance User"},{"location":"guide_demarrage/#commandes-de-lancement-et-darret_1","text":"Les commandes suivantes permettent alors de demarrer, stopper, restarter l'instance en UserMode: [moi@Server ~]$ systemctl --user start Watchdogd-user.service [moi@Server ~]$ systemctl --user stop Watchdogd-user.service [moi@Server ~]$ systemctl --user restart Watchdogd-user.service","title":"Commandes de lancement et d'arret"},{"location":"guide_demarrage/#commandes-daffichage-des-logs_1","text":"Les commandes suivantes permettent d'afficher les logs de l'instance: [moi@Server ~]$ journalctl --user -f -u Watchdogd-user.service","title":"Commandes d'affichage des logs"},{"location":"guide_demarrage/#upgrader-une-instance-existante","text":"Pour mettre \u00e0 niveau votre instance, vous pouvez suivre les mises \u00e0 jour automatiques de la branche de production du repository prod . Pour cela, tapez les commandes suivantes dans un terminal: svn co https://svn.abls-habitat.fr/repo/Watchdog/prod Watchdog cd Watchdog ./autogen.sh sudo make install sudo systemctl restart Watchdogd","title":"Upgrader une instance existante"},{"location":"guide_demarrage/#utilisateurs-par-defaut","text":"A l'installation, deux comptes sont pre-enregistr\u00e9s: les comptes root et guest Le compte root est un compte administrateur (privil\u00e8ge maximum : Level 9). Son mot de passe par d\u00e9faut est password Le compte guest est un compte utilisateur avec des privil\u00e8ges minimaux (Level 1). Son mot de passe par d\u00e9faut est guest","title":"Utilisateurs par d\u00e9faut"},{"location":"users/","text":"Cat\u00e9gorie d'utilisateurs Chaque utilisateur dispose d'un niveau d'habilitation, repr\u00e9sent\u00e9 par un num\u00e9ro de 1 \u00e0 9. Un utilisateur d'un niveau N peut: Voir et modifier toutes les ressources d'un niveau inf\u00e9rieure ou \u00e9gale \u00e0 N-1 Voir les ressources d'un niveau \u00e9gal \u00e0 N Voir et modifier ses propres ressources Il ne pourra pas acc\u00e9der ou modifier les ressources de rang plus \u00e9lev\u00e9. Par d\u00e9faut, un utilisateur nouvellement cr\u00e9\u00e9 sera associ\u00e9 au niveau 1 . Au demarrage, deux utilisateurs par d\u00e9faut sont cr\u00e9\u00e9s Les rangs 1 \u00e0 5 Les niveaux 1 \u00e0 5 sont les niveaux \u00e0 destination des clients finaux. L'usage des diff\u00e9rents niveaux est laiss\u00e9 a l'appr\u00e9ciation du client. Les rangs 6 \u00e0 9 Les niveaux 6 \u00e0 9 sont les niveaux reserv\u00e9s aux utilisateurs de profil techniciens . Ces utilisateurs \u00e0 privil\u00e8ges poss\u00e8dent les droits de modifier le coeur du syst\u00e8me: L'\u00e9dition, l'ajout ou la suppression des modules D.L.S L'\u00e9dition, l'ajout ou la suppression des synoptiques La configuration des connecteurs","title":"Typologie des Utilisateurs"},{"location":"users/#categorie-dutilisateurs","text":"Chaque utilisateur dispose d'un niveau d'habilitation, repr\u00e9sent\u00e9 par un num\u00e9ro de 1 \u00e0 9. Un utilisateur d'un niveau N peut: Voir et modifier toutes les ressources d'un niveau inf\u00e9rieure ou \u00e9gale \u00e0 N-1 Voir les ressources d'un niveau \u00e9gal \u00e0 N Voir et modifier ses propres ressources Il ne pourra pas acc\u00e9der ou modifier les ressources de rang plus \u00e9lev\u00e9. Par d\u00e9faut, un utilisateur nouvellement cr\u00e9\u00e9 sera associ\u00e9 au niveau 1 . Au demarrage, deux utilisateurs par d\u00e9faut sont cr\u00e9\u00e9s","title":"Cat\u00e9gorie d'utilisateurs"},{"location":"users/#les-rangs-1-a-5","text":"Les niveaux 1 \u00e0 5 sont les niveaux \u00e0 destination des clients finaux. L'usage des diff\u00e9rents niveaux est laiss\u00e9 a l'appr\u00e9ciation du client.","title":"Les rangs 1 \u00e0 5"},{"location":"users/#les-rangs-6-a-9","text":"Les niveaux 6 \u00e0 9 sont les niveaux reserv\u00e9s aux utilisateurs de profil techniciens . Ces utilisateurs \u00e0 privil\u00e8ges poss\u00e8dent les droits de modifier le coeur du syst\u00e8me: L'\u00e9dition, l'ajout ou la suppression des modules D.L.S L'\u00e9dition, l'ajout ou la suppression des synoptiques La configuration des connecteurs","title":"Les rangs 6 \u00e0 9"},{"location":"visuels/","text":"Liste des visuels par cat\u00e9gorie application bouton capteur chauffage divers electrique hydraulique io lieu outils ouvrant panneau schema sonorisation voyant","title":"Inventaire des Visuels"},{"location":"visuels/#liste-des-visuels-par-categorie","text":"application bouton capteur chauffage divers electrique hydraulique io lieu outils ouvrant panneau schema sonorisation voyant","title":"Liste des visuels par cat\u00e9gorie"},{"location":"visuels_application/","text":"Liste des visuels de la cat\u00e9gorie 'application' forme ='film' forme ='kodi' forme ='youtube_bebe_louis' forme ='youtube_crocodile' forme ='youtube_peppa_pig'","title":"Liste des visuels de la cat\u00e9gorie 'application'"},{"location":"visuels_application/#liste-des-visuels-de-la-categorie-application","text":"","title":"Liste des visuels de la cat\u00e9gorie 'application'"},{"location":"visuels_application/#formefilm","text":"","title":"forme='film'"},{"location":"visuels_application/#formekodi","text":"","title":"forme='kodi'"},{"location":"visuels_application/#formeyoutube_bebe_louis","text":"","title":"forme='youtube_bebe_louis'"},{"location":"visuels_application/#formeyoutube_crocodile","text":"","title":"forme='youtube_crocodile'"},{"location":"visuels_application/#formeyoutube_peppa_pig","text":"","title":"forme='youtube_peppa_pig'"},{"location":"visuels_bouton/","text":"Liste des visuels de la cat\u00e9gorie 'bouton' forme ='arret_urgence' forme ='auto_manu' Modes: auto maintenance manu sauto forme ='bouton_io' forme ='bouton_panique' forme ='bouton_raz' forme ='bouton_stop_klaxon'","title":"Liste des visuels de la cat\u00e9gorie 'bouton'"},{"location":"visuels_bouton/#liste-des-visuels-de-la-categorie-bouton","text":"","title":"Liste des visuels de la cat\u00e9gorie 'bouton'"},{"location":"visuels_bouton/#formearret_urgence","text":"","title":"forme='arret_urgence'"},{"location":"visuels_bouton/#formeauto_manu","text":"Modes: auto maintenance manu sauto","title":"forme='auto_manu'"},{"location":"visuels_bouton/#formebouton_io","text":"","title":"forme='bouton_io'"},{"location":"visuels_bouton/#formebouton_panique","text":"","title":"forme='bouton_panique'"},{"location":"visuels_bouton/#formebouton_raz","text":"","title":"forme='bouton_raz'"},{"location":"visuels_bouton/#formebouton_stop_klaxon","text":"","title":"forme='bouton_stop_klaxon'"},{"location":"visuels_capteur/","text":"Liste des visuels de la cat\u00e9gorie 'capteur' forme ='boite_aux_lettres' forme ='detecteur_mouvement' Modes: off on forme ='digicode'","title":"Liste des visuels de la cat\u00e9gorie 'capteur'"},{"location":"visuels_capteur/#liste-des-visuels-de-la-categorie-capteur","text":"","title":"Liste des visuels de la cat\u00e9gorie 'capteur'"},{"location":"visuels_capteur/#formeboite_aux_lettres","text":"","title":"forme='boite_aux_lettres'"},{"location":"visuels_capteur/#formedetecteur_mouvement","text":"Modes: off on","title":"forme='detecteur_mouvement'"},{"location":"visuels_capteur/#formedigicode","text":"","title":"forme='digicode'"},{"location":"visuels_chauffage/","text":"Liste des visuels de la cat\u00e9gorie 'chauffage' forme ='chaudiere_gaz' Modes: off on forme ='radiateur' Modes: chaud clim froid forme ='soufflant' Modes: off on forme ='thermometre' Modes: nb nh ntb nth ok","title":"Liste des visuels de la cat\u00e9gorie 'chauffage'"},{"location":"visuels_chauffage/#liste-des-visuels-de-la-categorie-chauffage","text":"","title":"Liste des visuels de la cat\u00e9gorie 'chauffage'"},{"location":"visuels_chauffage/#formechaudiere_gaz","text":"Modes: off on","title":"forme='chaudiere_gaz'"},{"location":"visuels_chauffage/#formeradiateur","text":"Modes: chaud clim froid","title":"forme='radiateur'"},{"location":"visuels_chauffage/#formesoufflant","text":"Modes: off on","title":"forme='soufflant'"},{"location":"visuels_chauffage/#formethermometre","text":"Modes: nb nh ntb nth ok","title":"forme='thermometre'"},{"location":"visuels_divers/","text":"Liste des visuels de la cat\u00e9gorie 'divers' forme ='cadena' Modes: ferme ouvert forme ='check' Modes: checked unchecked_but_ok unchecked forme ='fleche' forme ='logo' forme ='question'","title":"Liste des visuels de la cat\u00e9gorie 'divers'"},{"location":"visuels_divers/#liste-des-visuels-de-la-categorie-divers","text":"","title":"Liste des visuels de la cat\u00e9gorie 'divers'"},{"location":"visuels_divers/#formecadena","text":"Modes: ferme ouvert","title":"forme='cadena'"},{"location":"visuels_divers/#formecheck","text":"Modes: checked unchecked_but_ok unchecked","title":"forme='check'"},{"location":"visuels_divers/#formefleche","text":"","title":"forme='fleche'"},{"location":"visuels_divers/#formelogo","text":"","title":"forme='logo'"},{"location":"visuels_divers/#formequestion","text":"","title":"forme='question'"},{"location":"visuels_electrique/","text":"Liste des visuels de la cat\u00e9gorie 'electrique' forme ='ampoule' Modes: action_off action_on off on forme ='moteur' forme ='moteur_2' forme ='pile' Modes: 0 100 20 40 60 80 en_charge forme ='vmc'","title":"Liste des visuels de la cat\u00e9gorie 'electrique'"},{"location":"visuels_electrique/#liste-des-visuels-de-la-categorie-electrique","text":"","title":"Liste des visuels de la cat\u00e9gorie 'electrique'"},{"location":"visuels_electrique/#formeampoule","text":"Modes: action_off action_on off on","title":"forme='ampoule'"},{"location":"visuels_electrique/#formemoteur","text":"","title":"forme='moteur'"},{"location":"visuels_electrique/#formemoteur_2","text":"","title":"forme='moteur_2'"},{"location":"visuels_electrique/#formepile","text":"Modes: 0 100 20 40 60 80 en_charge","title":"forme='pile'"},{"location":"visuels_electrique/#formevmc","text":"","title":"forme='vmc'"},{"location":"visuels_hydraulique/","text":"Liste des visuels de la cat\u00e9gorie 'hydraulique' forme ='2d_vanne_auto' forme ='goutte_eau' forme ='vanne_auto'","title":"Liste des visuels de la cat\u00e9gorie 'hydraulique'"},{"location":"visuels_hydraulique/#liste-des-visuels-de-la-categorie-hydraulique","text":"","title":"Liste des visuels de la cat\u00e9gorie 'hydraulique'"},{"location":"visuels_hydraulique/#forme2d_vanne_auto","text":"","title":"forme='2d_vanne_auto'"},{"location":"visuels_hydraulique/#formegoutte_eau","text":"","title":"forme='goutte_eau'"},{"location":"visuels_hydraulique/#formevanne_auto","text":"","title":"forme='vanne_auto'"},{"location":"visuels_io/","text":"Liste des visuels de la cat\u00e9gorie 'io' forme ='satellite' forme ='sms' forme ='wago_750342'","title":"Liste des visuels de la cat\u00e9gorie 'io'"},{"location":"visuels_io/#liste-des-visuels-de-la-categorie-io","text":"","title":"Liste des visuels de la cat\u00e9gorie 'io'"},{"location":"visuels_io/#formesatellite","text":"","title":"forme='satellite'"},{"location":"visuels_io/#formesms","text":"","title":"forme='sms'"},{"location":"visuels_io/#formewago_750342","text":"","title":"forme='wago_750342'"},{"location":"visuels_lieu/","text":"Liste des visuels de la cat\u00e9gorie 'lieu' forme ='2d_soisy' forme ='soisy'","title":"Liste des visuels de la cat\u00e9gorie 'lieu'"},{"location":"visuels_lieu/#liste-des-visuels-de-la-categorie-lieu","text":"","title":"Liste des visuels de la cat\u00e9gorie 'lieu'"},{"location":"visuels_lieu/#forme2d_soisy","text":"","title":"forme='2d_soisy'"},{"location":"visuels_lieu/#formesoisy","text":"","title":"forme='soisy'"},{"location":"visuels_outils/","text":"Liste des visuels de la cat\u00e9gorie 'outils' forme ='clef_a_molette_1' forme ='clef_a_molette_2' forme ='clef_a_molette_3' forme ='marteau_1'","title":"Liste des visuels de la cat\u00e9gorie 'outils'"},{"location":"visuels_outils/#liste-des-visuels-de-la-categorie-outils","text":"","title":"Liste des visuels de la cat\u00e9gorie 'outils'"},{"location":"visuels_outils/#formeclef_a_molette_1","text":"","title":"forme='clef_a_molette_1'"},{"location":"visuels_outils/#formeclef_a_molette_2","text":"","title":"forme='clef_a_molette_2'"},{"location":"visuels_outils/#formeclef_a_molette_3","text":"","title":"forme='clef_a_molette_3'"},{"location":"visuels_outils/#formemarteau_1","text":"","title":"forme='marteau_1'"},{"location":"visuels_ouvrant/","text":"Liste des visuels de la cat\u00e9gorie 'ouvrant' forme ='2d_porte' Modes: fermee ouverte forme ='fenetre' Modes: fermee ouverte forme ='porte_entree' Modes: fermee ouverte forme ='porte_fenetre' Modes: fermee fermee.svg.2021_10_18_23_46_54.0 ouverte forme ='store' Modes: forme ='volet_roulant' Modes: ferme ouvert","title":"Liste des visuels de la cat\u00e9gorie 'ouvrant'"},{"location":"visuels_ouvrant/#liste-des-visuels-de-la-categorie-ouvrant","text":"","title":"Liste des visuels de la cat\u00e9gorie 'ouvrant'"},{"location":"visuels_ouvrant/#forme2d_porte","text":"Modes: fermee ouverte","title":"forme='2d_porte'"},{"location":"visuels_ouvrant/#formefenetre","text":"Modes: fermee ouverte","title":"forme='fenetre'"},{"location":"visuels_ouvrant/#formeporte_entree","text":"Modes: fermee ouverte","title":"forme='porte_entree'"},{"location":"visuels_ouvrant/#formeporte_fenetre","text":"Modes: fermee fermee.svg.2021_10_18_23_46_54.0 ouverte","title":"forme='porte_fenetre'"},{"location":"visuels_ouvrant/#formestore","text":"Modes:","title":"forme='store'"},{"location":"visuels_ouvrant/#formevolet_roulant","text":"Modes: ferme ouvert","title":"forme='volet_roulant'"},{"location":"visuels_panneau/","text":"Liste des visuels de la cat\u00e9gorie 'panneau' forme ='panneau_au' forme ='panneau_stop'","title":"Liste des visuels de la cat\u00e9gorie 'panneau'"},{"location":"visuels_panneau/#liste-des-visuels-de-la-categorie-panneau","text":"","title":"Liste des visuels de la cat\u00e9gorie 'panneau'"},{"location":"visuels_panneau/#formepanneau_au","text":"","title":"forme='panneau_au'"},{"location":"visuels_panneau/#formepanneau_stop","text":"","title":"forme='panneau_stop'"},{"location":"visuels_schema/","text":"Liste des visuels de la cat\u00e9gorie 'schema' forme ='schema_ampoule'","title":"Liste des visuels de la cat\u00e9gorie 'schema'"},{"location":"visuels_schema/#liste-des-visuels-de-la-categorie-schema","text":"","title":"Liste des visuels de la cat\u00e9gorie 'schema'"},{"location":"visuels_schema/#formeschema_ampoule","text":"","title":"forme='schema_ampoule'"},{"location":"visuels_sonorisation/","text":"Liste des visuels de la cat\u00e9gorie 'sonorisation' forme ='haut_parleur' Modes: actif inactif","title":"Liste des visuels de la cat\u00e9gorie 'sonorisation'"},{"location":"visuels_sonorisation/#liste-des-visuels-de-la-categorie-sonorisation","text":"","title":"Liste des visuels de la cat\u00e9gorie 'sonorisation'"},{"location":"visuels_sonorisation/#formehaut_parleur","text":"Modes: actif inactif","title":"forme='haut_parleur'"},{"location":"visuels_voyant/","text":"Liste des visuels de la cat\u00e9gorie 'voyant' forme ='clef' forme ='croix' forme ='eclair' forme ='voyant_local_arret' forme ='voyant_local_marche' forme ='voyant_moteur' forme ='voyant_systeme'","title":"Liste des visuels de la cat\u00e9gorie 'voyant'"},{"location":"visuels_voyant/#liste-des-visuels-de-la-categorie-voyant","text":"","title":"Liste des visuels de la cat\u00e9gorie 'voyant'"},{"location":"visuels_voyant/#formeclef","text":"","title":"forme='clef'"},{"location":"visuels_voyant/#formecroix","text":"","title":"forme='croix'"},{"location":"visuels_voyant/#formeeclair","text":"","title":"forme='eclair'"},{"location":"visuels_voyant/#formevoyant_local_arret","text":"","title":"forme='voyant_local_arret'"},{"location":"visuels_voyant/#formevoyant_local_marche","text":"","title":"forme='voyant_local_marche'"},{"location":"visuels_voyant/#formevoyant_moteur","text":"","title":"forme='voyant_moteur'"},{"location":"visuels_voyant/#formevoyant_systeme","text":"","title":"forme='voyant_systeme'"}]}