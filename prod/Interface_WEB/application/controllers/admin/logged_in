Config.php:7:    $this->load->model('Config_model');
Config.php:10:    $this->admin_page_title->push('Configuration');
Config.php:11:    $this->data['pagetitle'] = "<h1>Configuration des threads</h1>";
Config.php:13:    $this->admin_breadcrumbs->unshift(1, 'Configuration', 'admin/config');
Config.php:18:  { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Config.php:20:			 $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();
Config.php:21:    $this->data['configs'] = $this->Config_model->get_list($host,$thread);                         /* Get all running process */
Config.php:22:    $this->data['host']    = $host;
Config.php:23:    $this->data['thread']  = $thread;
Config.php:24:    $this->template->admin_render('admin/config/index', $this->data);                                        /* Load Template */
Config.php:28:  { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Config.php:29:		  $param  = $this->input->post("parametre");
Config.php:30:    $valeur = $this->input->post("valeur");
Config.php:31:    $this->Config_model->set($host,$thread,$param,$valeur);                                        /* Get all running process */
Config.php:32:    $this->wtd_webservice->send('/process/reload/'.$thread);
Config.php:33:    $this->session->set_flashdata('flash_message', 'Paramètre '.$param.' ajouté' );
Config.php:38: 	{ if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Config.php:40:    $this->Config_model->del($host,$thread,$param,$valeur);                                        /* Get all running process */
Config.php:41:    $this->session->set_flashdata('flash_message', 'Paramètre '.$param.' supprimé' );
Config.php:45:/*----------------------------------------------------------------------------------------------------------------------------*/
Dashboard.php:9:      $this->load->helper('number');
Dashboard.php:10:      $this->load->model('dashboard_model');
Dashboard.php:11:      $this->load->model('Mnemo_model');
Dashboard.php:12:      $this->load->model('Dls_model');
Dashboard.php:13:      $this->load->model('Archive_model');
Dashboard.php:18:	   { if ( ! $this->wtd_auth->logged_in()) { redirect('auth/login', 'refresh'); }
Dashboard.php:20:      $this->admin_page_title->push(lang('menu_dashboard'));
Dashboard.php:21:      $this->data['pagetitle'] = $this->admin_page_title->show();
Dashboard.php:22:      $this->data["load_js"] = "dashboard.js";
Dashboard.php:23:      $this->data["db_database"] = $this->db->database;
Dashboard.php:24:      $this->data["db_hostname"] = $this->db->hostname;
Dashboard.php:25:      $this->data["db_username"] = $this->db->username;
Dashboard.php:26:      $this->data["archdb_database"] = $this->Archive_model->archdb->database;
Dashboard.php:27:      $this->data["archdb_hostname"] = $this->Archive_model->archdb->hostname;
Dashboard.php:28:      $this->data["archdb_username"] = $this->Archive_model->archdb->username;
Dashboard.php:30:      $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();
Dashboard.php:33:      $this->data['count_users']       = $this->dashboard_model->get_count_record('users');
Dashboard.php:34:     	$this->data['count_syns']        = $this->dashboard_model->get_count_record('syns');
Dashboard.php:35:     	$this->data['count_syns_motifs'] = $this->dashboard_model->get_count_record('syns_motifs');
Dashboard.php:36:     	$this->data['count_msgs']        = $this->dashboard_model->get_count_record('msgs');
Dashboard.php:37:      $this->data['count_dls']         = $this->dashboard_model->get_count_record('dls');
Dashboard.php:38:      $this->data['count_mnemos']      = $this->Mnemo_model->get_total_all();
Dashboard.php:39:      $this->data['count_logs']        = $this->dashboard_model->get_count_record('audit_log');
Dashboard.php:40:      $this->data['nbr_lignes_dls']    = $this->Dls_model->get_nbr_lignes();
Dashboard.php:41:      $this->data['disk_totalspace']   = $this->dashboard_model->disk_totalspace(DIRECTORY_SEPARATOR);
Dashboard.php:42:      $this->data['disk_freespace']    = $this->dashboard_model->disk_freespace(DIRECTORY_SEPARATOR);
Dashboard.php:43:      $this->data['disk_usespace']     = $this->dashboard_model->disk_usespace(DIRECTORY_SEPARATOR);
Dashboard.php:44:      $this->data['disk_usepercent']   = $this->dashboard_model->disk_usepercent(DIRECTORY_SEPARATOR, FALSE);
Dashboard.php:45:      $this->data['memory_usage']      = $this->dashboard_model->memory_usage();
Dashboard.php:46:      $this->data['memory_peak_usage'] = $this->dashboard_model->memory_peak_usage(TRUE);
Dashboard.php:47:      $this->data['memory_usepercent'] = $this->dashboard_model->memory_usepercent(TRUE, FALSE);
Dashboard.php:49:  	 		$this->data['status'] = $this->wtd_webservice->master_status();
Dashboard.php:51:      $this->template->admin_render('admin/dashboard/index', $this->data);
Dls.php:7:    $this->load->model('Dls_model');
Dls.php:8:    $this->load->model('Syn_model');
Dls.php:11:    $this->admin_page_title->push('D.L.S');
Dls.php:12:    $this->data['pagetitle'] = "<h1>Modules D.L.S</h1>";
Dls.php:14:    $this->admin_breadcrumbs->unshift(1, 'Modules D.L.S', 'admin/dls');
Dls.php:19:  { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Dls.php:21:			 $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();
Dls.php:23:			 $this->template->admin_render('admin/dls/index', $this->data);
Dls.php:27:  {	header("Content-Type: application/json; charset=UTF-8");
Dls.php:28:		  $draw   = intval($this->input->get("draw"));
Dls.php:29:    $start  = intval($this->input->get("start"));
Dls.php:30:		  $length = intval($this->input->get("length"));
Dls.php:33:    if ( ! $this->wtd_auth->logged_in() )
Dls.php:38: 			$dlss = $this->Dls_model->get_all_dls($start, $length);
Dls.php:39:		  foreach($dlss->result() as $dls)
Dls.php:40:     { $dls_status = array( "<span class='label label-info'>Never compiled yet</span>",
Dls.php:41:                            "<span class='label label-danger'>Database Export failed</span>",
Dls.php:42:                            "<span class='label label-danger'>Error loading source file</span>",
Dls.php:43:                            "<span class='label label-danger'>Error loading log file</span>",
Dls.php:44:                            "<span class='label label-danger'>Syntax error</span>",
Dls.php:45:                            "<span class='label label-danger'>Error Fork GCC</span>",
Dls.php:46:                            "<span class='label label-warning'>OK with Warnings</span>",
Dls.php:47:                            "<span class='label label-success'>OK</span>",
Dls.php:48:                            "<span class='label label-danger'>Functions are missing<br>Need compiling again.</span>",
Dls.php:49:                            "<span class='label label-danger'>Error, plugin is setting bits he does not own.</span>",
Dls.php:50:                            "<span class='label label-danger'>error</span>"
Dls.php:54:                 '<button class="btn btn-xs btn-primary dropdown-toggle" type="button" data-toggle="dropdown">'.
Dls.php:56:                 '<ul class="dropdown-menu">'.
Dls.php:57:                 '<li><a href='.site_url('admin/dls/edit/'.$dls->tech_id).'>'.
Dls.php:58:                     '<i class="fa fa-pencil" style="color:green"></i>'.
Dls.php:59:                     '<i class="fa fa-cog" style="color:blue"></i>Configurer</a></li>'.
Dls.php:60:                 '<li><a href='.site_url('admin/dls/sourceedit/'.$dls->tech_id).'>'.
Dls.php:61:                     '<i class="fa fa-pencil" style="color:green"></i>'.
Dls.php:62:                     '<i class="fa fa-code" style="color:blue"></i>Editer la source</a></li>'.
Dls.php:63:                 '<li><a href='.site_url('admin/mnemo/index/'.$dls->tech_id).'>'.
Dls.php:64:                     '<i class="fa fa-pencil" style="color:green"></i>'.
Dls.php:65:                     '<i class="fa fa-book" style="color:blue"></i>Editer les mnémos</a></li>'.
Dls.php:66:                 '<li><a href='.site_url('admin/msg/index/'.$dls->tech_id).'>'.
Dls.php:67:                     '<i class="fa fa-pencil" style="color:green"></i>'.
Dls.php:68:                     '<i class="fa fa-envelope" style="color:blue"></i>Editer les messages</a></li>'.
Dls.php:70:                 '<li><a href='.site_url('admin/dls/delete/'.$dls->tech_id).'>'.
Dls.php:71:                     '<i class="fa fa-times" style="color:red"></i>Supprimer ce D.L.S</a></li>'.
Dls.php:74:        $data[] = array(	$caret, $dls->id,
Dls.php:75:                        ($dls->actif ? anchor('admin/dls/stop/'.$dls->tech_id, '<span class="label label-success">Activé</span>')
Dls.php:76:                                            : anchor('admin/dls/start/'. $dls->tech_id, '<span class="label label-default">Inactif</span>')),
Dls.php:77: 				                   '<a href='.site_url('admin/dls/sourceedit/'.$dls->tech_id).' data-toggle="tooltip"  style="cursor:pointer" title="Editer Source">
Dls.php:78:                        '.$dls->tech_id.'</a>',
Dls.php:79:                        $dls->package, $dls->ppage."/".$dls->page,
Dls.php:80: 				                   '<a href='.site_url('admin/dls/sourceedit/'.$dls->tech_id).' data-toggle="tooltip"  style="cursor:pointer" title="Editer Source">
Dls.php:81:                        '.$dls->shortname.'</a>', $dls->name,
Dls.php:82:                        $dls->compil_date,
Dls.php:83:                        $dls_status[$dls->compil_status],
Dls.php:84:                        $dls->nbr_ligne." / ".$dls->nbr_compil,
Dls.php:87:		  $total_dls = $this->Dls_model->get_total_dls($this->session->user_access_level);
Dls.php:96:  { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Dls.php:98:    $this->data['syn'] = $syn = $this->Syn_model->get($syn_id);
Dls.php:100:    if ($this->session->user_access_level < $syn->access_level) {	redirect('auth', 'refresh');	}
Dls.php:102: 			$this->admin_breadcrumbs->unshift(2, 'Ajouter un module DLS', 'admin/dls/create');
Dls.php:103: 			$this->data['breadcrumb'] = $this->admin_breadcrumbs->show();
Dls.php:105: 			$this->form_validation->set_rules('tech_id','Tech_ID','required|is_unique[dls.tech_id]');
Dls.php:106: 			$this->form_validation->set_rules('shortname','Shortname','required');
Dls.php:107: 			$this->form_validation->set_rules('name','Libellé','required');
Dls.php:109: 			if($this->form_validation->run())
Dls.php:110:			  { $params = array( 'tech_id' => str_replace( " ", "_", str_replace("-", "_", $this->input->post('tech_id'))),
Dls.php:111:					                   'name' => $this->input->post('name'),
Dls.php:112:					                   'shortname' => $this->input->post('shortname'),
Dls.php:113:					                   'package' => $this->input->post('package'),
Dls.php:114:					                   'syn_id' => $syn->id,
Dls.php:118:       if ($this->input->post('package'))	{	$data['package'] = $this->input->post('package');	}
Dls.php:121:				   $dls_id = $this->Dls_model->add($params);
Dls.php:122:       $flash = 'Le dls <strong>'.$this->input->post('tech_id').'</strong> ('.$dls_id.') a été ajouté.';
Dls.php:123:				   $this->session->set_flashdata('flash_message', $flash);
Dls.php:124:       $this->wtd_log->add($flash);
Dls.php:125:       $this->wtd_webservice->send('/process/reload/dls');
Dls.php:128:    else $this->session->set_flashdata('flash_error', validation_errors() );
Dls.php:130:    $this->data['tech_id'] = array(	'name'  => 'tech_id',
Dls.php:133:                                    'class' => 'form-control',
Dls.php:134:	                                   'value' => $this->form_validation->set_value('tech_id', $this->input->post('tech_id'))
Dls.php:137:    $this->data['name'] = array(	'name'  => 'name',
Dls.php:140:                                 'class' => 'form-control',
Dls.php:141:                                 'value' => $this->form_validation->set_value('name', $this->input->post('name'))
Dls.php:144:    $this->data['shortname'] = array(	'name'  => 'shortname',
Dls.php:147:                                      'class' => 'form-control',
Dls.php:148:	                                     'value' => $this->form_validation->set_value('shortname', $this->input->post('shortname'))
Dls.php:151:    $this->data['package'] = array(	'name'  => 'package',
Dls.php:154:                                    'class' => 'form-control',
Dls.php:155:                                    'value' => $this->form_validation->set_value('name', $this->input->post('package'))
Dls.php:158:				$this->template->admin_render('admin/dls/add', $this->data);
Dls.php:162: 	{ if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Dls.php:164:    $target_dls = $this->Dls_model->get($tech_id);
Dls.php:166:     { $this->session->set_flashdata('flash_error', 'Module D.L.S '.$tech_id.' inconnu' );
Dls.php:169:    if ($target_dls->access_level < $this->session->user_access_level)
Dls.php:170:     { if($this->Dls_model->delete($target_dls->tech_id))
Dls.php:171: 			    { $flash = 'Module D.L.S ('.$target_dls->tech_id.', '.$target_dls->name.') supprimé';
Dls.php:172:          $this->session->set_flashdata('flash_message', $flash );
Dls.php:173:          $this->wtd_webservice->send('/dls/delete?id='.$target_dls->id);
Dls.php:174:          $this->wtd_log->add($flash);
Dls.php:177: 			    { $this->session->set_flashdata('flash_error', 'Erreur de suppression du Module D.L.S' ); }
Dls.php:180:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Dls.php:181:       $this->wtd_log->add("Tentative de suppression du module D.L.S ".
Dls.php:182:                           $target_dls->id." (".$target_dls->tech_id.", ".$target_dls->name.")");
Dls.php:188:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');		}
Dls.php:190:    $target_dls = $this->Dls_model->get($tech_id);
Dls.php:192:     { $this->session->set_flashdata('flash_error', 'Module D.L.S '.$tech_id.' inconnu' );
Dls.php:195:    if ($target_dls->access_level < $this->session->user_access_level)
Dls.php:196:     { if($this->Dls_model->start($target_dls->tech_id))
Dls.php:197: 			    { $flash = 'Module D.L.S ('.$target_dls->tech_id.', '.$target_dls->name.') activé';
Dls.php:198:          $this->session->set_flashdata('flash_message', $flash );
Dls.php:199:          $this->wtd_webservice->send('/dls/start?id='.$target_dls->id);
Dls.php:200:          $this->wtd_log->add($flash);
Dls.php:203: 			    { $this->session->set_flashdata('flash_error', "Erreur d'activation du Module D.L.S" ); }
Dls.php:206:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Dls.php:207:       $this->wtd_log->add("Tentative d'activation du module D.L.S ".
Dls.php:208:                           $target_dls->id." (".$target_dls->tech_id.", ".$target_dls->name.")");
Dls.php:214:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');		}
Dls.php:216:    $target_dls = $this->Dls_model->get($tech_id);
Dls.php:218:     { $this->session->set_flashdata('flash_error', 'Module D.L.S '.$tech_id.' inconnu' );
Dls.php:221:    if ($target_dls->access_level < $this->session->user_access_level)
Dls.php:222:     { if($this->Dls_model->stop($target_dls->tech_id))
Dls.php:223: 			    { $flash = 'Module D.L.S ('.$target_dls->tech_id.', '.$target_dls->name.') désactivé';
Dls.php:224:          $this->session->set_flashdata('flash_message', $flash );
Dls.php:225:          $this->wtd_webservice->send('/dls/stop?id='.$target_dls->id);
Dls.php:226:          $this->wtd_log->add($flash);
Dls.php:229: 			    { $this->session->set_flashdata('flash_error', "Erreur de désactivation du Module D.L.S" ); }
Dls.php:232:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Dls.php:233:       $this->wtd_log->add("Tentative désactivation du module D.L.S ".
Dls.php:234:                           $target_dls->id." (".$target_dls->tech_id.", ".$target_dls->name.")");
Dls.php:240:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');		}
Dls.php:242:    $target_dls = $this->Dls_model->get($tech_id);
Dls.php:244:     { $this->session->set_flashdata('flash_error', 'Module D.L.S '.$tech_id.' inconnu' );
Dls.php:247:    if ($target_dls->access_level < $this->session->user_access_level)
Dls.php:248:	    { $flash = 'Module D.L.S ('.$target_dls->tech_id.', '.$target_dls->name.') acquitté';
Dls.php:249:       $this->wtd_webservice->send('/dls/acquit?id='.$target_dls->id);
Dls.php:250:       $this->wtd_log->add($flash);
Dls.php:253:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Dls.php:254:       $this->wtd_log->add("Tentative d'acquit du module D.L.S ".
Dls.php:255:                           $target_dls->id." (".$target_dls->tech_id.", ".$target_dls->name.")");
Dls.php:261:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');		}
Dls.php:263:    $target_dls = $this->Dls_model->get($tech_id);
Dls.php:265:     { $this->session->set_flashdata('flash_error', 'Module D.L.S '.$id.' inconnu' );
Dls.php:268:    if ($target_dls->access_level < $this->session->user_access_level)
Dls.php:269:	    { $flash = 'Module D.L.S ('.$target_dls->tech_id.', '.$target_dls->name.') DEBUG ON';
Dls.php:270:       $this->wtd_webservice->send('/dls/debug?id='.$target_dls->id);
Dls.php:271:       $this->wtd_log->add($flash);
Dls.php:274:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Dls.php:275:       $this->wtd_log->add("Tentative de debug du module D.L.S ".
Dls.php:276:                           $target_dls->id." (".$target_dls->tech_id.", ".$target_dls->name.")");
Dls.php:282:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');		}
Dls.php:284:    $target_dls = $this->Dls_model->get($id);
Dls.php:286:     { $this->session->set_flashdata('flash_error', 'Module D.L.S '.$tech_id.' inconnu' );
Dls.php:289:    if ($target_dls->access_level < $this->session->user_access_level)
Dls.php:290:	    { $flash = 'Module D.L.S ('.$target_dls->tech_id.', '.$target_dls->name.') DEBUG OFF';
Dls.php:291:       $this->wtd_webservice->send('/dls/undebug?id='.$target_dls->id);
Dls.php:292:       $this->wtd_log->add($flash);
Dls.php:295:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Dls.php:296:       $this->wtd_log->add("Tentative de undebug du module D.L.S ".
Dls.php:297:                           $target_dls->id." (".$target_dls->tech_id.", ".$target_dls->name.")");
Dls.php:303:  { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Dls.php:305: 			if ($this->session->user_access_level<6)
Dls.php:306:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Dls.php:311:			 $this->data['dls'] = $dls = $this->Dls_model->get($tech_id);
Dls.php:313:     { $this->session->set_flashdata('flash_error', "Ce D.L.S n'existe pas");
Dls.php:317: 			if ($this->session->user_access_level<$dls->access_level)
Dls.php:318:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Dls.php:322:    $this->admin_breadcrumbs->unshift(2, 'Editer un module', 'admin/dls/edit/'.$tech_id);
Dls.php:323:	   $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();
Dls.php:325:				$this->form_validation->set_rules('tech_id','Tech ID','required');
Dls.php:326:				$this->form_validation->set_rules('shortname','Shortname','required');
Dls.php:328:   	if($this->form_validation->run() == TRUE)
Dls.php:329:	    { $params = array(	'tech_id'    => $this->input->post('tech_id'),
Dls.php:330:			                     'name'       => $this->input->post('name'),
Dls.php:331:			                     'shortname'  => $this->input->post('shortname'),
Dls.php:332:			                     'package'    => $this->input->post('package'),
Dls.php:333:			                     'actif'         => (null !== $this->input->post('actif') ? TRUE : FALSE),
Dls.php:336:	  				$this->Dls_model->update($tech_id,$params);
Dls.php:337:  					$this->session->set_flashdata('flash_message','Le dls <strong>'.$this->input->post('tech_id').'</strong>/'.
Dls.php:338:                                     $this->input->post('shortname').' a été modifié.');
Dls.php:339:       $this->wtd_log->add("Mise à jour du DLS ".$dls->id." (".$this->input->post('tech_id').") ");
Dls.php:343:     { $this->session->set_flashdata('flash_error', validation_errors() ); }
Dls.php:345:		  $this->data['tech_id'] = array(	'name'  => 'tech_id',
Dls.php:348:                                    'class' => 'form-control',
Dls.php:349:			                                 'value' => $this->form_validation->set_value('tech_id', $dls->tech_id)
Dls.php:351:		  $this->data['shortname'] = array(	'name'  => 'shortname',
Dls.php:354:                                      'class' => 'form-control',
Dls.php:355:                                      'value' => $this->form_validation->set_value('shortname', $dls->shortname)
Dls.php:357:		  $this->data['name'] = array(	'name'  => 'name',
Dls.php:360:                                 'class' => 'form-control',
Dls.php:361:                                 'value' => $this->form_validation->set_value('name', $dls->name)
Dls.php:364:		  $this->data['package'] = array(	'name'  => 'package',
Dls.php:367:                                    'class' => 'form-control',
Dls.php:368:                                    'value' => $this->form_validation->set_value('package', $dls->package)
Dls.php:371:		  $this->data['actif'] = array(	'name'  => 'actif',
Dls.php:373:                                 'checked' => $this->form_validation->set_value('actif', $dls->actif)
Dls.php:377:		  $this->template->admin_render('admin/dls/edit', $this->data);
Dls.php:381:  { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Dls.php:383: 			if ($this->session->user_access_level<6)
Dls.php:384:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Dls.php:388:    $this->admin_breadcrumbs->unshift(2, 'Editer une source D.L.S', 'admin/dls/sourceedit');
Dls.php:389:	   $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();
Dls.php:392:			 $this->data['dls'] = $dls = $this->Dls_model->get($tech_id);
Dls.php:394:     { $this->session->set_flashdata('flash_error', "Ce D.L.S n'existe pas");
Dls.php:398:				$this->form_validation->set_rules('sourcecode','Code Source','required');
Dls.php:400:   	if($this->form_validation->run() == TRUE)
Dls.php:401:	    { $params = array(	'sourcecode' => $this->input->post('sourcecode'),
Dls.php:404:	  				$this->Dls_model->update($dls->tech_id,$params);
Dls.php:405:  					$this->session->set_flashdata('flash_message','Le dls <strong>'.$dls->tech_id.'</strong>/'.
Dls.php:406:                                     $dls->shortname.' a été modifié.');
Dls.php:407:       $this->wtd_log->add("Mise à jour et compilation de la source DLS ".$dls->id." (".$dls->tech_id.") ");
Dls.php:408:       $this->wtd_webservice->compil($dls->id);
Dls.php:411:     { $this->session->set_flashdata('flash_error', validation_errors() ); }
Dls.php:413:    $this->data['error_log'] = $this->Dls_model->get_error_log($dls->tech_id);
Dls.php:414:    $this->data['sourcecode'] = array(	'name'  => 'sourcecode',
Dls.php:417:                                       'class' => 'form-control',
Dls.php:418:                                       'value' => $this->form_validation->set_value('sourcecode', $dls->sourcecode)
Dls.php:420:		  $this->template->admin_render('admin/dls/sourceedit', $this->data);
Dls.php:424:  { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Dls.php:426: 			if ($this->session->user_access_level<6)
Dls.php:427:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Dls.php:431:    $this->admin_breadcrumbs->unshift(2, 'Editer une source D.L.S', 'admin/dls/sourceedit');
Dls.php:432:	   $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();
Dls.php:435:			 $this->data['dls'] = $dls = $this->Dls_model->get($tech_id);
Dls.php:437:     { $this->session->set_flashdata('flash_error', "Ce D.L.S n'existe pas");
Dls.php:441: 			$this->form_validation->set_rules('sourcecode','Code Source','required');
Dls.php:443:   	if($this->form_validation->run() == TRUE)
Dls.php:444:	    { $params = array(	'sourcecode' => $this->input->post('sourcecode'),
Dls.php:447:	  				$this->Dls_model->update($dls->tech_id,$params);
Dls.php:448:  					$this->session->set_flashdata('flash_message','Le dls <strong>'.$dls->tech_id.'</strong>/'.
Dls.php:449:                                     $dls->shortname.' a été modifié.');
Dls.php:450:       $this->wtd_log->add("Mise à jour et compilation de la source DLS ".$dls->id." (".$dls->tech_id.") ");
Dls.php:451:       $this->wtd_webservice->compil($id);
Dls.php:454:     { $this->session->set_flashdata('flash_error', validation_errors() ); }
Dls.php:456:    $ch = curl_init( "https://packages.abls-habitat.fr/".$dls->package.".dls" );
Dls.php:461:    $this->data['dls']->sourcecode = $new_source;
Dls.php:463:    $this->data['error_log'] = $this->Dls_model->get_error_log($dls->tech_id);
Dls.php:464:    $this->data['sourcecode'] = array(	'name'  => 'sourcecode',
Dls.php:467:                                       'class' => 'form-control',
Dls.php:468:                                       'value' => $this->form_validation->set_value('sourcecode', $dls->sourcecode)
Dls.php:470:		  $this->template->admin_render('admin/dls/sourceedit', $this->data);
Dls.php:474:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth/login', 'refresh');	}
Dls.php:475:			 $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();
Dls.php:476:    $this->data['dlss'] = $this->wtd_webservice->get_primary("/dls/list");                        /* Get all running conf DLS */
Dls.php:477:    $this->template->admin_render('admin/dls/run', $this->data);                                             /* Load Template */
Dls.php:480:/*----------------------------------------------------------------------------------------------------------------------------*/
Icons.php:9:    $this->load->model('Icons_model');
Icons.php:10:    $this->admin_page_title->push('Gestion des Icones');
Icons.php:11:    $this->admin_breadcrumbs->unshift(1, 'Classes et Icones', 'admin/icons');
Icons.php:12:    $this->data['pagetitle'] = "<h1>Classes et Icones</h1>";
Icons.php:14:    $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();                                              /* Breadcrumbs */
Icons.php:19:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Icons.php:20:    $this->data['classes'] = $this->Icons_model->class_list();                                               /* Get all class */
Icons.php:22:    $this->template->admin_render('admin/icons/class_list', $this->data);                                    /* Load Template */
Icons.php:26:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Icons.php:27: 			$this->form_validation->set_rules('libelle','Libellé','required');
Icons.php:29: 			if ($this->session->user_access_level<6)
Icons.php:30:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Icons.php:34:    $this->admin_breadcrumbs->unshift(2, 'Creer une classe', 'admin/icons/class_create');
Icons.php:35:	   $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();
Icons.php:37: 			if($this->form_validation->run())
Icons.php:38:			  { $params = array( 'libelle' => $this->input->post('libelle'),
Icons.php:41:				   $classe_id = $this->Icons_model->class_create($params);
Icons.php:42:       $flash = 'La classe <strong>'.$this->input->post('libelle').'</strong> ('.$classe_id.') a été ajoutée.';
Icons.php:43:	      $this->session->set_flashdata('flash_message', $flash);
Icons.php:44:       $this->wtd_log->add($flash);
Icons.php:47:    else $this->session->set_flashdata('flash_error', validation_errors() );
Icons.php:49:    $this->data['libelle'] = array(	'name'  => 'libelle',
Icons.php:52:                                    'class' => 'form-control',
Icons.php:53:	                                   'value' => $this->form_validation->set_value('libelle', $this->input->post('libelle'))
Icons.php:56:    $this->template->admin_render('admin/icons/class_create', $this->data);                                  /* Load Template */
Icons.php:60:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Icons.php:62: 			if ($this->session->user_access_level<6)
Icons.php:63:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Icons.php:67:    $this->admin_breadcrumbs->unshift(2, 'Editer une classe', 'admin/icons/class_edit/'.$class_id);
Icons.php:68:	   $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();
Icons.php:71:			 $this->data['class'] = $class = $this->Icons_model->class_get($class_id);
Icons.php:73:     { $this->session->set_flashdata('flash_error', "Cette classe n'existe pas");
Icons.php:77: 			$this->form_validation->set_rules('libelle','Libellé','required');
Icons.php:79: 			if($this->form_validation->run())
Icons.php:80:			  { $params = array( 'libelle' => $this->input->post('libelle'),
Icons.php:83:				   if($this->Icons_model->class_update($class->id, $params)==TRUE)
Icons.php:84:        { $flash = 'La classe <strong>'.$this->input->post('libelle').'</strong> ('.$class->id.') a été modifiée.';
Icons.php:85:				      $this->session->set_flashdata('flash_message', $flash);
Icons.php:88:        { $flash = 'Erreur lors de la modification de la classe <strong>'.$class->libelle.'</strong> ('.$class->id.').';
Icons.php:89:				      $this->session->set_flashdata('flash_error', $flash);
Icons.php:91:       $this->wtd_log->add($flash);
Icons.php:94:    else $this->session->set_flashdata('flash_error', validation_errors() );
Icons.php:96:    $this->data['libelle'] = array(	'name'  => 'libelle',
Icons.php:99:                                    'class' => 'form-control',
Icons.php:100:	                                   'value' => $this->form_validation->set_value('libelle', $class->libelle)
Icons.php:103:    $this->template->admin_render('admin/icons/class_edit', $this->data);                                    /* Load Template */
Icons.php:107:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Icons.php:109: 			if ($this->session->user_access_level<6)
Icons.php:110:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Icons.php:114:    $this->admin_breadcrumbs->unshift(3, 'Editer un icone', 'admin/icons/icon_edit/'.$icon_id);
Icons.php:115:	   $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();
Icons.php:118:			 $this->data['icon'] = $icon = $this->Icons_model->icon_get($icon_id);
Icons.php:120:     { $this->session->set_flashdata('flash_error', "Cet icone n'existe pas");
Icons.php:123:    $this->data['classes'] = $this->Icons_model->class_list();                                               /* Get all class */
Icons.php:125: 			$this->form_validation->set_rules('libelle','Libellé','required');
Icons.php:127: 			if($this->form_validation->run())
Icons.php:128:			  { $params = array( 'libelle'    => $this->input->post('libelle'),
Icons.php:129:                        'type'       => $this->input->post('type_icone'),
Icons.php:130:                        'id_classe'  => $this->input->post('id_classe'),
Icons.php:133:				   if($this->Icons_model->icon_update($icon->id, $params)==TRUE)
Icons.php:134:        { $flash = 'Cet icone <strong>'.$this->input->post('libelle').'</strong> ('.$icon->id.') a été modifié.';
Icons.php:135:				      $this->session->set_flashdata('flash_message', $flash);
Icons.php:138:        { $flash = 'Erreur lors de la modification de la classe <strong>'.$class->libelle.'</strong> ('.$class->id.').';
Icons.php:139:				      $this->session->set_flashdata('flash_error', $flash);
Icons.php:141:       $this->wtd_log->add($flash);
Icons.php:142:       redirect('admin/icons/icon_list/'.$icon->id_classe);
Icons.php:144:    else $this->session->set_flashdata('flash_error', validation_errors() );
Icons.php:146:    $this->data['libelle'] = array(	'name'  => 'libelle',
Icons.php:149:                                    'class' => 'form-control',
Icons.php:150:	                                   'value' => $this->form_validation->set_value('libelle', $icon->libelle)
Icons.php:152:    $this->data['nbr_matrice'] = array(	'name'  => 'nbr_matrice',
Icons.php:155:                                        'class' => 'form-control',
Icons.php:157:	                                       'value' => $this->form_validation->set_value('nbr_matrice', $icon->nbr_matrice)
Icons.php:160:    $this->data['new_file'] = array(	'name'  => 'new_file',
Icons.php:162:                                     'class' => 'form-control',
Icons.php:165:    $this->template->admin_render('admin/icons/icons_edit', $this->data);                                    /* Load Template */
Icons.php:169:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Icons.php:171: 			if ($this->session->user_access_level<6)
Icons.php:172:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Icons.php:177:			 $this->data['icon'] = $icon = $this->Icons_model->icon_get($icon_id);
Icons.php:179:     { $this->session->set_flashdata('flash_error', "Cet icone n'existe pas");
Icons.php:183:			 /*$params = array( 'libelle' => $this->input->post('libelle'),
Icons.php:188:    if ($icon->nbr_matrice==0)
Icons.php:189:     { $config['file_name']            = $icon->id.'.'.$icon->type; }
Icons.php:191:     { $config['file_name']            = $icon->id.'.'.$icon->type.sprintf(".%02d", $icon->nbr_matrice); }
Icons.php:197:    $this->load->library('upload', $config);
Icons.php:199:    if ( ! $this->upload->do_upload('new_file') )
Icons.php:200:     { $this->session->set_flashdata('flash_error', $this->upload->display_errors() );
Icons.php:201:       redirect('admin/icons/icon_list/'.$icon->id_classe);
Icons.php:203:    $params['nbr_matrice'] = $icon->nbr_matrice+1;
Icons.php:205:	   $this->Icons_model->icon_update($icon->id, $params);
Icons.php:206:    $flash = 'Cet icone <strong>'.$icon->libelle.'</strong> ('.$icon->id.') a été modifié.';
Icons.php:207:	   $this->session->set_flashdata('flash_message', $flash);
Icons.php:208:    $this->wtd_log->add($flash);
Icons.php:209:    redirect('admin/icons/icon_list/'.$icon->id_classe);
Icons.php:214:   	if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Icons.php:216:    $target_class = $this->Icons_model->class_get($id);
Icons.php:218:     { $this->session->set_flashdata('flash_error', 'Classe '.$id.' inconnue' );
Icons.php:221:    if ($this->session->user_access_level >= 6)
Icons.php:222:     { if($this->Icons_model->class_delete($target_class->id))
Icons.php:223: 			    { $flash = 'Classe ('.$target_class->id.', '.$target_class->libelle.') supprimée';
Icons.php:224:          $this->session->set_flashdata('flash_message', $flash );
Icons.php:225:          $this->wtd_log->add( $flash );
Icons.php:228: 			    { $this->session->set_flashdata('flash_error', 'Erreur de suppression Classe' ); }
Icons.php:231:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Icons.php:232:       $this->wtd_log->add("Tentative de suppression classe ".$target_class->id.', '.$target_class->libelle);
Icons.php:238:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Icons.php:239:    $this->data['icons'] = $icon = $this->Icons_model->icons_list($id);                                      /* Get all icons */
Icons.php:240:    $this->data['class_id'] = $id;                                                                           /* Get all icons */
Icons.php:242:    $this->admin_breadcrumbs->unshift(3, 'Liste des icones', 'admin/icons/icon_list'.$id);
Icons.php:243:	   $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();
Icons.php:245:    $this->template->admin_render('admin/icons/icons_list', $this->data);                                    /* Load Template */
Icons.php:250:   	if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Icons.php:252:    $target_icon = $this->Icons_model->icon_get($id);
Icons.php:254:     { $this->session->set_flashdata('flash_error', 'Icone '.$id.' inconnu' );
Icons.php:257:    if ($this->session->user_access_level >= 6)
Icons.php:258:     { if($this->Icons_model->icon_delete($target_icon->id))
Icons.php:259: 			    { $flash = 'Icone ('.$target_icon->id.', '.$target_icon->libelle.') supprimé';
Icons.php:260:          $this->session->set_flashdata('flash_message', $flash );
Icons.php:261:          $this->wtd_log->add( $flash );
Icons.php:264: 			    { $this->session->set_flashdata('flash_error', 'Erreur de suppression Icone' ); }
Icons.php:267:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Icons.php:268:       $this->wtd_log->add("Tentative de suppression icone ".$target_icon->id.', '.$target_icon->libelle);
Icons.php:274: 	{ if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Icons.php:276:    $target_class = $this->Icons_model->class_get($id_classe);
Icons.php:278:     { $this->session->set_flashdata('flash_error', 'Classe '.$id_classe.' inconnue' );
Icons.php:282:    if ($this->session->user_access_level >= 6)
Icons.php:285:       $icon_id = $this->Icons_model->icon_add($params);
Icons.php:287: 			    { $flash = 'Icone '.$icon_id.' a été ajouté dans la classe '.$target_class->libelle.' ('.$target_class->id.')';
Icons.php:288:          $this->session->set_flashdata('flash_message', $flash );
Icons.php:289:          $this->wtd_log->add( $flash );
Icons.php:292: 			    { $this->session->set_flashdata('flash_error', 'Erreur d\'ajout d\'icone' ); }
Icons.php:295:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Icons.php:296:       $this->wtd_log->add("Tentative d'ajout d'icone");
Icons.php:301:/*----------------------------------------------------------------------------------------------------------------------------*/
Instance.php:10:  { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Instance.php:13:     { $this->wtd_webservice->set_instance($instance);
Instance.php:18:/*----------------------------------------------------------------------------------------------------------------------------*/
Log.php:7:    /*$this->load->model('Dls_model');*/
Log.php:8:    $this->load->model('Syn_model');
Log.php:9:    $this->data["load_js"] = "log.js";
Log.php:11:    $this->admin_page_title->push('Audit Log');
Log.php:12:    $this->data['pagetitle'] = "<h1>Audit Log</h1>";
Log.php:14:    $this->admin_breadcrumbs->unshift(1, 'Audit Log', 'admin/log');
Log.php:19:  { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Log.php:21:			 $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();
Log.php:23:			 $this->template->admin_render('admin/log/index', $this->data);
Log.php:27:  {	header("Content-Type: application/json; charset=UTF-8");
Log.php:28:		  $draw   = intval($this->input->get("draw"));
Log.php:29:    $start  = intval($this->input->get("start"));
Log.php:30:		  $length = intval($this->input->get("length"));
Log.php:33:    if ( ! $this->wtd_auth->logged_in() )
Log.php:38: 			$logs = $this->wtd_log->get_all($start, $length);
Log.php:39:		  foreach($logs->result() as $log)
Log.php:40:     { $data[] = array(	$log->date, $log->access_level, $log->username, $log->message );
Log.php:42:		  $total_log = $this->wtd_log->get_total();
Log.php:49:/*----------------------------------------------------------------------------------------------------------------------------*/
Maintenance.php:7:    $this->load->model('Msg_model');
Maintenance.php:10:    $this->admin_page_title->push('Maintenance');
Maintenance.php:12:    $this->admin_breadcrumbs->unshift(1, 'Maintenance', 'admin/maintenance');
Maintenance.php:13:    $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();                                              /* Breadcrumbs */
Maintenance.php:18:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');		}
Maintenance.php:20:    $this->Msg_model->clear_histo();
Maintenance.php:22:    $this->session->set_flashdata('flash_message', $flash );
Maintenance.php:23:    $this->wtd_log->add($flash);
Maintenance.php:28:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');		}
Maintenance.php:31:     { case 'debug'   : $this->wtd_webservice->send( '/log/debug' ); break;
Maintenance.php:32:       case 'info'    : $this->wtd_webservice->send( '/log/info' ); break;
Maintenance.php:33:       case 'notice'  : $this->wtd_webservice->send( '/log/notice' ); break;
Maintenance.php:34:       case 'warning' : $this->wtd_webservice->send( '/log/warning' ); break;
Maintenance.php:35:       case 'error'   : $this->wtd_webservice->send( '/log/error' ); break;
Maintenance.php:38:    $this->session->set_flashdata('flash_message', $flash );
Maintenance.php:39:    $this->wtd_log->add($flash);
Maintenance.php:44:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');		}
Maintenance.php:47:     { case 'clear'  : $this->wtd_webservice->send( '/archive/clear' ); $flash = 'Archive Cleared !'; break;
Maintenance.php:48:       case 'purge'  : $this->wtd_webservice->send( '/archive/purge' ); $flash = 'Archive Purge in progress !'; break;
Maintenance.php:49:       case 'testdb' : $this->wtd_webservice->send( '/archive/testdb' ); $flash = 'Archive DB Connection test sent !'; break;
Maintenance.php:52:    $this->session->set_flashdata('flash_message', $flash );
Maintenance.php:53:    $this->wtd_log->add($flash);
Maintenance.php:58:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth/login', 'refresh');	}
Maintenance.php:59:			 $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();
Maintenance.php:60:    $this->template->admin_render('admin/maintenance/index', $this->data);                                   /* Load Template */
Maintenance.php:63:/*----------------------------------------------------------------------------------------------------------------------------*/
Mnemo.php:8:    $this->load->model('Config_model');
Mnemo.php:9:    $this->load->model('Mnemo_model');
Mnemo.php:10:    $this->load->model('Dls_model');
Mnemo.php:11:    $this->load->model('Msg_model');
Mnemo.php:14:    $this->admin_page_title->push('Mnémoniques');
Mnemo.php:15: 			$this->admin_breadcrumbs->unshift(1, 'Modules D.L.S', 'admin/dls');
Mnemo.php:16:    $this->data['pagetitle'] = $this->admin_page_title->show();
Mnemo.php:18:    $this->msgs_types = array
Mnemo.php:19:     ( '<img style="width: 20px" data-toggle="tooltip" title="Information" src="https://icons.abls-habitat.fr/assets/gif/Info.svg" />',
Mnemo.php:20:       '<img style="width: 20px" data-toggle="tooltip" title="Alerte"      src="https://icons.abls-habitat.fr/assets/gif/Bouclier2_rouge.svg" />',
Mnemo.php:21:       '<img style="width: 20px" data-toggle="tooltip" title="Défaut"      src="https://icons.abls-habitat.fr/assets/gif/Pignon_jaune.svg" />',
Mnemo.php:22:       '<img style="width: 20px" data-toggle="tooltip" title="Alarme"      src="https://icons.abls-habitat.fr/assets/gif/Pignon_orange.svg" />',
Mnemo.php:23:       '<img style="width: 20px" data-toggle="tooltip" title="Veille"      src="https://icons.abls-habitat.fr/assets/gif/Bouclier2_vert.svg" />',
Mnemo.php:24:       '<img style="width: 20px" data-toggle="tooltip" title="Attente"     src="https://icons.abls-habitat.fr/assets/gif/Bouclier2_noir.svg" />',
Mnemo.php:25:       '<img style="width: 20px" data-toggle="tooltip" title="Danger"      src="https://icons.abls-habitat.fr/assets/gif/Croix_rouge_rouge.svg" />',
Mnemo.php:26:       '<img style="width: 20px" data-toggle="tooltip" title="Dérangement" src="https://icons.abls-habitat.fr/assets/gif/Croix_rouge_jaune.svg" />',
Mnemo.php:28:    $this->msgs_types_sms   = array ( 'Désactivé', 'Activé', 'GSM Only', 'SMSBOXOnly' );
Mnemo.php:33:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Mnemo.php:34: 			$this->admin_breadcrumbs->unshift(2, 'Liste des mnémoniques', 'admin/mnemo/index/'.$tech_id);
Mnemo.php:35:    $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();                                              /* Breadcrumbs */
Mnemo.php:37:    $this->data['instances'] = $this->Config_model->get_instances();                                         /* Get all users */
Mnemo.php:38:    $this->data['dls'] = $this->Dls_model->get($tech_id);
Mnemo.php:39:    $this->data['mnemos_DI'] = $this->Mnemo_model->get_all_DI($tech_id);                                     /* Get all users */
Mnemo.php:40:    $this->data['mnemos_DO'] = $this->Mnemo_model->get_all_DO($tech_id);                                     /* Get all users */
Mnemo.php:41:    $this->data['mnemos_CI'] = $this->Mnemo_model->get_all_CI($tech_id);                                     /* Get all users */
Mnemo.php:42:    foreach ($this->data['mnemos_CI'] as $mnemo):
Mnemo.php:43:      $result= $this->wtd_webservice->post( '/memory',
Mnemo.php:45:                       "tech_id" => $mnemo->tech_id, "acronyme" => $mnemo->acronyme ) );
Mnemo.php:47:       { $mnemo->etat   = $result->etat;
Mnemo.php:48:         $mnemo->valeur   = $result->valeur;
Mnemo.php:51:    $this->data['mnemos_CH'] = $this->Mnemo_model->get_all_CH($tech_id);                                     /* Get all users */
Mnemo.php:52:    foreach ($this->data['mnemos_CH'] as $mnemo):
Mnemo.php:53:      $result= $this->wtd_webservice->post( '/memory',
Mnemo.php:55:                       "tech_id" => $mnemo->tech_id, "acronyme" => $mnemo->acronyme ) );
Mnemo.php:57:       { $mnemo->etat   = $result->etat;
Mnemo.php:58:         $mnemo->valeur   = $result->valeur;
Mnemo.php:61:    $this->data['mnemos_AI'] = $this->Mnemo_model->get_all_AI($tech_id);                                     /* Get all users */
Mnemo.php:62:    $this->data['mnemos_AO'] = $this->Mnemo_model->get_all_AO($tech_id);                                     /* Get all users */
Mnemo.php:63:    $this->data['mnemos_R']  = $this->Mnemo_model->get_all_R($tech_id);                                      /* Get all users */
Mnemo.php:64:    $this->data['mnemos_HORLOGE'] = $this->Mnemo_model->get_all_HORLOGE($tech_id);                           /* Get all users */
Mnemo.php:65:    $this->data['mnemos_TEMPO'] = $this->Mnemo_model->get_all_TEMPO($tech_id);                               /* Get all users */
Mnemo.php:66:    $this->data['msgs'] = $this->Msg_model->get_all_MSG($tech_id);
Mnemo.php:67:    $this->data['profils_audio'] = $this->Msg_model->get_all_profils_audio();
Mnemo.php:68:    $this->template->admin_render('admin/mnemo/index', $this->data);                                         /* Load Template */
Mnemo.php:72: 	{ if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Mnemo.php:75:     { case "DI":      $mnemo = $this->Mnemo_model->get_DI($tech_id,$acronyme); break;
Mnemo.php:76:       case "DO":      $mnemo = $this->Mnemo_model->get_DO($tech_id,$acronyme); break;
Mnemo.php:77:       case "MSG":     $mnemo = $this->Msg_model->get_MSG($tech_id,$acronyme); break;
Mnemo.php:78:       case "CI":      $mnemo = $this->Mnemo_model->get_CI($tech_id,$acronyme); break;
Mnemo.php:79:       case "AI":      $mnemo = $this->Mnemo_model->get_AI($tech_id,$acronyme); break;
Mnemo.php:80:       case "AO":      $mnemo = $this->Mnemo_model->get_AO($tech_id,$acronyme); break;
Mnemo.php:81:       case "CH":      $mnemo = $this->Mnemo_model->get_CH($tech_id,$acronyme); break;
Mnemo.php:82:       case "R" :      $mnemo = $this->Mnemo_model->get_R($tech_id,$acronyme); break;
Mnemo.php:83:       case "HORLOGE": $mnemo = $this->Mnemo_model->get_HORLOGE($tech_id,$acronyme); break;
Mnemo.php:84:       case "TEMPO":   $mnemo = $this->Mnemo_model->get_TEMPO($tech_id,$acronyme); break;
Mnemo.php:88:     { $this->session->set_flashdata('flash_error', 'Mnémonique inconnu' );
Mnemo.php:91:    if ($mnemo->access_level < $this->session->user_access_level)
Mnemo.php:93:        { case "DI": $retour = $this->Mnemo_model->delete_DI($mnemo->tech_id,$mnemo->acronyme); break;
Mnemo.php:94:          case "DO": $retour = $this->Mnemo_model->delete_DO($mnemo->tech_id,$mnemo->acronyme); break;
Mnemo.php:95:          case "CI": $retour = $this->Mnemo_model->delete_CI($mnemo->tech_id,$mnemo->acronyme); break;
Mnemo.php:96:          case "AI": $retour = $this->Mnemo_model->delete_AI($mnemo->tech_id,$mnemo->acronyme); break;
Mnemo.php:97:          case "AO": $retour = $this->Mnemo_model->delete_AO($mnemo->tech_id,$mnemo->acronyme); break;
Mnemo.php:98:          case "CH": $retour = $this->Mnemo_model->delete_CH($mnemo->tech_id,$mnemo->acronyme); break;
Mnemo.php:99:          case "R":  $retour = $this->Mnemo_model->delete_R ($mnemo->tech_id,$mnemo->acronyme); break;
Mnemo.php:100:          case "HORLOGE": $retour = $this->Mnemo_model->delete_HORLOGE($mnemo->tech_id,$mnemo->acronyme); break;
Mnemo.php:101:          case "TEMPO":   $retour = $this->Mnemo_model->delete_TEMPO($mnemo->tech_id,$mnemo->acronyme); break;
Mnemo.php:102:          case "MSG": $retour = $this->Msg_model->delete_MSG($mnemo->id); break;
Mnemo.php:105: 			    { $flash = 'Mnémonique '.$mnemo->tech_id.":".$mnemo->acronyme.' supprimé';
Mnemo.php:106:          $this->session->set_flashdata('flash_message', $flash );
Mnemo.php:107:          $this->wtd_log->add($flash);
Mnemo.php:110: 			    { $this->session->set_flashdata('flash_error', 'Erreur de suppression mnémonique' ); }
Mnemo.php:113:     { $this->session->set_flashdata('flash_error', 'Permission error' );
Mnemo.php:114:       $this->wtd_log->add("Tentative de suppression du mnémonique ".$mnemo->tech_id.":".$mnemo->acronyme);
Mnemo.php:116:    redirect('admin/mnemo/index/'.$mnemo->tech_id);
Mnemo.php:120: 	{ if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Mnemo.php:122:     { case "DI":      $mnemo = $this->Mnemo_model->get_DI($tech_id,$acronyme); break;
Mnemo.php:123:       case "DO":      $mnemo = $this->Mnemo_model->get_DO($tech_id,$acronyme); break;
Mnemo.php:124:       case "MSG":     $mnemo = $this->Msg_model->get_MSG($tech_id,$acronyme); break;
Mnemo.php:125:       case "CI":      $mnemo = $this->Mnemo_model->get_CI($tech_id,$acronyme); break;
Mnemo.php:126:       case "AI":      $mnemo = $this->Mnemo_model->get_AI($tech_id,$acronyme); break;
Mnemo.php:127:       case "AO":      $mnemo = $this->Mnemo_model->get_AO($tech_id,$acronyme); break;
Mnemo.php:128:       case "CH":      $mnemo = $this->Mnemo_model->get_CH($tech_id,$acronyme); break;
Mnemo.php:129:       case "R":       $mnemo = $this->Mnemo_model->get_R($tech_id,$acronyme); break;
Mnemo.php:130:       case "HORLOGE": $mnemo = $this->Mnemo_model->get_HORLOGE($tech_id,$acronyme); break;
Mnemo.php:134:     { $this->session->set_flashdata('flash_error', 'Mnémonique inconnu' );
Mnemo.php:138:    if ($mnemo->access_level < $this->session->user_access_level)
Mnemo.php:140:        { case "DI": $retour = $this->Mnemo_model->set_DI($mnemo->tech_id, $mnemo->acronyme,
Mnemo.php:141:                                      array ( "src_host"   => $this->input->post("src_host"),
Mnemo.php:142:                                              "src_thread" => strtoupper($this->input->post("src_thread")),
Mnemo.php:143:                                              "src_text"   => strtoupper($this->input->post("src_text")) ) );
Mnemo.php:144:                     $this->wtd_webservice->send('/process/reload/'.$mnemo->src_thread);
Mnemo.php:145:                     $new_thread = strtoupper($this->input->post("src_thread"));
Mnemo.php:146:                     if (strcmp($mnemo->src_thread, $new_thread))
Mnemo.php:147:                      { $this->wtd_webservice->send('/process/reload/'.$new_thread); }
Mnemo.php:149:          case "DO": $retour = $this->Mnemo_model->set_DO($mnemo->tech_id, $mnemo->acronyme,
Mnemo.php:150:                                      array ( "dst_host"   => $this->input->post("dst_host"),
Mnemo.php:151:                                              "dst_thread" => strtoupper($this->input->post("dst_thread")),
Mnemo.php:152:                                              "dst_tag"    => strtoupper($this->input->post("dst_tag")),
Mnemo.php:153:                                              "dst_param1" => $this->input->post("dst_param1") ) );
Mnemo.php:154:                     $this->wtd_webservice->send('/process/reload/'.$mnemo->dst_thread);
Mnemo.php:155:                     $new_thread = strtoupper($this->input->post("dst_thread"));
Mnemo.php:156:                     if (strcmp($mnemo->dst_thread, $new_thread))
Mnemo.php:157:                      { $this->wtd_webservice->send('/process/reload/'.$new_thread); }
Mnemo.php:159:          case "CI": $retour = $this->Mnemo_model->set_CI($mnemo->tech_id, $mnemo->acronyme,
Mnemo.php:160:                                      array ( "unite"  => $this->input->post("unite"),
Mnemo.php:161:                                              "multi"  => $this->input->post("multi"),
Mnemo.php:162:                                              "valeur" => $this->input->post("valeur") ) );
Mnemo.php:163:                     $this->wtd_webservice->post( '/memory',
Mnemo.php:165:                                    "tech_id" => $mnemo->tech_id, "acronyme" => $mnemo->acronyme,
Mnemo.php:166:                                    "unite"  => $this->input->post("unite"),
Mnemo.php:167:                                    "multi"  => $this->input->post("multi"),
Mnemo.php:168:                                    "valeur" => $this->input->post("valeur") ) );
Mnemo.php:171:                     $this->wtd_webservice->post( '/memory',
Mnemo.php:173:                                    "tech_id" => $mnemo->tech_id, "acronyme" => $mnemo->acronyme,
Mnemo.php:174:                                    "valeur" => $this->input->post("valeur") ) );
Mnemo.php:176:          case "R":  $retour = $this->Mnemo_model->set_R($mnemo->tech_id, $mnemo->acronyme,
Mnemo.php:177:                                      array ( "unite"  => $this->input->post("unite"),
Mnemo.php:178:                                              "archivage"  => (null !== $this->input->post("archivage"))) );
Mnemo.php:179:                     $this->wtd_webservice->post( '/memory',
Mnemo.php:181:                                    "tech_id" => $mnemo->tech_id, "acronyme" => $mnemo->acronyme,
Mnemo.php:182:                                    "unite"  => $this->input->post("unite"),
Mnemo.php:183:                                    "archivage"  => (null !== $this->input->post("archivage")) ) );
Mnemo.php:186:                     $retour = $this->Mnemo_model->set_HORLOGE($mnemo->tech_id, $mnemo->acronyme,
Mnemo.php:187:                                      array ( "heure"  => $this->input->post("heure"),
Mnemo.php:188:                                              "minute" => $this->input->post("minute"),
Mnemo.php:189:                                              "lundi"  => $this->input->post("lundi"),
Mnemo.php:192:          case "AI": $retour = $this->Mnemo_model->set_AI($mnemo->tech_id, $mnemo->acronyme,
Mnemo.php:193:                                      array ( "map_host"   => $this->input->post("map_host"),
Mnemo.php:194:                                              "map_thread" => strtoupper($this->input->post("map_thread")),
Mnemo.php:195:                                              "map_text"   => strtoupper($this->input->post("map_text")),
Mnemo.php:196:                                              "unite"  => $this->input->post("unite"),
Mnemo.php:197:                                              "min"    => $this->input->post("min"),
Mnemo.php:198:                                              "max"    => $this->input->post("max"),
Mnemo.php:199:                                              "type"   => $this->input->post("type"),
Mnemo.php:201:                     $this->wtd_webservice->send('/process/reload/'.$mnemo->map_thread);
Mnemo.php:202:                     $new_thread = strtoupper($this->input->post("map_thread"));
Mnemo.php:203:                     if (strcmp($mnemo->map_thread, $new_thread))
Mnemo.php:204:                      { $this->wtd_webservice->send('/process/reload/'.$new_thread); }
Mnemo.php:206:          case "AO": $retour = $this->Mnemo_model->set_AO($mnemo->tech_id, $mnemo->acronyme,
Mnemo.php:207:                                      array ( "map_host"   => $this->input->post("map_host"),
Mnemo.php:208:                                              "map_thread" => strtoupper($this->input->post("map_thread")),
Mnemo.php:209:                                              "map_text"   => strtoupper($this->input->post("map_text")),
Mnemo.php:210:                                              "min"    => $this->input->post("min"),
Mnemo.php:211:                                              "max"    => $this->input->post("max"),
Mnemo.php:212:                                              "type"   => $this->input->post("type"),
Mnemo.php:214:                     $this->wtd_webservice->send('/process/reload/'.$mnemo->map_thread);
Mnemo.php:215:                     $new_thread = strtoupper($this->input->post("map_thread"));
Mnemo.php:216:                     if (strcmp($mnemo->map_thread, $new_thread))
Mnemo.php:217:                      { $this->wtd_webservice->send('/process/reload/'.$new_thread); }
Mnemo.php:219:          case "MSG":$retour = $this->Msg_model->set_MSG($mnemo->id,
Mnemo.php:220:                                      array ( "enable"   => (null !== $this->input->post("enable")),
Mnemo.php:221:                                              "libelle"  => $this->input->post("libelle"),
Mnemo.php:222:                                              "audio"    => (null !== $this->input->post("audio")),
Mnemo.php:223:                                              "profil_audio"   => $this->input->post("profil_audio"),
Mnemo.php:224:                                              "libelle_audio"  => $this->input->post("libelle_audio"),
Mnemo.php:225:                                              "sms"      => $this->input->post("enable_sms"),
Mnemo.php:226:                                              "libelle_sms"  => $this->input->post("libelle_sms"),
Mnemo.php:231: 			    { $flash = 'Mnémonique '.$mnemo->tech_id.":".$mnemo->acronyme.' modifié';
Mnemo.php:232:          $this->session->set_flashdata('flash_message', $flash );
Mnemo.php:233:          $this->wtd_log->add($flash);
Mnemo.php:236: 			    { $this->session->set_flashdata('flash_error', 'Erreur de modification de mnémonique' ); }
Mnemo.php:239:     { $this->session->set_flashdata('flash_error', 'Permission error' );
Mnemo.php:240:       $this->wtd_log->add("Tentative de modification du mnémonique ".$mnemo->tech_id.":".$mnemo->acronyme);
Mnemo.php:242:    redirect('admin/mnemo/index/'.$mnemo->tech_id);
Mnemo.php:245:/*----------------------------------------------------------------------------------------------------------------------------*/
Modbus.php:9:    $this->load->model('Modbus_model');
Modbus.php:10:    $this->load->model('Mnemo_model');
Modbus.php:11:    $this->admin_page_title->push('Liste des Modules Wago/Modbus');
Modbus.php:12:    $this->admin_breadcrumbs->unshift(1, 'Liste des Modules Wago/Modbus', 'admin/modbus');
Modbus.php:13:    $this->data['pagetitle'] = $this->admin_page_title->show();
Modbus.php:14:    $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();                                              /* Breadcrumbs */
Modbus.php:19:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth/login', 'refresh');	}
Modbus.php:20:    $this->data['modbus'] = $this->Modbus_model->get_all()->result();                                       /* Get all modbus */
Modbus.php:21:    $this->template->admin_render('admin/modbus/index', $this->data);                                        /* Load Template */
Modbus.php:25:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth/login', 'refresh');	}
Modbus.php:26:    $this->data['modbus'] = $this->wtd_webservice->get_primary("/process/modbus/list");                     /* Get all modbus */
Modbus.php:27:    $this->template->admin_render('admin/modbus/run', $this->data);                                          /* Load Template */
Modbus.php:31:    { if ( ! $this->wtd_auth->logged_in() ) { redirect('auth', 'refresh'); }
Modbus.php:34:      $target_modbus = $this->Modbus_model->get($id);
Modbus.php:36:       { $this->session->set_flashdata('flash_error', 'Wago/Modbus '.$id.' inconnu' );
Modbus.php:39:      $this->Modbus_model->activate($id);
Modbus.php:40:      $this->wtd_log->add("Wago/Modbus ".$target_modbus->id." (".$target_modbus->hostname.") activé");
Modbus.php:41:      $this->wtd_webservice->send('/process/reload/modbus');
Modbus.php:46:    { if ( ! $this->wtd_auth->logged_in() ) { redirect('auth', 'refresh'); }
Modbus.php:49:      $target_modbus = $this->Modbus_model->get($id);
Modbus.php:51:       { $this->session->set_flashdata('flash_error', 'Wago/Modbus '.$id.' inconnu' );
Modbus.php:54:      $this->Modbus_model->deactivate($id);
Modbus.php:55:      $this->wtd_log->add("Wago/Modbus ".$target_modbus->id." (".$target_modbus->hostname.") désactivé");
Modbus.php:56:      $this->wtd_webservice->send('/process/reload/modbus');
Modbus.php:62:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Modbus.php:64:                   'tech_id'        => "NEW-".date("Ymd-His"),
Modbus.php:70:  		if ($this->Modbus_model->add($data))
Modbus.php:72:       $this->wtd_log->add($flash);
Modbus.php:73:       $this->session->set_flashdata('flash_message', $flash );
Modbus.php:76:	    { $this->session->set_flashdata('flash_error', "Erreur lors de l'ajout Onduleur" );
Modbus.php:85:   	if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Modbus.php:87:    $target_modbus = $this->Modbus_model->get($id);
Modbus.php:89:     { $this->Modbus_model->delete($id);
Modbus.php:90:       $flash = 'Wago/Modbus '.$target_modbus->hostname.' ('.$target_module->tech_id.') supprimé';
Modbus.php:91:       $this->session->set_flashdata('flash_message', $flash );
Modbus.php:92:       $this->wtd_log->add( $flash );
Modbus.php:93:       $this->wtd_webservice->send('/process/reload/modbus');
Modbus.php:96:     { $this->session->set_flashdata('flash_error', 'Tentative de suppression du modbus '.$id.' inconnu' );
Modbus.php:97:       $this->wtd_log->add("Wago/Modbus ".$target_modbus->id." inconnu ");
Modbus.php:104:	 {	if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Modbus.php:107:    $this->admin_breadcrumbs->unshift(2, 'Edition du module '.$id, 'admin/modbus/edit');
Modbus.php:108:    $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();
Modbus.php:111:    $this->form_validation->set_rules('hostname', 'Hostname', 'required');
Modbus.php:112:    $this->form_validation->set_rules('tech_id', 'tech_id', 'required');
Modbus.php:113: 			if ($this->form_validation->run() == TRUE)
Modbus.php:114:     {	$data = array( 'hostname'  => $this->input->post('hostname'),
Modbus.php:115:                      'tech_id'   => $this->input->post('tech_id'),
Modbus.php:116:                      'description' => $this->input->post('description'),
Modbus.php:117:		                    'map_E'     => $this->input->post('map_E'),
Modbus.php:118:		                    'max_nbr_E' => $this->input->post('max_nbr_E'),
Modbus.php:119:		                    'map_EA'    => $this->input->post('map_EA'),
Modbus.php:120:		                    'map_A'     => $this->input->post('map_A'),
Modbus.php:121:		                    'map_AA'    => $this->input->post('map_AA'),
Modbus.php:122:		                    'watchdog'  => $this->input->post('watchdog'),
Modbus.php:125:       if($this->Modbus_model->update($id, $data))
Modbus.php:126: 			    { $flash='Module '.$this->input->post('hostname').' ('.$this->input->post('tech_id').') modifié';
Modbus.php:127:          $this->session->set_flashdata('flash_message', $flash );
Modbus.php:128:          $this->wtd_webservice->send('/process/reload/modbus');
Modbus.php:129:          $this->wtd_log->add( $flash );
Modbus.php:133: 			    { $flash='Erreur de mise à jour du module ' . $this->input->post('hostname').' ('.$this->input->post('tech_id').')';
Modbus.php:134: 			      $this->session->set_flashdata('flash_error', $flash );
Modbus.php:135:          $this->wtd_log->add( $flash );
Modbus.php:139:    else $this->session->set_flashdata('flash_error', validation_errors() );
Modbus.php:141:    $modbus = $this->Modbus_model->get($id);
Modbus.php:142:    $this->data['maps_di'] = $this->Mnemo_model->get_all_DI_by_thread($modbus->tech_id,'MODBUS');           /* Get all modbus */
Modbus.php:143:    $this->data['maps_ai'] = $this->Mnemo_model->get_all_AI_by_thread($modbus->tech_id,'MODBUS');           /* Get all modbus */
Modbus.php:144:		  $this->data['hostname'] = array(	'name'  => 'hostname',
Modbus.php:147:                                     'class' => 'form-control',
Modbus.php:148:		                                   'value' => $this->form_validation->set_value('hostname', $modbus->hostname)
Modbus.php:150:		  $this->data['tech_id']  = array(	'name'  => 'tech_id',
Modbus.php:153:                                     'class' => 'form-control',
Modbus.php:154:                                     'value' => $this->form_validation->set_value('tech_id', $modbus->tech_id)
Modbus.php:156:		  $this->data['watchdog']  = array(	'name'  => 'watchdog',
Modbus.php:159:                                      'class' => 'form-control',
Modbus.php:160:                                      'value' => $this->form_validation->set_value('watchdog', $modbus->watchdog)
Modbus.php:162:		  $this->data['description']  = array(	'name'  => 'description',
Modbus.php:165:                                         'class' => 'form-control',
Modbus.php:166:		                                       'value' => $this->form_validation->set_value('description', $modbus->description)
Modbus.php:169:		  $this->data['map_E'] = array(	'name'  => 'map_E',
Modbus.php:172:                                  'class' => 'form-control',
Modbus.php:173:		                                'value' => $this->form_validation->set_value('map_E', $modbus->map_E)
Modbus.php:175:		  $this->data['max_nbr_E'] = array(	'name'  => 'max_nbr_E',
Modbus.php:178:                                      'class' => 'form-control',
Modbus.php:179:		                                    'value' => $this->form_validation->set_value('map_E', $modbus->max_nbr_E)
Modbus.php:181:		  $this->data['map_EA'] = array(	'name'  => 'map_EA',
Modbus.php:184:                                  'class' => 'form-control',
Modbus.php:185:		                                'value' => $this->form_validation->set_value('map_EA', $modbus->map_EA)
Modbus.php:187:		  $this->data['map_A'] = array(	'name'  => 'map_A',
Modbus.php:190:                                  'class' => 'form-control',
Modbus.php:191:		                                'value' => $this->form_validation->set_value('map_A', $modbus->map_A)
Modbus.php:193:		  $this->data['map_AA'] = array(	'name'  => 'map_AA',
Modbus.php:196:                                  'class' => 'form-control',
Modbus.php:197:		                                'value' => $this->form_validation->set_value('map_AA', $modbus->map_AA)
Modbus.php:200:		  $this->template->admin_render('admin/modbus/edit', $this->data);
Modbus.php:203:/*----------------------------------------------------------------------------------------------------------------------------*/
Msg.php:4:putenv('GOOGLE_APPLICATION_CREDENTIALS='.realpath('application/third_party/texttospeech/json/testseboc-fdab13333e50.json'));
Msg.php:15:    $this->load->model('Msg_model');
Msg.php:16:    $this->load->model('Dls_model');
Msg.php:19:    $this->admin_page_title->push('Messages');
Msg.php:20:    $this->data['pagetitle'] = "<h1>Messages</h1>";
Msg.php:22: 			$this->admin_breadcrumbs->unshift(1, 'Modules D.L.S', 'admin/dls');
Msg.php:23:    $this->msgs_types = array
Msg.php:24:     ( '<img style="width: 20px" data-toggle="tooltip" title="Information" src="https://icons.abls-habitat.fr/assets/gif/Info.svg" />',
Msg.php:25:       '<img style="width: 20px" data-toggle="tooltip" title="Alerte"      src="https://icons.abls-habitat.fr/assets/gif/Bouclier2_rouge.svg" />',
Msg.php:26:       '<img style="width: 20px" data-toggle="tooltip" title="Défaut"      src="https://icons.abls-habitat.fr/assets/gif/Pignon_jaune.svg" />',
Msg.php:27:       '<img style="width: 20px" data-toggle="tooltip" title="Alarme"      src="https://icons.abls-habitat.fr/assets/gif/Pignon_orange.svg" />',
Msg.php:28:       '<img style="width: 20px" data-toggle="tooltip" title="Veille"      src="https://icons.abls-habitat.fr/assets/gif/Bouclier2_vert.svg" />',
Msg.php:29:       '<img style="width: 20px" data-toggle="tooltip" title="Attente"     src="https://icons.abls-habitat.fr/assets/gif/Bouclier2_noir.svg" />',
Msg.php:30:       '<img style="width: 20px" data-toggle="tooltip" title="Danger"      src="https://icons.abls-habitat.fr/assets/gif/Croix_rouge_rouge.svg" />',
Msg.php:31:       '<img style="width: 20px" data-toggle="tooltip" title="Dérangement" src="https://icons.abls-habitat.fr/assets/gif/Croix_rouge_jaune.svg" />',
Msg.php:33:    $this->msgs_types_sms = array
Msg.php:34:     ( '<span class="label label-default">Désactivé</span>',
Msg.php:35:       '<span class="label label-success">Activé</span>',
Msg.php:36:       '<span class="label label-warning">GSM Only</span>',
Msg.php:37:       '<span class="label label-warning">SMSBOXOnly</span>'
Msg.php:42:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Msg.php:44: 			$this->admin_breadcrumbs->unshift(2, 'Liste des messages', 'admin/msg/index/'.$id);
Msg.php:45:    $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();                                              /* Breadcrumbs */
Msg.php:46:    $this->data['msgs'] = $this->Msg_model->get_by_dls_id($id)->result();                                    /* Get all users */
Msg.php:48:    $this->template->admin_render('admin/msg/index', $this->data);                                           /* Load Template */
Msg.php:52:  { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Msg.php:54:			 $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();
Msg.php:55:		/*	$this->data['msgs'] = $this->Msg_model->get_all_msgs($dls_id);*/
Msg.php:57:			 $this->template->admin_render('admin/msg/dico', $this->data);
Msg.php:61:  {	header("Content-Type: application/json; charset=UTF-8");
Msg.php:62:		  $draw   = intval($this->input->get("draw"));
Msg.php:63:    $start  = intval($this->input->get("start"));
Msg.php:64:		  $length = intval($this->input->get("length"));
Msg.php:67:    if ( ! $this->wtd_auth->logged_in() )
Msg.php:72: 			$msgs = $this->Msg_model->get_all($start, $length);
Msg.php:73:		  foreach($msgs->result() as $msg)
Msg.php:75:                '<button class="btn btn-xs btn-primary dropdown-toggle" type="button" data-toggle="dropdown">'.
Msg.php:77:                '<ul class="dropdown-menu">'.
Msg.php:78:                '<li><a href='.site_url('admin/msg/edit/'.$msg->id).'>'.
Msg.php:79:                    '<i class="fa fa-pencil" style="color:green"></i>'.
Msg.php:80:                    '<i class="fa fa-enveloppe" style="color:blue"></i>Editer</a></li>'.
Msg.php:82:                 '<li><a href='.site_url('admin/msg/delete/'.$msg->id).'>'.
Msg.php:83:                     '<i class="fa fa-times" style="color:red"></i>Supprimer</a></li>'.
Msg.php:86:       $data[] = array(	($msg->enable ? '<span class="label label-success">Activé</span>'
Msg.php:87:                                      : '<span class="label label-default">Inactif</span>'),
Msg.php:88:                        $msg->shortname, $msg->tech_id,
Msg.php:89:                        anchor('admin/msg/edit/'.$msg->id, $msg->acronyme),
Msg.php:90:                        $this->msgs_types[$msg->type],
Msg.php:91:                        anchor('admin/msg/edit/'.$msg->id, $msg->libelle ),
Msg.php:92:                        $this->msgs_types_sms[$msg->sms],
Msg.php:93:                        ($msg->audio ? '<span class="label label-success">Activé</span>'
Msg.php:94:                                     : '<span class="label label-default">Inactif</span>'),
Msg.php:95:                        $msg->time_repeat
Msg.php:98:		  $total_msg = $this->Msg_model->get_count();
Msg.php:106:  { if ( ! $this->wtd_auth->logged_in() ) { redirect('auth', 'refresh'); }
Msg.php:109:    $target = $this->Msg_model->get($id);
Msg.php:111:     { $this->session->set_flashdata('flash_error', 'Message '.$id.' inconnu' );
Msg.php:112:       redirect('admin/msg/index/'.$target->dls_id);
Msg.php:114:    $this->Msg_model->activate($id);
Msg.php:115:    $this->wtd_log->add("Message ".$target->id." (".$target->libelle.") activé");
Msg.php:116:    redirect('admin/msg/index/'.$target->dls_id);
Msg.php:120:  { if ( ! $this->wtd_auth->logged_in() ) { redirect('auth', 'refresh'); }
Msg.php:123:    $target = $this->Msg_model->get($id);
Msg.php:125:     { $this->session->set_flashdata('flash_error', 'Message '.$id.' inconnu' );
Msg.php:126:       redirect('admin/msg/index/'.$target->dls_id);
Msg.php:128:    $this->Msg_model->deactivate($id);
Msg.php:129:    $this->wtd_log->add("Message ".$target->id." (".$target->libelle.") désactivé");
Msg.php:130:    redirect('admin/msg/index/'.$target->dls_id);
Msg.php:135:   	if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Msg.php:137:    $target = $this->Msg_model->get($id);
Msg.php:139:     { $this->session->set_flashdata('flash_error', 'Message '.$id.' inconnu' );
Msg.php:140:       redirect('admin/msg/index/'.$target->dls_id);
Msg.php:142:    if ($this->session->user_access_level>=$target->access_level)
Msg.php:143:     { if($this->Msg_model->delete($target->id))
Msg.php:144: 			    { $flash = 'Message '.$target->id.' ('.$target->tech_id.', '.$target->libelle.') supprimé';
Msg.php:145:          $this->session->set_flashdata('flash_message', $flash );
Msg.php:146:          $this->wtd_log->add($flash);
Msg.php:149: 			    { $this->session->set_flashdata('flash_error', 'Erreur de message '.$id ); }
Msg.php:152:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Msg.php:153:       $this->wtd_log->add("Tentative de suppression de message ". $target->id." (".$target->libelle.")");
Msg.php:155:    redirect('admin/msg/index/'.$target->dls_id);
Msg.php:163: 			if ($this->session->user_access_level<6)
Msg.php:164:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Msg.php:169:			 $this->data['message'] = $message = $this->Msg_model->get($id);
Msg.php:171:     { $this->session->set_flashdata('flash_error', "Ce message n'existe pas");
Msg.php:175: 			if ($this->session->user_access_level<$message->access_level)
Msg.php:176:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Msg.php:177:       redirect('admin/msg/index/'.$message->dls_id);
Msg.php:181:    $this->admin_breadcrumbs->unshift(2, "Edition du message", 'admin/msg/edit/'.$id );
Msg.php:182:    $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();
Msg.php:185:    $this->form_validation->set_rules('libelle', 'Libellé', 'required');
Msg.php:186: 			if ($this->form_validation->run() == TRUE)
Msg.php:187:     {	$data = array( 'enable'         => $this->input->post('enable') !== NULL ? TRUE : FALSE,
Msg.php:188:                      'libelle'        => $this->input->post('libelle'),
Msg.php:189:		                    'libelle_audio'  => $this->input->post('libelle_audio'),
Msg.php:190:                      'sms'            => $this->input->post('sms_mode'),
Msg.php:191:		                    'libelle_sms'    => $this->input->post('libelle_sms'),
Msg.php:194:       if($this->Msg_model->update($message->id, $data))
Msg.php:195: 			    { $flash='Le message <strong>'.$message->tech_id.':'.$message->acronyme.'</strong> ('.$message->id.') a été modifié'; 
Msg.php:196:          $this->session->set_flashdata('flash_message', $flash );
Msg.php:197:          $this->wtd_log->add( $flash );
Msg.php:198:          redirect('admin/msg/index/'.$message->dls_id);
Msg.php:201: 			    { $flash='Tentative de modification du message '.$message->tech_id.':'.$message->acronyme.'('.$message->id.')'; 
Msg.php:202:          $this->session->set_flashdata('flash_error', $flash );
Msg.php:203:          $this->wtd_log->add( $flash );
Msg.php:204:          redirect('admin/msg/index/'.$message->dls_id);
Msg.php:207:    else $this->session->set_flashdata('flash_error', validation_errors() );
Msg.php:209:		  $this->data['enable'] = array(	'name'  => 'enable',
Msg.php:212:                                 /*'class' => 'form-control',*/
Msg.php:213:                                   'checked' => $this->form_validation->set_value('enable', $message->enable)
Msg.php:216:		  $this->data['ppage'] = array(	'name'  => 'ppage',
Msg.php:219:                                  'class' => 'form-control',
Msg.php:221:	                                 'value' => $this->form_validation->set_value('ppage', $message->ppage)
Msg.php:223:		  $this->data['page'] = array(	'name'  => 'page',
Msg.php:226:                                 'class' => 'form-control',
Msg.php:228:	                                'value' => $this->form_validation->set_value('page', $message->page)
Msg.php:230:		  $this->data['dls_shortname'] = array(	'name'  => 'dls_shortname',
Msg.php:233:                                          'class' => 'form-control',
Msg.php:235:	                                         'value' => $this->form_validation->set_value('dls_shortname', $message->shortname)
Msg.php:237:		  $this->data['dls_tech_id'] = array(	'name'  => 'dls_tech_id',
Msg.php:240:                                        'class' => 'form-control',
Msg.php:242:	                                       'value' => $this->form_validation->set_value('dls_tech_id', $message->tech_id)
Msg.php:244:		  $this->data['acronyme'] = array(	'name'  => 'acronyme',
Msg.php:247:                                     'class' => 'form-control',
Msg.php:249:                                     'value' => $this->form_validation->set_value('acronyme', $message->acronyme)
Msg.php:251:		  $this->data['libelle'] = array(	'name'  => 'libelle',
Msg.php:254:                                    'class' => 'form-control',
Msg.php:256:	                                   'value' => $this->form_validation->set_value('libelle', $message->libelle)
Msg.php:259:		  $this->data['type'] = $message->type;
Msg.php:261:		  $this->data['libelle_audio'] = array(	'name'  => 'libelle_audio',
Msg.php:264:                                    'class' => 'form-control',
Msg.php:266:	                                   'value' => $this->form_validation->set_value('libelle_audio', $message->libelle_audio)
Msg.php:268:		  $this->data['sms_mode'] = array(	'name'  => 'sms_mode',
Msg.php:270:                                     'options'  => $this->msgs_types_sms,
Msg.php:271:                                     'class' => 'form-control',
Msg.php:272:                                     'selected' => array($message->sms),
Msg.php:274:		  $this->data['libelle_sms'] = array(	'name'  => 'libelle_sms',
Msg.php:277:                                        'class' => 'form-control',
Msg.php:279:	                                       'value' => $this->form_validation->set_value('libelle_sms', $message->libelle_sms)
Msg.php:281:		  $this->template->admin_render('admin/msg/edit', $this->data);
Msg.php:285:		if (!isset($_POST['audio-filename']) && !isset($_POST['video-filename'])) {
Msg.php:293:		if (isset($_POST['audio-filename'])) {
Msg.php:294:			$fileName = $_POST['audio-filename'];
Msg.php:295:			$tempName = $_FILES['audio-blob']['tmp_name'];
Msg.php:297:			$fileName = $_POST['video-filename'];
Msg.php:298:			$tempName = $_FILES['video-blob']['tmp_name'];
Msg.php:328:		echo $this->text_to_speech($filePath);
Msg.php:341:			'languageCode' => 'fr-FR',
Msg.php:359:		$results = $speech->recognize(fopen($fileName, 'r'), $options);
Msg.php:363:				return ucfirst($result->alternatives()[0]['transcript'] . PHP_EOL);
Process.php:7:    $this->load->model('Config_model');
Process.php:8:    $this->data['instances'] = $this->Config_model->get_instances();                                     /* Get all instances */
Process.php:11:    $this->admin_page_title->push('Processus');
Process.php:12:    $this->data['pagetitle'] = "<h1>Listes des processus sur <strong>".$this->wtd_webservice->instance()."</strong></h1>";
Process.php:14:    $this->admin_breadcrumbs->unshift(1, 'Processus', 'admin/process');
Process.php:15:    $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();                                              /* Breadcrumbs */
Process.php:20:	 { $this->wtd_webservice->set_instance( $this->data["instances"][$this->input->post("instance")]->instance_id );
Process.php:25:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');		}
Process.php:27:    if (6 <= $this->session->user_access_level)
Process.php:29:       $this->session->set_flashdata('flash_message', $flash );
Process.php:30:       $this->Config_model->set($this->wtd_webservice->instance(), $thread, "enable", "true");
Process.php:31:       $this->wtd_webservice->send('/process/start/'.$thread);
Process.php:32:       $this->wtd_log->add($flash);
Process.php:35:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Process.php:36:       $this->wtd_log->add("Tentative d'activation du processus ". $thread );
Process.php:42:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');		}
Process.php:44:    if (6 <= $this->session->user_access_level)
Process.php:46:       $this->session->set_flashdata('flash_message', $flash );
Process.php:47:       $this->Config_model->set($this->wtd_webservice->instance(), $thread, "enable", "false");
Process.php:48:       $this->wtd_webservice->send('/process/stop/'.$thread);
Process.php:49:       $this->wtd_log->add($flash);
Process.php:52:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Process.php:53:       $this->wtd_log->add("Tentative de désactivation du processus ". $thread );
Process.php:59:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');		}
Process.php:61:    if ($target_dls->access_level < $this->session->user_access_level)
Process.php:63:       $this->session->set_flashdata('flash_message', $flash );
Process.php:64:       $this->wtd_webservice->send('/process/reload/'.$thread);
Process.php:65:       $this->wtd_log->add($flash);
Process.php:68:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Process.php:69:       $this->wtd_log->add("Tentative de reload du processus ". $thread );
Process.php:75:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');		}
Process.php:77:    if ($target_dls->access_level < $this->session->user_access_level)
Process.php:79:       $this->session->set_flashdata('flash_message', $flash );
Process.php:80:       $this->Config_model->set($this->wtd_webservice->instance(), $thread, "debug", "true");
Process.php:81:       $this->wtd_webservice->send('/process/debug/'.$thread);
Process.php:82:       $this->wtd_log->add($flash);
Process.php:85:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Process.php:86:       $this->wtd_log->add("Tentative de debug du processus ". $thread );
Process.php:92:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');		}
Process.php:94:    if ($target_dls->access_level < $this->session->user_access_level)
Process.php:96:       $this->session->set_flashdata('flash_message', $flash );
Process.php:97:       $this->Config_model->set($this->wtd_webservice->instance(), $thread, "debug", "false");
Process.php:98:       $this->wtd_webservice->send('/process/undebug/'.$thread);
Process.php:99:       $this->wtd_log->add($flash);
Process.php:102:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Process.php:103:       $this->wtd_log->add("Tentative de undebug du processus ". $thread );
Process.php:109:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth/login', 'refresh');	}
Process.php:110:			 $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();
Process.php:111:    $this->data['processus'] = $this->wtd_webservice->get_local("/process/list");                  /* Get all running process */
Process.php:112:    $this->template->admin_render('admin/process/index', $this->data);                                       /* Load Template */
Process.php:115:/*----------------------------------------------------------------------------------------------------------------------------*/
Syn.php:7:       $this->load->model('Syn_model');
Syn.php:8:       $this->data["load_js"] = "atelier.js";
Syn.php:10:       $this->admin_page_title->push('Synoptiques');
Syn.php:11:       $this->data['pagetitle'] = "<h1>Synoptiques</h1>";
Syn.php:13:       $this->admin_breadcrumbs->unshift(1, 'Synoptiques', 'admin/syn');
Syn.php:18:     { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Syn.php:20:    			$this->data['breadcrumb'] = $this->admin_breadcrumbs->show();
Syn.php:22:			    $this->template->admin_render('admin/syn/index', $this->data);
Syn.php:27:  {	header("Content-Type: application/json; charset=UTF-8");
Syn.php:28:		  $draw   = intval($this->input->get("draw"));
Syn.php:29:    $start  = intval($this->input->get("start"));
Syn.php:30:		  $length = intval($this->input->get("length"));
Syn.php:34:		  if ( ! $this->wtd_auth->logged_in() )
Syn.php:39:  		$syns = $this->Syn_model->get_all($start, $length);
Syn.php:40:		  foreach($syns->result() as $syn)
Syn.php:42:                '<button class="btn btn-xs btn-primary dropdown-toggle" type="button" data-toggle="dropdown">'.
Syn.php:44:                '<ul class="dropdown-menu">'.
Syn.php:45:                '<li><a href='.site_url('admin/syn/edit/'.$syn->id).'>'.
Syn.php:46:                    '<i class="fa fa-pencil" style="color:green"></i>'.
Syn.php:47:                    '<i class="fa fa-image" style="color:blue"></i>Configurer</a></li>'.
Syn.php:48:                '<li><a href='.site_url('admin/syn/atelier/'.$syn->id).'>'.
Syn.php:49:                    '<i class="fa fa-pencil" style="color:green"></i>'.
Syn.php:50:                    '<i class="fa fa-image" style="color:blue"></i>Atelier</a></li>'.
Syn.php:51:                '<li><a href='.site_url('admin/syn/create/'.$syn->id).'>'.
Syn.php:52:                    '<i class="fa fa-plus" style="color:green"></i>'.
Syn.php:53:                    '<i class="fa fa-image" style="color:blue"></i>Creer un fils</a></li>'.
Syn.php:54:                '<li><a href='.site_url('admin/dls/create/'.$syn->id).'>'.
Syn.php:55:                    '<i class="fa fa-plus" style="color:green"></i>'.
Syn.php:56:                    '<i class="fa fa-cog" style="color:blue"></i>Creer un DLS</a></li>'.
Syn.php:58:                '<li><a href='.site_url('admin/syn/delete/'.$syn->id).'>'.
Syn.php:59:                    '<i class="fa fa-times" style="color:red"></i>Supprimer ce synoptique</a></li>'.
Syn.php:61:       $data[] = array(	$caret, $syn->id,	$syn->access_level, $syn->ppage, $syn->page,
Syn.php:62:                      	'<a href='.site_url('admin/syn/edit/'.$syn->id).' data-toggle="tooltip" style="cursor:pointer" title="Configurer">'.$syn->libelle.'</a>',
Syn.php:66:		  $total_syns = $this->Syn_model->get_total();
Syn.php:75:  { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Syn.php:77: 			if ($this->session->user_access_level<6)
Syn.php:78:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Syn.php:79:       return($this->index());
Syn.php:83: 			$syn = $this->Syn_model->get($id);
Syn.php:85:     { $this->session->set_flashdata('flash_error', "Ce synoptique n'existe pas");
Syn.php:86:       return($this->index());
Syn.php:95:				$new_syn_id = $this->Syn_model->create($params);
Syn.php:97:				$this->session->set_flashdata('flash_message',$message);
Syn.php:98:    $this->wtd_log->add($message);
Syn.php:104:  { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Syn.php:106: 			if ($this->session->user_access_level<6)
Syn.php:107:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Syn.php:108:       return($this->index());
Syn.php:112: 			$syn = $this->data['syn'] = $this->Syn_model->get($id);
Syn.php:114:     { $this->session->set_flashdata('flash_error', "Ce synoptique n'existe pas");
Syn.php:115:       return($this->index());
Syn.php:118:				$this->admin_breadcrumbs->unshift(2, 'Editer un synoptique', 'admin/syn/edit');
Syn.php:119:				$this->data['breadcrumb'] = $this->admin_breadcrumbs->show();
Syn.php:120:				$this->data['syns'] = $this->Syn_model->get_all(0,0);
Syn.php:122:				$this->form_validation->set_rules('access_level','Access Level','required');
Syn.php:123:				$this->form_validation->set_rules('libelle','Libellé','required');
Syn.php:124:				$this->form_validation->set_rules('page','Page','required');
Syn.php:126:				if($this->form_validation->run())
Syn.php:127:		 		{	$params = array(	'access_level' => $this->input->post('access_level'),
Syn.php:128:						                  'libelle' => $this->input->post('libelle'),
Syn.php:129:						                  'page' => $this->input->post('page'),
Syn.php:132:  					$this->Syn_model->update($id,$params);
Syn.php:134:       $this->session->set_flashdata('flash_message','Le synoptique '.$params['page'].' a été modifié.');
Syn.php:135:       $this->wtd_log->add('Le synoptique '.$params['page'].' a été modifié.');
Syn.php:139:     { $this->session->set_flashdata('flash_error', validation_errors() ); }
Syn.php:141:		  $this->data['ppage'] = array(	'name'  => 'ppage',
Syn.php:144:                                  'class'   => 'form-control',
Syn.php:146:			                               'value'   => $this->form_validation->set_value('ppage', $syn->ppage)
Syn.php:148:		  $this->data['access_level'] = array(	'name'  => 'access_level',
Syn.php:151:                                      'class' => 'form-control',
Syn.php:152:                                      'value' => $this->form_validation->set_value('access_level', $syn->access_level)
Syn.php:154:		  $this->data['page'] = array(	'name'  => 'page',
Syn.php:157:                                 'class' => 'form-control',
Syn.php:158:                                 'value' => $this->form_validation->set_value('page', $syn->page)
Syn.php:161:		  $this->data['libelle'] = array(	'name'  => 'libelle',
Syn.php:164:                                    'class' => 'form-control',
Syn.php:165:                                    'value' => $this->form_validation->set_value('libelle', $syn->libelle)
Syn.php:168:		  $this->template->admin_render('admin/syn/edit', $this->data);
Syn.php:173:  {	if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Syn.php:175:     { $this->session->set_flashdata('flash_error', 'Suppression du synoptique racine interdite !');
Syn.php:180:    $target = $this->Syn_model->get($id);
Syn.php:182:     { $this->session->set_flashdata('flash_error', 'Synoptique '.$id.' inconnu' );
Syn.php:185:    if ($target->access_level < $this->session->user_access_level)
Syn.php:186:     { if($this->Syn_model->delete($target->id))
Syn.php:187: 			    { $flash = 'Synoptique '.$target->libelle.' ('.$target->id.') supprimé';
Syn.php:188:          $this->session->set_flashdata('flash_message', $flash );
Syn.php:189:          $this->wtd_webservice->send('/reload/dls');
Syn.php:190:          $this->wtd_log->add($flash);
Syn.php:193: 			    { $this->session->set_flashdata('flash_error', 'Erreur de suppression du Synoptique '.$target->id ); }
Syn.php:196:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Syn.php:197:       $this->wtd_log->add("Tentative de suppression du synoptique ".$target->libelle.' ('.$target->id.')' );
Syn.php:203:  { if ( ! $this->wtd_auth->logged_in()) { redirect('auth/login', 'refresh'); }
Syn.php:205:    $syn = $this->Syn_model->get($id);
Syn.php:206:    $this->data["syn"] = $syn->libelle;
Syn.php:207:    $this->data["body_ready"] = "Charger_syn(".$id.")";
Syn.php:209:   	$ch = curl_init( "https://icons.abls-habitat.fr/icons/class_list" );
Syn.php:212:    $this->data["classes"] = json_decode($source);
Syn.php:214:    $this->template->admin_render('admin/syn/atelier', $this->data);
Syn.php:218:  { if ( ! $this->wtd_auth->logged_in()) { redirect('auth/login', 'refresh'); }
Syn.php:219:    $motifs = json_decode ( $this->input->raw_input_stream, TRUE );
Syn.php:232:     $this->Syn_model->update_motif ( $motif["id"], $param );
Syn.php:237:  { if ( ! $this->wtd_auth->logged_in()) { redirect('auth/login', 'refresh'); }
Syn.php:238:    $motif = json_decode ( $this->input->raw_input_stream, TRUE );
Syn.php:239:    $this->Syn_model->delete_motif ( $motif["id"] );
Syn.php:243:  { if ( ! $this->wtd_auth->logged_in()) { redirect('auth/login', 'refresh'); }
Syn.php:244:    header("Content-Type: application/json; charset=UTF-8");
Syn.php:246:    $motif = json_decode ( $this->input->raw_input_stream, TRUE );
Syn.php:248:    $param["bitctrl"]       = -1;
Syn.php:261:    $new_id = $this->Syn_model->add_motif ( $param );
Syn.php:262:    $motif = $this->Syn_model->get_motif($new_id);
Syn.php:268:  { if ( ! $this->wtd_auth->logged_in()) { redirect('auth/login', 'refresh'); }
Syn.php:269:    $liens = json_decode ( $this->input->raw_input_stream, TRUE );
Syn.php:281:     $this->Syn_model->update_lien ( $lien["id"], $param );
Syn.php:286:  { if ( ! $this->wtd_auth->logged_in()) { redirect('auth/login', 'refresh'); }
Syn.php:287:    $lien = json_decode ( $this->input->raw_input_stream, TRUE );
Syn.php:288:    $this->Syn_model->delete_lien ( $lien["id"] );
Syn.php:292:  { if ( ! $this->wtd_auth->logged_in()) { redirect('auth/login', 'refresh'); }
Syn.php:293:    header("Content-Type: application/json; charset=UTF-8");
Syn.php:295:    $lien = json_decode ( $this->input->raw_input_stream, TRUE );
Syn.php:307:    $new_id = $this->Syn_model->add_lien ( $param );
Syn.php:308:    $lien = $this->Syn_model->get_lien($new_id);
Syn.php:314:  { if ( ! $this->wtd_auth->logged_in()) { redirect('auth/login', 'refresh'); }
Syn.php:315:    $rectangles = json_decode ( $this->input->raw_input_stream, TRUE );
Syn.php:329:     $this->Syn_model->update_rectangle ( $rectangle["id"], $param );
Syn.php:334:  { if ( ! $this->wtd_auth->logged_in()) { redirect('auth/login', 'refresh'); }
Syn.php:335:    $lien = json_decode ( $this->input->raw_input_stream, TRUE );
Syn.php:336:    $this->Syn_model->delete_rectangle ( $rectangle["id"] );
Syn.php:340:  { if ( ! $this->wtd_auth->logged_in()) { redirect('auth/login', 'refresh'); }
Syn.php:341:    header("Content-Type: application/json; charset=UTF-8");
Syn.php:342:    $rectangle = json_decode ( $this->input->raw_input_stream, TRUE );
Syn.php:356:    $new_id = $this->Syn_model->add_rectangle ( $param );
Syn.php:357:    $rectangle = $this->Syn_model->get_rectangle($new_id);
Syn.php:364:  { if ( ! $this->wtd_auth->logged_in()) { redirect('auth/login', 'refresh'); }
Syn.php:365:    $comments = json_decode ( $this->input->raw_input_stream, TRUE );
Syn.php:374:     $this->Syn_model->update_comment ( $comment["id"], $param );
Syn.php:379:  { if ( ! $this->wtd_auth->logged_in()) { redirect('auth/login', 'refresh'); }
Syn.php:380:    $comment = json_decode ( $this->input->raw_input_stream, TRUE );
Syn.php:381:    $this->Syn_model->delete_comment ( $comment["id"] );
Syn.php:385:  { if ( ! $this->wtd_auth->logged_in()) { redirect('auth/login', 'refresh'); }
Syn.php:386:    header("Content-Type: application/json; charset=UTF-8");
Syn.php:387:    $comment = json_decode ( $this->input->raw_input_stream, TRUE );
Syn.php:396:    $new_id = $this->Syn_model->add_comment ( $param );
Syn.php:397:    $comment = $this->Syn_model->get_comment($new_id);
Syn.php:403:/*----------------------------------------------------------------------------------------------------------------------------*/
Tableau.php:7:    $this->load->model('Tableau_model');
Tableau.php:10:    $this->admin_page_title->push('Tableaux');
Tableau.php:11:    $this->data['pagetitle'] = "<h1>Gestions des tableaux</h1>";
Tableau.php:13:    $this->admin_breadcrumbs->unshift(1, 'Tableaux', 'admin/tableau');
Tableau.php:18:  { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Tableau.php:20:			 $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();
Tableau.php:21:    $this->data['tableaux'] = $this->Tableau_model->get_all();                                                 /* Get all ups */
Tableau.php:23:			 $this->template->admin_render('admin/tableau/index', $this->data);
Tableau.php:27:  { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Tableau.php:31:	   $tableau = $this->Tableau_model->add($data);
Tableau.php:32:    $flash = 'Le tableau <strong>'.$tableau->id.'</strong> a été ajouté.';
Tableau.php:33:	   $this->session->set_flashdata('flash_message', $flash);
Tableau.php:34:    $this->wtd_log->add($flash);
Tableau.php:39: 	{ if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Tableau.php:41:    $target = $this->Tableau_model->get($id);
Tableau.php:43:     { $this->session->set_flashdata('flash_error', 'Tableau '.$id.' inconnu' );
Tableau.php:46:    if ($target->access_level < $this->session->user_access_level)
Tableau.php:47:     { if($this->Tableau_model->delete($target->id))
Tableau.php:48: 			    { $flash = 'Tableau <strong>'.$target->titre.'</strong> ('.$target->id.') supprimé';
Tableau.php:49:          $this->session->set_flashdata('flash_message', $flash );
Tableau.php:50:          $this->wtd_log->add($flash);
Tableau.php:53: 			    { $this->session->set_flashdata('flash_error', 'Erreur de suppression du Tableau' ); }
Tableau.php:56:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Tableau.php:57:       $this->wtd_log->add("Tentative de suppression du tableau ".
Tableau.php:58:                           '<strong>'.$target->titre.'</strong> ('.$target->id.')');
Tableau.php:64:  { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Tableau.php:66: 			if ($this->session->user_access_level<6)
Tableau.php:67:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Tableau.php:72:			 $this->data['tableau'] = $tableau = $this->Tableau_model->get($id);
Tableau.php:74:     { $this->session->set_flashdata('flash_error', "Ce tableau n'existe pas");
Tableau.php:78: 			if ($this->session->user_access_level<$tableau->access_level)
Tableau.php:79:     { $this->session->set_flashdata('flash_error', 'Privilèges insuffisants' );
Tableau.php:83:    $this->admin_breadcrumbs->unshift(2, 'Editer un tableau', 'admin/tableau/edit/'.$id);
Tableau.php:84:	   $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();
Tableau.php:86:				$this->form_validation->set_rules('titre','titre','required');
Tableau.php:88:   	if($this->form_validation->run() == TRUE)
Tableau.php:89:	    { $params = array(	'titre'        => $this->input->post('titre'),
Tableau.php:90:                        'access_level' => $this->input->post('access_level'),
Tableau.php:93:	  				$this->Tableau_model->update($id,$params);
Tableau.php:94:       $flash = 'Le tableau <strong>'.$this->input->post('titre').'</strong>/ a été modifié.';
Tableau.php:95:  					$this->session->set_flashdata('flash_message', $flash);
Tableau.php:96:       $this->wtd_log->add($flash);
Tableau.php:100:     { $this->session->set_flashdata('flash_error', validation_errors() ); }
Tableau.php:102:    $this->data['courbes'] = $this->Tableau_model->get_courbes($tableau->id);                                  /* Get all ups */
Tableau.php:103:    $this->data["access_level"] = $tableau->access_level;
Tableau.php:104:		  $this->data['titre'] = array(	'name'  => 'titre',
Tableau.php:107:                                  'class' => 'form-control',
Tableau.php:108:	                                 'value' => $this->form_validation->set_value('titre', $tableau->titre)
Tableau.php:111:		  $this->template->admin_render('admin/tableau/edit', $this->data);
Tableau.php:115:  { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Tableau.php:122:	   $this->Tableau_model->add_courbe($data);
Tableau.php:124:	   $this->session->set_flashdata('flash_message', $flash);
Tableau.php:125:    $this->wtd_log->add($flash);
Tableau.php:130:  { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Tableau.php:132:   	$data = array( 'tech_id'          => $this->input->post("tech_id"),
Tableau.php:133:                   'acronyme'         => $this->input->post("acronyme"),
Tableau.php:134:                   'color'            => $this->input->post("color"),
Tableau.php:136:	   $this->Tableau_model->set_courbe($courbe_id,$data);
Tableau.php:138:	   $this->session->set_flashdata('flash_message', $flash);
Tableau.php:139:    $this->wtd_log->add($flash);
Tableau.php:144:  { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Tableau.php:146:	   $this->Tableau_model->del_courbe($courbe_id);
Tableau.php:148:	   $this->session->set_flashdata('flash_message', $flash);
Tableau.php:149:    $this->wtd_log->add($flash);
Tableau.php:153:/*----------------------------------------------------------------------------------------------------------------------------*/
Ups.php:9:    $this->load->model('Ups_model');
Ups.php:10:    $this->admin_page_title->push('Gérer les Onduleurs');
Ups.php:11:    $this->admin_breadcrumbs->unshift(1, 'Gestion des Onduleurs', 'admin/ups');
Ups.php:12:    $this->data['pagetitle'] = $this->admin_page_title->show();
Ups.php:13:    $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();                                              /* Breadcrumbs */
Ups.php:18:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth/login', 'refresh');	}
Ups.php:19:    $this->data['onduleurs'] = $this->Ups_model->get_all();                                                    /* Get all ups */
Ups.php:20:    $this->template->admin_render('admin/ups/index', $this->data);                                           /* Load Template */
Ups.php:24:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth/login', 'refresh');	}
Ups.php:25:    $this->data['onduleurs'] = $this->wtd_webservice->get_primary("/process/ups/list");                        /* Get all ups */
Ups.php:26:    $this->template->admin_render('admin/ups/run', $this->data);                                             /* Load Template */
Ups.php:30:    { if ( ! $this->wtd_auth->logged_in() ) { redirect('auth', 'refresh'); }
Ups.php:33:      $ups = $this->Ups_model->get($id);
Ups.php:35:       { $this->session->set_flashdata('flash_error', 'Ups '.$id.' inconnu' );
Ups.php:38:      $this->Ups_model->activate($id);
Ups.php:39:      $this->wtd_log->add("Wago/Ups ".$ups->id." (".$ups->ups."@".$ups->host.") activé");
Ups.php:40:      $this->wtd_webservice->send('/process/reload/ups');
Ups.php:45:    { if ( ! $this->wtd_auth->logged_in() ) { redirect('auth', 'refresh'); }
Ups.php:48:      $ups = $this->Ups_model->get($id);
Ups.php:50:       { $this->session->set_flashdata('flash_error', 'Wago/Ups '.$id.' inconnu' );
Ups.php:53:      $this->Ups_model->deactivate($id);
Ups.php:54:      $this->wtd_log->add("Wago/Ups ".$ups->id." (".$ups->ups."@".$ups->host.") désactivé");
Ups.php:55:      $this->wtd_webservice->send('/process/reload/ups');
Ups.php:61:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Ups.php:64:                   'tech_id'        => "NEW-".date("Ymd-His"),
Ups.php:72:  		if ($this->Ups_model->add($data))
Ups.php:74:       $this->wtd_log->add($flash);
Ups.php:75:       $this->session->set_flashdata('flash_message', $flash );
Ups.php:78:	    { $this->session->set_flashdata('flash_error', "Erreur lors de l'ajout Onduleur" );
Ups.php:87:   	if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Ups.php:89:    $ups = $this->Ups_model->get($id);
Ups.php:91:     { $this->Ups_model->delete($id);
Ups.php:92:       $flash = "Onduleur ".$ups->ups."@".$ups->host.") supprimé";
Ups.php:93:       $this->session->set_flashdata('flash_message', $flash );
Ups.php:94:       $this->wtd_log->add( $flash );
Ups.php:95:       $this->wtd_webservice->send('/process/reload/ups');
Ups.php:98:     { $this->session->set_flashdata('flash_error', 'Tentative de suppression du ups '.$id.' inconnu' );
Ups.php:99:       $this->wtd_log->add("Onduleur ".$ups->id." inconnu ");
Ups.php:106:	 {	if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Ups.php:108:    $this->data["ups"] = $ups = $this->Ups_model->get($id);
Ups.php:110:     { $this->session->set_flashdata('flash_error', 'UPS inconnu' );
Ups.php:114:    $this->admin_breadcrumbs->unshift(2, "Edition de l'onduleur <strong>".$ups->tech_id, "</strong>admin/ups/edit");
Ups.php:115:    $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();
Ups.php:119:		  $this->form_validation->set_rules('tech_id', 'Tech_ID', 'required');
Ups.php:120:    $this->form_validation->set_rules('name', 'Name', 'required');
Ups.php:121:    $this->form_validation->set_rules('host', 'Host', 'required');
Ups.php:123:		 	if ($this->form_validation->run() == TRUE)
Ups.php:124:		   {	$data = array( 'tech_id'        => strtoupper($this->input->post('tech_id')),
Ups.php:125:                      'enable'         => (null !== $this->input->post('enable') ? TRUE : FALSE),
Ups.php:126:                      'date_create'    => date("Y-m-d H:i:s"),
Ups.php:127:                      'name'           => $this->input->post('name'),
Ups.php:128:                      'host'           => $this->input->post('host'),
Ups.php:129:                      'username'       => $this->input->post('username'),
Ups.php:130:                      'password'       => $this->input->post('password'),
Ups.php:131:					                 'libelle'        => $this->input->post('libelle'),
Ups.php:134:     		if ($this->Ups_model->update($ups->id, $data))
Ups.php:135:		      { $flash = "Onduleur <strong>".$ups->tech_id."</strong> (".$ups->name."@".$ups->host.") modifié.";
Ups.php:136:          $this->wtd_log->add($flash);
Ups.php:137:          $this->session->set_flashdata('flash_message', $flash );
Ups.php:138:			       $this->wtd_webservice->send('/process/reload/ups');
Ups.php:142: 			    { $this->session->set_flashdata('flash_error', 'Erreur de mise à jour Onduleur'.$ups->tech_id );
Ups.php:146:    else $this->session->set_flashdata('flash_error', validation_errors() );
Ups.php:148:    $this->data['username'] = array(	'name'  => 'username',
Ups.php:151:                                     'class' => 'form-control',
Ups.php:152:			                                  'value' => $this->form_validation->set_value('username', $ups->username)
Ups.php:154:    $this->data['password'] = array(	'name'  => 'password',
Ups.php:157:                                     'class' => 'form-control',
Ups.php:158:			                                  'value' => $this->form_validation->set_value('password', $ups->password)
Ups.php:160:    $this->data['name']     = array(	'name'  => 'name',
Ups.php:163:                                     'class' => 'form-control',
Ups.php:164:			                                  'value' => $this->form_validation->set_value('name', $ups->name)
Ups.php:166:    $this->data['host']     = array(	'name'  => 'host',
Ups.php:169:                                     'class' => 'form-control',
Ups.php:170:			                                  'value' => $this->form_validation->set_value('host', $ups->host)
Ups.php:172:    $this->data['tech_id']  = array(	'name'  => 'tech_id',
Ups.php:175:                                     'class' => 'form-control',
Ups.php:176:			                                  'value' => $this->form_validation->set_value('tech_id', $ups->tech_id)
Ups.php:178:    $this->data['enable']   = array(	'name'  => 'enable',
Ups.php:180:			                                  'checked' => $this->form_validation->set_value('enable', $ups->enable)
Ups.php:182:		  $this->data['libelle']  = array(	'name'  => 'libelle',
Ups.php:185:                                     'class' => 'form-control',
Ups.php:186:                                     'value' => $this->form_validation->set_value('libelle', $ups->libelle)
Ups.php:188:		  $this->template->admin_render('admin/ups/edit', $this->data);
Ups.php:191:/*----------------------------------------------------------------------------------------------------------------------------*/
Users.php:9:    $this->lang->load('admin/users');
Users.php:12:    $this->admin_page_title->push(lang('menu_users'));
Users.php:13:    $this->data['pagetitle'] = $this->admin_page_title->show();
Users.php:16:    $this->admin_breadcrumbs->unshift(1, 'Liste des utilisateurs', 'admin/users');
Users.php:21:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Users.php:22:    $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();                                              /* Breadcrumbs */
Users.php:23:    $this->data['users'] = $this->wtd_auth_model->user_list()->result();                                     /* Get all users */
Users.php:25:    $this->template->admin_render('admin/users/index', $this->data);                                         /* Load Template */
Users.php:30:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Users.php:32:    $this->admin_breadcrumbs->unshift(2, lang('menu_users_create'), 'admin/users/create');
Users.php:33:    $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();
Users.php:35:		  $this->data['access'] = $this->session->user_access_level;
Users.php:38:		  $this->form_validation->set_rules('sms_phone', 'Téléphone', 'required');
Users.php:39:    $this->form_validation->set_rules('user_name', 'Login', 'required|is_unique[users.username]');
Users.php:40:  		$this->form_validation->set_rules('email', 'E-Mail', 'required|valid_email');
Users.php:41:  		$this->form_validation->set_rules('password', 'lang:users_password', 'required|min_length[' . $this->config->item('min_password_length').
Users.php:42:                                                                         ']|max_length[' . $this->config->item('max_password_length') .
Users.php:44:  		$this->form_validation->set_rules('password_confirm', 'lang:users_password_confirm', 'required');
Users.php:46:		 	if ($this->form_validation->run() == TRUE)
Users.php:47:		   {	$data = array( 'username'       => $this->input->post('user_name'),
Users.php:49:                      'date_create'    => date("Y-m-d H:i:s"),
Users.php:50:                      'sms_phone'      => $this->input->post('sms_phone'),
Users.php:51:					                 'comment'        => $this->input->post('comment'),
Users.php:52:					                 'email'          => strtolower($this->input->post('email')),
Users.php:53:					                 'imsg_enable'    => $this->input->post('imsg_enable') !== NULL ? TRUE : FALSE,
Users.php:54:					                 'imsg_jabberid'  => $this->input->post('imsg_jabberid'),
Users.php:55:					                 'imsg_allow_cde' => $this->input->post('imsg_allow_cde') !== NULL ? TRUE : FALSE,
Users.php:56:					                 'password'       => $this->input->post('password')
Users.php:59:       if ($this->input->post('access_level') < $this->session->user_access_level)
Users.php:60:        { $data['access_level'] = $this->input->post('access_level'); }
Users.php:62:     		if ($this->wtd_auth_model->register($data))
Users.php:63:		      { $this->session->set_flashdata('flash_message', 'Utilisateur '.$this->input->post('user_name').' ajouté' );
Users.php:64:          $this->wtd_log->add("Création de l'utilisateur ".$this->input->post('user_name') );
Users.php:68: 			    { $this->session->set_flashdata('flash_error', 'Erreur de mise à jour utilisateur' );
Users.php:72:    else $this->session->set_flashdata('flash_error', validation_errors() );
Users.php:74:    $this->data['user_name'] = array(	'name'  => 'user_name',
Users.php:77:                                      'class' => 'form-control',
Users.php:78:			                                   'value' => $this->form_validation->set_value('username', $this->input->post('user_name'))
Users.php:80:		  $this->data['comment'] = array(	'name'  => 'comment',
Users.php:83:                                    'class' => 'form-control',
Users.php:84:                                    'value' => $this->form_validation->set_value('comment', $this->input->post('comment'))
Users.php:86:  		$this->data['access_level'] = array(	'name'  => 'access_level',
Users.php:89:                                         'class' => 'form-control',
Users.php:90:                                         'value' => $this->form_validation->set_value('access_level', $this->input->post('access_level'))
Users.php:92:		  $this->data['sms_phone'] = array( 'name'  => 'sms_phone',
Users.php:95:                                      'pattern' => '^((\+\d{1,3}(-| )?\(?\d\)?(-| )?\d{1,5})|(\(?\d{2,6}\)?))(-| )?(\d{3,4})(-| )?(\d{4})(( x| ext)\d{1,5}){0,1}$',
Users.php:96:                                      'class' => 'form-control',
Users.php:97:                                      'value' => $this->form_validation->set_value('sms_phone', $this->input->post('sms_phone'))
Users.php:99:    $this->data['imsg_enable'] = array(	'name'  => 'imsg_enable',
Users.php:101:                                        'checked' => $this->form_validation->set_value('imsg_enable', $this->input->post('imsg_enable'))
Users.php:103:		  $this->data['imsg_allow_cde'] = array(	'name'  => 'imsg_allow_cde',
Users.php:106:                                           'checked' => $this->form_validation->set_value('imsg_allow_cde', $this->input->post('imsg_allow_cde'))
Users.php:108:		  $this->data['imsg_jabberid'] = array(	'name'  => 'imsg_jabberid',
Users.php:111:                                          'class' => 'form-control',
Users.php:112:                                          'value' => $this->form_validation->set_value('imsg_jabberid', $this->input->post('imsg_jabberid'))
Users.php:114:		  $this->data['email'] = array(	'name'  => 'email',
Users.php:117:                                  'class' => 'form-control',
Users.php:118:                                  'value' => $this->form_validation->set_value('email')
Users.php:120:    $this->data['password'] = array(	'name' => 'password',
Users.php:122:                                     'class' => 'form-control',
Users.php:125:    $this->data['password_confirm'] = array( 'name' => 'password_confirm',
Users.php:127:                                             'class' => 'form-control',
Users.php:132:    $this->template->admin_render('admin/users/create', $this->data);
Users.php:138:   	if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Users.php:140:    $target_user = $this->wtd_auth_model->user($id)->row();
Users.php:142:     { $this->session->set_flashdata('flash_error', 'Utilisateur inconnu' );
Users.php:145:    if ($target_user->access_level < $this->session->user_access_level)
Users.php:146:     { if($this->wtd_auth_model->delete($target_user->id))
Users.php:147: 			    { $flash="Utilisateur ".$target_user->username." (".$target_user->id.") supprimé";
Users.php:148:          $this->session->set_flashdata('flash_message', $flash );
Users.php:149:          $this->wtd_log->add($flash);
Users.php:152: 			    { $this->session->set_flashdata('flash_error', 'Erreur de suppression utilisateur' ); }
Users.php:155:     { $this->session->set_flashdata('flash_error', 'Permission error' );
Users.php:156:       $this->wtd_log->add("Tentative de suppression de l'utilisateur ".$target_user->id." (".$target_user->username.")");
Users.php:163:   	if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');	}
Users.php:166:    $this->admin_breadcrumbs->unshift(2, lang('menu_users_edit'), 'admin/users/edit');
Users.php:167:    $this->data['breadcrumb'] = $this->admin_breadcrumbs->show();
Users.php:169:  		$this->data['access'] = $this->session->user_access_level;
Users.php:171:    $this->form_validation->set_rules('sms_phone', 'Téléphone', 'required');
Users.php:172:    $this->form_validation->set_rules('email', 'E-Mail', 'required|valid_email');
Users.php:173:    if ($this->input->post('password') OR $this->input->post('password_confirm'))
Users.php:174:     { $this->form_validation->set_rules('password', 'Mot de passe',
Users.php:175:                                         'required|min_length[' . $this->config->item('min_password_length') .
Users.php:176:                                         ']|max_length[' . $this->config->item('max_password_length') .
Users.php:178:	      $this->form_validation->set_rules('password_confirm', 'Confirmation Mot de passe', 'required');
Users.php:181: 			if ($this->form_validation->run() == TRUE)
Users.php:182:     {	$new_data = array( 'sms_phone'      => $this->input->post('sms_phone'),
Users.php:183:    		                    'comment'        => $this->input->post('comment'),
Users.php:184:		                        'email'          => strtolower($this->input->post('email')),
Users.php:185:                          'imsg_enable'    => $this->input->post('imsg_enable') !== NULL ? TRUE : FALSE,
Users.php:186:					                     'imsg_jabberid'  => $this->input->post('imsg_jabberid'),
Users.php:187:					                     'imsg_allow_cde' => $this->input->post('imsg_allow_cde') !== NULL ? TRUE : FALSE,
Users.php:190:       if ($this->input->post('access_level') < $this->session->user_access_level && $id!=$this->session->user_id)
Users.php:191:        { $new_data['access_level'] = $this->input->post('access_level'); }
Users.php:193:       if ($this->input->post('password'))	{	$new_data['password'] = $this->input->post('password');	}
Users.php:195:       if($this->wtd_auth_model->update($id, $new_data))
Users.php:196: 			    { $flash='Utilisateur '.$user->username.' ('.$id.') modifié';
Users.php:197:          $this->session->set_flashdata('flash_message', $flash );
Users.php:198:          $this->wtd_log->add($flash);
Users.php:202: 			    { $flash='Erreur de mise à jour utilisateur '.$user->username;
Users.php:203:          $this->session->set_flashdata('flash_error', $flash );
Users.php:204:          $this->wtd_log->add( $flash );
Users.php:208:    else $this->session->set_flashdata('flash_error', validation_errors() );
Users.php:210:    $this->data['user'] = $user = $this->wtd_auth_model->user($id)->row();
Users.php:212:     { $this->session->set_flashdata('flash_error', 'Utilisateur inconnu' );
Users.php:215:		  $this->data['user_name'] = array(	'name'  => 'user_name',
Users.php:218:                                      'class' => 'form-control',
Users.php:220:			                                   'value' => $this->form_validation->set_value('username', $user->username)
Users.php:222:		  $this->data['comment'] = array(	'name'  => 'comment',
Users.php:225:                                    'class' => 'form-control',
Users.php:226:                                    'value' => $this->form_validation->set_value('comment', $user->comment)
Users.php:228:    if ($id==$this->session->user_id) { $this->data['disabled'] = 'TRUE'; }
Users.php:229:                                 else { $this->data['disabled'] = 'FALSE'; }
Users.php:230:  		$this->data['access_level'] = array(	'name'  => 'access_level',
Users.php:233:                                         'class' => 'form-control',
Users.php:234:			                                      'value' => $this->form_validation->set_value('access_level', $user->access_level)
Users.php:236:		  $this->data['sms_phone'] = array( 'name'  => 'sms_phone',
Users.php:239:                                      'pattern' => '^((\+\d{1,3}(-| )?\(?\d\)?(-| )?\d{1,5})|(\(?\d{2,6}\)?))(-| )?(\d{3,4})(-| )?(\d{4})(( x| ext)\d{1,5}){0,1}$',
Users.php:240:                                      'class' => 'form-control',
Users.php:241:			                                   'value' => $this->form_validation->set_value('sms_phone', $user->sms_phone)
Users.php:243:		  $this->data['imsg_enable'] = array(	'name'  => 'imsg_enable',
Users.php:245:                                        'checked' => $this->form_validation->set_value('imsg_enable', $user->imsg_enable)
Users.php:248:		  $this->data['imsg_allow_cde'] = array(	'name'  => 'imsg_allow_cde',
Users.php:250:                                           'checked' => $this->form_validation->set_value('imsg_allow_cde', $user->imsg_allow_cde)
Users.php:253:		  $this->data['imsg_jabberid'] = array(	'name'  => 'imsg_jabberid',
Users.php:256:                                          'class' => 'form-control',
Users.php:257:                                          'value' => $this->form_validation->set_value('imsg_jabberid', $user->imsg_jabberid)
Users.php:259:		  $this->data['email'] = array(	'name'  => 'email',
Users.php:262:                                  'class' => 'form-control',
Users.php:263:                                  'value' => $this->form_validation->set_value('email', $user->email)
Users.php:265:		  $this->data['password'] = array(	'name' => 'password',
Users.php:267:                                     'class' => 'form-control',
Users.php:271:		  $this->data['password_confirm'] = array( 'name' => 'password_confirm',
Users.php:273:                                             'class' => 'form-control',
Users.php:278:		  $this->template->admin_render('admin/users/edit', $this->data);
Users.php:282:	 { if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');		}
Users.php:285:			 $target_user = $this->wtd_auth_model->user($id)->row();
Users.php:287:     { $this->session->set_flashdata('flash_error', 'Utilisateur '.$id.' inconnu' );
Users.php:288:       return($this->index());
Users.php:290:    if ($target_user->access_level < $this->session->user_access_level)
Users.php:291:     {	$this->wtd_auth_model->activate($id);
Users.php:292:       $this->wtd_log->add("Utilisateur ".$target_user->id." (".$target_user->username.") activé");
Users.php:294:    else { $this->wtd_log->add("Tentative d'activation de l'utilisateur ".$target_user->id." (".$target_user->username.")"); }
Users.php:299: 	{ if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');		}
Users.php:302:			 $target_user = $this->wtd_auth_model->user($id)->row();
Users.php:304:     { $this->session->set_flashdata('flash_error', 'Utilisateur '.$id.' inconnu' );
Users.php:307:    if ($target_user->access_level < $this->session->user_access_level)
Users.php:308:     {	$this->wtd_auth_model->deactivate($id);
Users.php:309:       $this->wtd_log->add("Utilisateur ".$target_user->id." (".$target_user->username.") désactivé");
Users.php:311:    else { $this->wtd_log->add("Tentative de désactivation de l'utilisateur ".$id); }
Users.php:316:	 {	if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');		}
Users.php:319:			 $target_user = $this->wtd_auth_model->user($id)->row();
Users.php:321:     { $this->session->set_flashdata('flash_error', 'Utilisateur '.$id.' inconnu' );
Users.php:322:       return($this->index());
Users.php:324:    if ($target_user->access_level < $this->session->user_access_level)
Users.php:325:     {	$this->wtd_auth_model->sms_activate($id);
Users.php:326:       $this->wtd_log->add("Utilisateur ".$target_user->id." (".$target_user->username.") SMS activé");
Users.php:328:    else { $this->wtd_log->add("Tentative d'activation SMS pour utilisateur ".$target_user->id." (".$target_user->username.") "); }
Users.php:333: 	{	if ( ! $this->wtd_auth->logged_in() ) {	redirect('auth', 'refresh');		}
Users.php:336:			 $target_user = $this->wtd_auth_model->user($id)->row();
Users.php:338:     { $this->session->set_flashdata('flash_error', 'Utilisateur '.$id.' inconnu' );
Users.php:341:    if ($target_user->access_level < $this->session->user_access_level)
Users.php:342:     {	$this->wtd_auth_model->sms_deactivate($id);
Users.php:343:       $this->wtd_log->add("Utilisateur ".$id." SMS désactivé");
Users.php:345:    else { $this->wtd_log->add("Tentative de désactivation SMS pour utilisateur ".$target_user->id." (".$target_user->username.") "); }
Users.php:349:/*----------------------------------------------------------------------------------------------------------------------------*/
