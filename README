
 - To prepare installation :
       [root@Server ]# useradd watchdog -d /var/~Home
       [root@Server ~]# passwd watchdog

       [root@Server ~]# urpmi automake make libtool
       [root@Server ~]# urpmi bison flex

       [root@Server ~]# urpmi gcc-c++
       [root@Server ~]# urpmi glib2-devel libgnomeui2-devel gtksourceview-devel
       [root@Server ~]# urpmi goocanvas-devel libvlc-devel nut-devel mysql-devel
       [root@Server ~]# urpmi gnokii-devel gtkdatabox-devel ungif4-devel

 - To Compile libvlc-gtk :

       [watchdog@Server ~]$ mkdir directory; cd directory
       [watchdog@Server directory]$ svn checkout http://libvlc-gtk.googlecode.com/svn/trunk/ .
       [watchdog@Server directory]$ aclocal; libtoolize; autoheader; autoconf; automake --add-missing
       [watchdog@Server directory]$ ./configure; make
       [watchdog@Server directory]$ su
       Password:
       [root@Server directory]# make install
       [root@Server directory]# exit
       [watchdog@Server directory]$ cd ..
       [watchdog@Server ~]$ rm -rf directory


 - To compile and install ~ :

       [watchdog@Server ~]$ aclocal; libtoolize; autoheader; autoconf; automake --add-missing
       [watchdog@Server ~]$ ./configure
       [watchdog@Server ~]$ su
       Password:
       [root@Server WatchdogHome]# make install
       [root@Server WatchdogHome]# exit

 - Before running :
       [root@Server ~]# urpmi MySQL-server
       [root@Server ~]# /usr/bin/mysqladmin -u root password test   ! Change "test" by a reel password
       [root@Server ~]# /usr/bin/mysqladmin -u root -p create ~DB
       [root@test SQL]$ /usr/bin/mysql_secure_installation
       [root@Server ~]# mysql -u root -p ~DB
       Enter password: 
       Welcome to the MySQL monitor.  Commands end with ; or \g.
       mysql> CREATE USER 'watchdog' IDENTIFIED BY 'seb';
       Query OK, 0 rows affected (0.00 sec)
       mysql> GRANT SELECT, INSERT, UPDATE, DELETE, EVENT ON ~DB.* TO 'watchdog';
       mysql> source init_db.sql
       mysql> exit

 - SSL and Certificate Initialisation
       [watchdog@Server ~]$ openssl req -newkey rsa:2048 -nodes -x509 -days 3650 -keyout cakey.pem -out cacert.pem
       [watchdog@Server ~]$ openssl req -newkey rsa:2048 -nodes -days 3650 -keyout serveurkey.pem -out serveurcert.req
       [watchdog@Server ~]$ mkdir newcerts
       [watchdog@Server ~]$ touch index.txt
       [watchdog@Server ~]$ echo "01" > serial
       [watchdog@Server ~]$ openssl ca -config openssl.cnf -in serveurcert.req -out serveursigne.pem

       [watchdog@Server ~]$ Watchdogd --initrsa
       [watchdog@Server ~]$ Watchdogd

 - Preparation of Client Side
       [root@Client root]# useradd watchdoguser
       [root@Client root]# passwd watchdoguser

       [watchdoguser@Client ~]$ mkdir .watchdog; cd .watchdog
       [watchdoguser@Client .watchdog]$ openssl req -newkey rsa:2048 -nodes -days 3650 -keyout clientkey.pem -out clientcert.req

       [watchdog@Server ~]$ openssl ca -config openssl.cnf -in clientcert.req -out clientsigne.pem
       [watchdog@Server ~]$ scp clientcertsigne.pem watchdog@client:.watchdog/




